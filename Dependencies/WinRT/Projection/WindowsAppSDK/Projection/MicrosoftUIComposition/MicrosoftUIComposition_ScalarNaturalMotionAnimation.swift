// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WindowsAppSDK_ABI
import UWP


/// The base Scalar NaturalMotionAnimation used to target a Scalar property.
open class MicrosoftUIComposition_ScalarNaturalMotionAnimation: MicrosoftUIComposition_NaturalMotionAnimation, @unchecked Sendable {
    /// A value that indicates where the animation ends. The default is null. If left null, the ending value of the property being animated is used.
    public var finalValue: Swift.Float? {
        get throws {
            try _iscalarNaturalMotionAnimation.get_FinalValue()
        }
    }

    /// Sets a value that indicates where the animation ends.
    /// - Parameter newValue: A value that indicates where the animation ends. The default is null. If left null, the ending value of the property being animated is used.
    public func finalValue(_ value: Swift.Float?) throws {
        try _iscalarNaturalMotionAnimation.put_FinalValue(value)
    }

    /// Gets or sets a value that indicates where the animation ends.
    public var finalValue_: Swift.Float? {
        get {
            try! self.finalValue
        }
        set {
            try! self.finalValue(newValue)
        }
    }

    /// A value that indicates where the animation starts. The default is null. If left null, the beginning value of the property being animated is used.
    public var initialValue: Swift.Float? {
        get throws {
            try _iscalarNaturalMotionAnimation.get_InitialValue()
        }
    }

    /// Sets a value that indicates where the animation starts.
    /// - Parameter newValue: A value that indicates where the animation starts. The default is null. If left null, the beginning value of the property being animated is used.
    public func initialValue(_ value: Swift.Float?) throws {
        try _iscalarNaturalMotionAnimation.put_InitialValue(value)
    }

    /// Gets or sets a value that indicates where the animation starts.
    public var initialValue_: Swift.Float? {
        get {
            try! self.initialValue
        }
        set {
            try! self.initialValue(newValue)
        }
    }

    /// The velocity that the animation starts with. The default is 0.
    public var initialVelocity: Swift.Float {
        get throws {
            try _iscalarNaturalMotionAnimation.get_InitialVelocity()
        }
    }

    /// Sets the velocity that the animation starts with.
    /// - Parameter newValue: The velocity that the animation starts with. The default is 0.
    public func initialVelocity(_ value: Swift.Float) throws {
        try _iscalarNaturalMotionAnimation.put_InitialVelocity(value)
    }

    /// Gets or sets the velocity that the animation starts with.
    public var initialVelocity_: Swift.Float {
        get {
            try! self.initialVelocity
        }
        set {
            try! self.initialVelocity(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimation>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIScalarNaturalMotionAnimation: COM.COMReference<SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimation>.Optional = .none

    internal var _iscalarNaturalMotionAnimation: COM.COMInterop<SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimation> {
        get throws {
            try _lazyIScalarNaturalMotionAnimation.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimation.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Composition.ScalarNaturalMotionAnimation")
            }
        }
    }

    private static var _lazyIScalarNaturalMotionAnimationFactory: COM.COMReference<SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimationFactory>.Optional = .none

    internal static var _iscalarNaturalMotionAnimationFactory: COM.COMInterop<SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimationFactory> {
        get throws {
            try _lazyIScalarNaturalMotionAnimationFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimationFactory.self)).cast()
            }
        }
    }
}