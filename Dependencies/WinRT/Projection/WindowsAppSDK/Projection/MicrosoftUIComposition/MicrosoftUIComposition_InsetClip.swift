// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WindowsAppSDK_ABI
import UWP


/// Represents a rectangle that clips a portion of a visual. The portion of the visual inside the rectangle is visible; the portion of the visual outside the rectangle is clipped.
public final class MicrosoftUIComposition_InsetClip: MicrosoftUIComposition_CompositionClip, @unchecked Sendable {
    /// The offset from the bottom of the visual.
    public var bottomInset: Swift.Float {
        get throws {
            try _iinsetClip.get_BottomInset()
        }
    }

    /// Sets the offset from the bottom of the visual. The portion of the visual below the BottomInset will be clipped. Animatable.
    /// - Parameter newValue: The offset from the bottom of the visual.
    public func bottomInset(_ value: Swift.Float) throws {
        try _iinsetClip.put_BottomInset(value)
    }

    /// Gets or sets the offset from the bottom of the visual. The portion of the visual below the BottomInset will be clipped. Animatable.
    public var bottomInset_: Swift.Float {
        get {
            try! self.bottomInset
        }
        set {
            try! self.bottomInset(newValue)
        }
    }

    /// The offset from the left of the visual.
    public var leftInset: Swift.Float {
        get throws {
            try _iinsetClip.get_LeftInset()
        }
    }

    /// Sets the offset from the left of the visual. The portion of the visual to the left of the LeftInset will be clipped. Animatable.
    /// - Parameter newValue: The offset from the left of the visual.
    public func leftInset(_ value: Swift.Float) throws {
        try _iinsetClip.put_LeftInset(value)
    }

    /// Gets or sets the offset from the left of the visual. The portion of the visual to the left of the LeftInset will be clipped. Animatable.
    public var leftInset_: Swift.Float {
        get {
            try! self.leftInset
        }
        set {
            try! self.leftInset(newValue)
        }
    }

    /// The offset from the right of the visual.
    public var rightInset: Swift.Float {
        get throws {
            try _iinsetClip.get_RightInset()
        }
    }

    /// Sets the offset from the right of the visual. The portion of the visual to the right of the RightInset will be clipped. Animatable.
    /// - Parameter newValue: The offset from the right of the visual.
    public func rightInset(_ value: Swift.Float) throws {
        try _iinsetClip.put_RightInset(value)
    }

    /// Gets or sets the offset from the right of the visual. The portion of the visual to the right of the RightInset will be clipped. Animatable.
    public var rightInset_: Swift.Float {
        get {
            try! self.rightInset
        }
        set {
            try! self.rightInset(newValue)
        }
    }

    /// The offset from the top of the visual.
    public var topInset: Swift.Float {
        get throws {
            try _iinsetClip.get_TopInset()
        }
    }

    /// Sets the offset from the top of the visual. The portion of the visual above the TopInset will be clipped. Animatable.
    /// - Parameter newValue: The offset from the top of the visual.
    public func topInset(_ value: Swift.Float) throws {
        try _iinsetClip.put_TopInset(value)
    }

    /// Gets or sets the offset from the top of the visual. The portion of the visual above the TopInset will be clipped. Animatable.
    public var topInset_: Swift.Float {
        get {
            try! self.topInset
        }
        set {
            try! self.topInset(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIComposition_IInsetClip>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyIInsetClip: COM.COMReference<SWRT_MicrosoftUIComposition_IInsetClip>.Optional = .none

    internal var _iinsetClip: COM.COMInterop<SWRT_MicrosoftUIComposition_IInsetClip> {
        get throws {
            try _lazyIInsetClip.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_MicrosoftUIComposition_IInsetClip.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Composition.InsetClip")
            }
        }
    }
}