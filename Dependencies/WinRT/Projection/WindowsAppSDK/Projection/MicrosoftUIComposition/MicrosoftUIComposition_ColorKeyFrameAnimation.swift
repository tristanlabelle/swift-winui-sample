// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WindowsAppSDK_ABI
import UWP


/// A time-based animation that targets the Color property with one or more color key frames.

/// The ColorKeyFrameAnimation class is one of the supported types of KeyFrameAnimations that is used to animate the Color property off of the Brush property on a SpriteVisual. When working with ColorKeyFrameAnimation s, utilize Windows.UI.Color objects for the values of keyframes. Utilize the InterpolationColorSpace property to define which color space the system will interpolate through for the animation.
public final class MicrosoftUIComposition_ColorKeyFrameAnimation: MicrosoftUIComposition_KeyFrameAnimation, @unchecked Sendable {
    /// Inserts a key frame.
    /// - Parameter normalizedProgressKey: The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.
    /// - Parameter value: The value of the key frame.
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsUI_Color) throws {
        try _icolorKeyFrameAnimation.insertKeyFrame(normalizedProgressKey, value)
    }

    /// Inserts a key frame with the specified easing function.
    /// - Parameter normalizedProgressKey: The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.
    /// - Parameter value: The value of the key frame.
    /// - Parameter easingFunction: The easing function to use to interpolate between key frames.
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsUI_Color, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        try _icolorKeyFrameAnimation.insertKeyFrameWithEasingFunction(normalizedProgressKey, value, easingFunction)
    }

    /// The color space the color interpolation should run through.
    public var interpolationColorSpace: MicrosoftUIComposition_CompositionColorSpace {
        get throws {
            try _icolorKeyFrameAnimation.get_InterpolationColorSpace()
        }
    }

    /// The color space the color interpolation should run through.

    /// The 
    ///     ColorKeyFrameAnimation.InterpolationColorSpace
    ///    property enables a developer to choose what color space the system will interpolate through when animating between two colors. Developers can choose between the CompositionColorSpace enum values Rgb, Hsl, or Auto (system chosen).
    /// - Parameter newValue: The color space the color interpolation should run through.
    public func interpolationColorSpace(_ value: MicrosoftUIComposition_CompositionColorSpace) throws {
        try _icolorKeyFrameAnimation.put_InterpolationColorSpace(value)
    }

    /// The color space the color interpolation should run through.

    /// The 
    ///     ColorKeyFrameAnimation.InterpolationColorSpace
    ///    property enables a developer to choose what color space the system will interpolate through when animating between two colors. Developers can choose between the CompositionColorSpace enum values Rgb, Hsl, or Auto (system chosen).
    public var interpolationColorSpace_: MicrosoftUIComposition_CompositionColorSpace {
        get {
            try! self.interpolationColorSpace
        }
        set {
            try! self.interpolationColorSpace(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIComposition_IColorKeyFrameAnimation>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyIColorKeyFrameAnimation: COM.COMReference<SWRT_MicrosoftUIComposition_IColorKeyFrameAnimation>.Optional = .none

    internal var _icolorKeyFrameAnimation: COM.COMInterop<SWRT_MicrosoftUIComposition_IColorKeyFrameAnimation> {
        get throws {
            try _lazyIColorKeyFrameAnimation.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_MicrosoftUIComposition_IColorKeyFrameAnimation.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Composition.ColorKeyFrameAnimation")
            }
        }
    }
}