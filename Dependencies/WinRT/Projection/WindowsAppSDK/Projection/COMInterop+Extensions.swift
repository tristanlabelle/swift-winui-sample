// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WindowsAppSDK_ABI
import UWP

// MARK: Microsoft.UI.IColors

public func uuidof(_: SWRT_MicrosoftUI_IColors.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8CF15863, 0x8411, 0x5AFD, 0x946C, 0x328E04DA2F2F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUI_IColors {
}

// MARK: Microsoft.UI.IColorsStatics

public func uuidof(_: SWRT_MicrosoftUI_IColorsStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8620A5B0, 0x015A, 0x57AC, 0xA3F3, 0x895D0B1269AE)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUI_IColorsStatics {
    public func get_AliceBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AliceBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_AntiqueWhite() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AntiqueWhite(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Aqua() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Aqua(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Aquamarine() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Aquamarine(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Azure() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Azure(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Beige() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Beige(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Bisque() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Bisque(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Black() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Black(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_BlanchedAlmond() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BlanchedAlmond(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Blue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Blue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_BlueViolet() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BlueViolet(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Brown() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Brown(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_BurlyWood() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BurlyWood(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_CadetBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CadetBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Chartreuse() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Chartreuse(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Chocolate() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Chocolate(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Coral() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Coral(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_CornflowerBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CornflowerBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Cornsilk() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Cornsilk(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Crimson() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Crimson(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Cyan() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Cyan(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkCyan() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkCyan(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkGoldenrod() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkGoldenrod(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkGray() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkGray(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkKhaki() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkKhaki(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkMagenta() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkMagenta(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkOliveGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkOliveGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkOrange() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkOrange(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkOrchid() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkOrchid(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkRed() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkRed(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkSalmon() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkSalmon(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkSeaGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkSeaGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkSlateBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkSlateBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkSlateGray() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkSlateGray(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkTurquoise() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkTurquoise(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DarkViolet() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DarkViolet(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DeepPink() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DeepPink(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DeepSkyBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DeepSkyBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DimGray() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DimGray(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_DodgerBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DodgerBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Firebrick() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Firebrick(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_FloralWhite() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FloralWhite(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_ForestGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ForestGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Fuchsia() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Fuchsia(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Gainsboro() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Gainsboro(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_GhostWhite() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_GhostWhite(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Gold() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Gold(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Goldenrod() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Goldenrod(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Gray() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Gray(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Green() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Green(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_GreenYellow() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_GreenYellow(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Honeydew() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Honeydew(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_HotPink() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HotPink(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_IndianRed() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IndianRed(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Indigo() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Indigo(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Ivory() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Ivory(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Khaki() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Khaki(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Lavender() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Lavender(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LavenderBlush() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LavenderBlush(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LawnGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LawnGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LemonChiffon() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LemonChiffon(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightCoral() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightCoral(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightCyan() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightCyan(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightGoldenrodYellow() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightGoldenrodYellow(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightGray() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightGray(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightPink() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightPink(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightSalmon() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightSalmon(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightSeaGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightSeaGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightSkyBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightSkyBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightSlateGray() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightSlateGray(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightSteelBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightSteelBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LightYellow() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightYellow(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Lime() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Lime(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_LimeGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LimeGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Linen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Linen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Magenta() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Magenta(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Maroon() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Maroon(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumAquamarine() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumAquamarine(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumOrchid() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumOrchid(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumPurple() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumPurple(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumSeaGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumSeaGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumSlateBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumSlateBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumSpringGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumSpringGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumTurquoise() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumTurquoise(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MediumVioletRed() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MediumVioletRed(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MidnightBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MidnightBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MintCream() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MintCream(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_MistyRose() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MistyRose(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Moccasin() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Moccasin(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_NavajoWhite() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_NavajoWhite(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Navy() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Navy(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_OldLace() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OldLace(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Olive() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Olive(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_OliveDrab() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OliveDrab(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Orange() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orange(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_OrangeRed() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OrangeRed(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Orchid() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orchid(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_PaleGoldenrod() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PaleGoldenrod(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_PaleGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PaleGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_PaleTurquoise() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PaleTurquoise(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_PaleVioletRed() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PaleVioletRed(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_PapayaWhip() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PapayaWhip(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_PeachPuff() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PeachPuff(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Peru() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Peru(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Pink() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Pink(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Plum() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Plum(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_PowderBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PowderBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Purple() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Purple(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Red() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Red(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_RosyBrown() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RosyBrown(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_RoyalBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RoyalBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SaddleBrown() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SaddleBrown(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Salmon() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Salmon(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SandyBrown() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SandyBrown(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SeaGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SeaGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SeaShell() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SeaShell(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Sienna() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Sienna(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Silver() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Silver(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SkyBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SkyBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SlateBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SlateBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SlateGray() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SlateGray(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Snow() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Snow(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SpringGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SpringGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_SteelBlue() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SteelBlue(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Tan() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Tan(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Teal() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Teal(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Thistle() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Thistle(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Tomato() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Tomato(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Transparent() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Transparent(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Turquoise() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Turquoise(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Violet() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Violet(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Wheat() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Wheat(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_White() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_White(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_WhiteSmoke() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_WhiteSmoke(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Yellow() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Yellow(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_YellowGreen() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_YellowGreen(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Composition.IAmbientLight

public func uuidof(_: SWRT_MicrosoftUIComposition_IAmbientLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4540525E, 0xB70D, 0x5A14, 0xBBFA, 0x63BEF42313C7)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IAmbientLight {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IAmbientLight2

public func uuidof(_: SWRT_MicrosoftUIComposition_IAmbientLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3356F963, 0x040C, 0x54D4, 0x9DFC, 0xB61C51AAADD1)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IAmbientLight2 {
    public func get_Intensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Intensity(this, &_result))
        return _result
    }

    public func put_Intensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Intensity(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IAnimationController

public func uuidof(_: SWRT_MicrosoftUIComposition_IAnimationController.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBD0F88A8, 0xA415, 0x5322, 0x8C3D, 0x1A6D9192754F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IAnimationController {
    public func get_PlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PlaybackRate(this, &_result))
        return _result
    }

    public func put_PlaybackRate(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_PlaybackRate(this, value))
    }

    public func get_Progress() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Progress(this, &_result))
        return _result
    }

    public func put_Progress(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Progress(this, value))
    }

    public func get_ProgressBehavior() throws -> MicrosoftUIComposition_AnimationControllerProgressBehavior {
        var _result: SWRT_MicrosoftUIComposition_AnimationControllerProgressBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ProgressBehavior(this, &_result))
        return MicrosoftUIComposition_AnimationControllerProgressBehavior.fromABI(_result)
    }

    public func put_ProgressBehavior(_ value: MicrosoftUIComposition_AnimationControllerProgressBehavior) throws {
        let value_abi = MicrosoftUIComposition_AnimationControllerProgressBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ProgressBehavior(this, value_abi))
    }

    public func pause() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Pause(this))
    }

    public func resume() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Resume(this))
    }
}

// MARK: Microsoft.UI.Composition.IAnimationControllerStatics

public func uuidof(_: SWRT_MicrosoftUIComposition_IAnimationControllerStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB63B0FB6, 0x286B, 0x57AF, 0xB096, 0x16066D43DC00)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IAnimationControllerStatics {
    public func get_MaxPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxPlaybackRate(this, &_result))
        return _result
    }

    public func get_MinPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinPlaybackRate(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.IAnimationObject

public func uuidof(_: SWRT_MicrosoftUIComposition_IAnimationObject.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8F56119D, 0xB96D, 0x58D0, 0x9916, 0xD1C5E390F890)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IAnimationObject {
    public func populatePropertyInfo(_ propertyName: Swift.String, _ propertyInfo: MicrosoftUIComposition_AnimationPropertyInfo?) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var propertyInfo_abi = try MicrosoftUIComposition_AnimationPropertyInfoBinding.toABI(propertyInfo)
        defer { MicrosoftUIComposition_AnimationPropertyInfoBinding.release(&propertyInfo_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.PopulatePropertyInfo(this, propertyName_abi, propertyInfo_abi))
    }
}

// MARK: Microsoft.UI.Composition.IAnimationPropertyInfo

public func uuidof(_: SWRT_MicrosoftUIComposition_IAnimationPropertyInfo.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3D721A2B, 0x9CCD, 0x57BD, 0xB6C2, 0xCE9E04AE3606)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IAnimationPropertyInfo {
    public func get_AccessMode() throws -> MicrosoftUIComposition_AnimationPropertyAccessMode {
        var _result: SWRT_MicrosoftUIComposition_AnimationPropertyAccessMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AccessMode(this, &_result))
        return MicrosoftUIComposition_AnimationPropertyAccessMode.fromABI(_result)
    }

    public func put_AccessMode(_ value: MicrosoftUIComposition_AnimationPropertyAccessMode) throws {
        let value_abi = MicrosoftUIComposition_AnimationPropertyAccessMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AccessMode(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IAnimationPropertyInfo2

public func uuidof(_: SWRT_MicrosoftUIComposition_IAnimationPropertyInfo2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xED14FB09, 0xDE28, 0x540D, 0x9311, 0x80CFDCC97338)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IAnimationPropertyInfo2 {
    public func getResolvedCompositionObject() throws -> MicrosoftUIComposition_CompositionObject? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionObject>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResolvedCompositionObject(this, &_result))
        return MicrosoftUIComposition_CompositionObjectBinding.fromABI(consuming: &_result)
    }

    public func getResolvedCompositionObjectProperty() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResolvedCompositionObjectProperty(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.IBackEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_IBackEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x27C75BAB, 0x317A, 0x5362, 0xBF25, 0xFFFBB98A51B9)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IBackEasingFunction {
    public func get_Mode() throws -> MicrosoftUIComposition_CompositionEasingFunctionMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionEasingFunctionMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mode(this, &_result))
        return MicrosoftUIComposition_CompositionEasingFunctionMode.fromABI(_result)
    }

    public func get_Amplitude() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Amplitude(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.IBooleanKeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IBooleanKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7FE485E9, 0xE874, 0x5FF3, 0x8DDC, 0x826C3818BFC3)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IBooleanKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value))
    }
}

// MARK: Microsoft.UI.Composition.IBounceEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_IBounceEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFA11F3C0, 0x697B, 0x562F, 0xAF46, 0xC6AF666B6EC4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IBounceEasingFunction {
    public func get_Mode() throws -> MicrosoftUIComposition_CompositionEasingFunctionMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionEasingFunctionMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mode(this, &_result))
        return MicrosoftUIComposition_CompositionEasingFunctionMode.fromABI(_result)
    }

    public func get_Bounces() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Bounces(this, &_result))
        return _result
    }

    public func get_Bounciness() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Bounciness(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IBounceScalarNaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1C0C4B76, 0xC4D6, 0x5DD9, 0x8DD6, 0xDBE35C7B7E55)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IBounceScalarNaturalMotionAnimation {
    public func get_Acceleration() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Acceleration(this, &_result))
        return _result
    }

    public func put_Acceleration(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Acceleration(this, value))
    }

    public func get_Restitution() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Restitution(this, &_result))
        return _result
    }

    public func put_Restitution(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Restitution(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IBounceVector2NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEC528D1F, 0x22E2, 0x573E, 0xAB87, 0x757071E50012)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IBounceVector2NaturalMotionAnimation {
    public func get_Acceleration() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Acceleration(this, &_result))
        return _result
    }

    public func put_Acceleration(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Acceleration(this, value))
    }

    public func get_Restitution() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Restitution(this, &_result))
        return _result
    }

    public func put_Restitution(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Restitution(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IBounceVector3NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE3E2EE98, 0x1211, 0x586D, 0x8A6D, 0xFEA5EFC3957F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IBounceVector3NaturalMotionAnimation {
    public func get_Acceleration() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Acceleration(this, &_result))
        return _result
    }

    public func put_Acceleration(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Acceleration(this, value))
    }

    public func get_Restitution() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Restitution(this, &_result))
        return _result
    }

    public func put_Restitution(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Restitution(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICircleEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_ICircleEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x414B172C, 0xBF27, 0x5EAD, 0x93E0, 0x35915322DB2C)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICircleEasingFunction {
    public func get_Mode() throws -> MicrosoftUIComposition_CompositionEasingFunctionMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionEasingFunctionMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mode(this, &_result))
        return MicrosoftUIComposition_CompositionEasingFunctionMode.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Composition.IColorKeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IColorKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF0237928, 0x353C, 0x5867, 0xBE93, 0x71547E989F44)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IColorKeyFrameAnimation {
    public func get_InterpolationColorSpace() throws -> MicrosoftUIComposition_CompositionColorSpace {
        var _result: SWRT_MicrosoftUIComposition_CompositionColorSpace = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InterpolationColorSpace(this, &_result))
        return MicrosoftUIComposition_CompositionColorSpace.fromABI(_result)
    }

    public func put_InterpolationColorSpace(_ value: MicrosoftUIComposition_CompositionColorSpace) throws {
        let value_abi = MicrosoftUIComposition_CompositionColorSpace.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InterpolationColorSpace(this, value_abi))
    }

    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsUI_Color, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA829CCC8, 0x6FDE, 0x5B90, 0xAD37, 0xEFD307E1B631)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionAnimation {
    public func clearAllParameters() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ClearAllParameters(this))
    }

    public func clearParameter(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ClearParameter(this, key_abi))
    }

    public func setColorParameter(_ key: Swift.String, _ value: WindowsUI_Color) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetColorParameter(this, key_abi, value_abi))
    }

    public func setMatrix3x2Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Matrix3x2) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetMatrix3x2Parameter(this, key_abi, value_abi))
    }

    public func setMatrix4x4Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Matrix4x4) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix4x4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetMatrix4x4Parameter(this, key_abi, value_abi))
    }

    public func setQuaternionParameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Quaternion) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetQuaternionParameter(this, key_abi, value_abi))
    }

    public func setReferenceParameter(_ key: Swift.String, _ compositionObject: MicrosoftUIComposition_CompositionObject?) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var compositionObject_abi = try MicrosoftUIComposition_CompositionObjectBinding.toABI(compositionObject)
        defer { MicrosoftUIComposition_CompositionObjectBinding.release(&compositionObject_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetReferenceParameter(this, key_abi, compositionObject_abi))
    }

    public func setScalarParameter(_ key: Swift.String, _ value: Swift.Float) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetScalarParameter(this, key_abi, value))
    }

    public func setVector2Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector2) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetVector2Parameter(this, key_abi, value_abi))
    }

    public func setVector3Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector3) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetVector3Parameter(this, key_abi, value_abi))
    }

    public func setVector4Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector4) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetVector4Parameter(this, key_abi, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionAnimation2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionAnimation2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0926EB58, 0x8965, 0x5C74, 0xBDAC, 0x852EBB5E8542)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionAnimation2 {
    public func setBooleanParameter(_ key: Swift.String, _ value: Swift.Bool) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetBooleanParameter(this, key_abi, value))
    }

    public func get_Target() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Target(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Target(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Target(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionAnimation3

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionAnimation3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60063F53, 0x4167, 0x5914, 0xA2F1, 0x9EFCC2F86C76)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionAnimation3 {
    public func get_InitialValueExpressions() throws -> MicrosoftUIComposition_InitialValueExpressionCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMap_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValueExpressions(this, &_result))
        return MicrosoftUIComposition_InitialValueExpressionCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionAnimation4

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionAnimation4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC4101447, 0xDFE4, 0x597F, 0xB5BC, 0x96443F5D18A1)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionAnimation4 {
    public func setExpressionReferenceParameter(_ parameterName: Swift.String, _ source: MicrosoftUIComposition_IAnimationObject?) throws {
        var parameterName_abi = try WindowsRuntime.StringBinding.toABI(parameterName)
        defer { WindowsRuntime.StringBinding.release(&parameterName_abi) }
        var source_abi = try MicrosoftUIComposition_IAnimationObjectBinding.toABI(source)
        defer { MicrosoftUIComposition_IAnimationObjectBinding.release(&source_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetExpressionReferenceParameter(this, parameterName_abi, source_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionAnimationBase

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA77C0E5A, 0xF059, 0x4E85, 0xBCEF, 0xC068694CEC78)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionAnimationBase {
}

// MARK: Microsoft.UI.Composition.ICompositionAnimationFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2ED278CA, 0x4CCA, 0x5F7F, 0x8D47, 0xF930552A7769)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionAnimationFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionAnimationGroup

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionAnimationGroup.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA51CDCAC, 0xB972, 0x5AE7, 0x81D0, 0x9D91C71ECB7A)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionAnimationGroup {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func add(_ value: MicrosoftUIComposition_CompositionAnimation?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionAnimationBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionAnimationBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Add(this, value_abi))
    }

    public func remove(_ value: MicrosoftUIComposition_CompositionAnimation?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionAnimationBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionAnimationBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, value_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionBackdropBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionBackdropBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6C866BB3, 0x172A, 0x570C, 0x82AC, 0xBF9848D99A59)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionBackdropBrush {
}

// MARK: Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionBatchCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAC400334, 0x4358, 0x5FB0, 0xBFC3, 0x117FE581998F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionBatchCompletedEventArgs {
}

// MARK: Microsoft.UI.Composition.ICompositionBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x483924E7, 0x99A5, 0x5377, 0x968B, 0xDEC6D40BBCCD)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionBrush {
}

// MARK: Microsoft.UI.Composition.ICompositionBrushFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionBrushFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xABF2B354, 0x7130, 0x53D9, 0x8324, 0x365D7E02EDE7)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionBrushFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionClip

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionClip.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB66B55CB, 0xB5A5, 0x5BEE, 0x8972, 0xAE78233CB34C)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionClip {
}

// MARK: Microsoft.UI.Composition.ICompositionClip2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionClip2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCDF6BF80, 0xAFD7, 0x57DC, 0x8148, 0x6CCBBB5D78BB)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionClip2 {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionClipFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionClipFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x611DEC65, 0xD302, 0x52BC, 0x92AB, 0xA295BD141AE4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionClipFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionColorBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionColorBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3F8FFB69, 0x3E71, 0x55A7, 0x8E79, 0xF27A214C56AE)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionColorBrush {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionColorGradientStop

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x868030D8, 0xC5C0, 0x5DD8, 0xA765, 0xE32CD3497AA9)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionColorGradientStop {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_Offset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return _result
    }

    public func put_Offset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionColorGradientStopCollection

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionColorGradientStopCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4794CB29, 0xCE9D, 0x5837, 0x9FC9, 0x847DF3E197DE)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionColorGradientStopCollection {
}

// MARK: Microsoft.UI.Composition.ICompositionCommitBatch

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionCommitBatch.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC4550FA8, 0xA7F2, 0x5259, 0xBF74, 0x33B2F5240A28)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionCommitBatch {
    public func get_IsActive() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsActive(this, &_result))
        return _result
    }

    public func get_IsEnded() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEnded(this, &_result))
        return _result
    }

    public func add_Completed(_ handler: WindowsFoundation_TypedEventHandler<WindowsRuntime.IInspectable?, MicrosoftUIComposition_CompositionBatchCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Completed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Completed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Completed(this, token_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionContainerShape

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionContainerShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x064AABD5, 0x2DAB, 0x52D3, 0x824B, 0xC72456540F29)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionContainerShape {
    public func get_Shapes() throws -> MicrosoftUIComposition_CompositionShapeCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_MicrosoftUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shapes(this, &_result))
        return MicrosoftUIComposition_CompositionShapeCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8E1ECD0D, 0x57D8, 0x5BC9, 0x9BCD, 0xE43D0DD733C4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionEasingFunction {
}

// MARK: Microsoft.UI.Composition.ICompositionEasingFunctionFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionEasingFunctionFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7D7D32C3, 0x574B, 0x5620, 0x9902, 0xDB426851802F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionEasingFunctionFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionEasingFunctionStatics

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionEasingFunctionStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9D4B87FF, 0x6DCA, 0x5CE2, 0xB69C, 0xE52705B0FEF4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionEasingFunctionStatics {
    public func createCubicBezierEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ controlPoint1: WindowsFoundationNumerics_Vector2, _ controlPoint2: WindowsFoundationNumerics_Vector2) throws -> MicrosoftUIComposition_CubicBezierEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let controlPoint1_abi = WindowsFoundationNumerics_Vector2.toABI(controlPoint1)
        let controlPoint2_abi = WindowsFoundationNumerics_Vector2.toABI(controlPoint2)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICubicBezierEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCubicBezierEasingFunction(this, owner_abi, controlPoint1_abi, controlPoint2_abi, &_result))
        return MicrosoftUIComposition_CubicBezierEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createLinearEasingFunction(_ owner: MicrosoftUIComposition_Compositor?) throws -> MicrosoftUIComposition_LinearEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ILinearEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLinearEasingFunction(this, owner_abi, &_result))
        return MicrosoftUIComposition_LinearEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createStepEasingFunction(_ owner: MicrosoftUIComposition_Compositor?) throws -> MicrosoftUIComposition_StepEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IStepEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStepEasingFunction(this, owner_abi, &_result))
        return MicrosoftUIComposition_StepEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createStepEasingFunctionWithStepCount(_ owner: MicrosoftUIComposition_Compositor?, _ stepCount: Swift.Int32) throws -> MicrosoftUIComposition_StepEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IStepEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStepEasingFunctionWithStepCount(this, owner_abi, stepCount, &_result))
        return MicrosoftUIComposition_StepEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createBackEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ mode: MicrosoftUIComposition_CompositionEasingFunctionMode, _ amplitude: Swift.Float) throws -> MicrosoftUIComposition_BackEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let mode_abi = MicrosoftUIComposition_CompositionEasingFunctionMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IBackEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBackEasingFunction(this, owner_abi, mode_abi, amplitude, &_result))
        return MicrosoftUIComposition_BackEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createBounceEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ mode: MicrosoftUIComposition_CompositionEasingFunctionMode, _ bounces: Swift.Int32, _ bounciness: Swift.Float) throws -> MicrosoftUIComposition_BounceEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let mode_abi = MicrosoftUIComposition_CompositionEasingFunctionMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IBounceEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBounceEasingFunction(this, owner_abi, mode_abi, bounces, bounciness, &_result))
        return MicrosoftUIComposition_BounceEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createCircleEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ mode: MicrosoftUIComposition_CompositionEasingFunctionMode) throws -> MicrosoftUIComposition_CircleEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let mode_abi = MicrosoftUIComposition_CompositionEasingFunctionMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICircleEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCircleEasingFunction(this, owner_abi, mode_abi, &_result))
        return MicrosoftUIComposition_CircleEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createElasticEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ mode: MicrosoftUIComposition_CompositionEasingFunctionMode, _ oscillations: Swift.Int32, _ springiness: Swift.Float) throws -> MicrosoftUIComposition_ElasticEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let mode_abi = MicrosoftUIComposition_CompositionEasingFunctionMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IElasticEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateElasticEasingFunction(this, owner_abi, mode_abi, oscillations, springiness, &_result))
        return MicrosoftUIComposition_ElasticEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createExponentialEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ mode: MicrosoftUIComposition_CompositionEasingFunctionMode, _ exponent: Swift.Float) throws -> MicrosoftUIComposition_ExponentialEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let mode_abi = MicrosoftUIComposition_CompositionEasingFunctionMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IExponentialEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateExponentialEasingFunction(this, owner_abi, mode_abi, exponent, &_result))
        return MicrosoftUIComposition_ExponentialEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createPowerEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ mode: MicrosoftUIComposition_CompositionEasingFunctionMode, _ power: Swift.Float) throws -> MicrosoftUIComposition_PowerEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let mode_abi = MicrosoftUIComposition_CompositionEasingFunctionMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IPowerEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePowerEasingFunction(this, owner_abi, mode_abi, power, &_result))
        return MicrosoftUIComposition_PowerEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createSineEasingFunction(_ owner: MicrosoftUIComposition_Compositor?, _ mode: MicrosoftUIComposition_CompositionEasingFunctionMode) throws -> MicrosoftUIComposition_SineEasingFunction? {
        var owner_abi = try MicrosoftUIComposition_CompositorBinding.toABI(owner)
        defer { MicrosoftUIComposition_CompositorBinding.release(&owner_abi) }
        let mode_abi = MicrosoftUIComposition_CompositionEasingFunctionMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ISineEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSineEasingFunction(this, owner_abi, mode_abi, &_result))
        return MicrosoftUIComposition_SineEasingFunctionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionEffectBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionEffectBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x62E0BBAB, 0x1F45, 0x5A44, 0x9DDF, 0xF0C38A02ED85)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionEffectBrush {
    public func getSourceParameter(_ name: Swift.String) throws -> MicrosoftUIComposition_CompositionBrush? {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSourceParameter(this, name_abi, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func setSourceParameter(_ name: Swift.String, _ source: MicrosoftUIComposition_CompositionBrush?) throws {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var source_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(source)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&source_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetSourceParameter(this, name_abi, source_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionEffectFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionEffectFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC50F407A, 0x0231, 0x5ED2, 0xB7A7, 0xCA66D3E14B3B)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionEffectFactory {
    public func createBrush() throws -> MicrosoftUIComposition_CompositionEffectBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionEffectBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBrush(this, &_result))
        return MicrosoftUIComposition_CompositionEffectBrushBinding.fromABI(consuming: &_result)
    }

    public func get_ExtendedError() throws -> COM.HResult {
        var _result: SWRT_HResult = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ExtendedError(this, &_result))
        return COM.HResultBinding.fromABI(_result)
    }

    public func get_LoadStatus() throws -> MicrosoftUIComposition_CompositionEffectFactoryLoadStatus {
        var _result: SWRT_MicrosoftUIComposition_CompositionEffectFactoryLoadStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LoadStatus(this, &_result))
        return MicrosoftUIComposition_CompositionEffectFactoryLoadStatus.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionEllipseGeometry

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionEllipseGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF2A21042, 0x7A57, 0x58C1, 0x8B47, 0x8BC8B21D3AA0)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionEllipseGeometry {
    public func get_Center() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Center(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Center(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Center(this, value_abi))
    }

    public func get_Radius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Radius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Radius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Radius(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionGeometricClip

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionGeometricClip.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE3C0A8C5, 0x5297, 0x5D69, 0x8B91, 0xF5330BB1CB27)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionGeometricClip {
    public func get_Geometry() throws -> MicrosoftUIComposition_CompositionGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Geometry(this, &_result))
        return MicrosoftUIComposition_CompositionGeometryBinding.fromABI(consuming: &_result)
    }

    public func put_Geometry(_ value: MicrosoftUIComposition_CompositionGeometry?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionGeometryBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionGeometryBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Geometry(this, value_abi))
    }

    public func get_ViewBox() throws -> MicrosoftUIComposition_CompositionViewBox? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionViewBox>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ViewBox(this, &_result))
        return MicrosoftUIComposition_CompositionViewBoxBinding.fromABI(consuming: &_result)
    }

    public func put_ViewBox(_ value: MicrosoftUIComposition_CompositionViewBox?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionViewBoxBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionViewBoxBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ViewBox(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionGeometry

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4E40BDB2, 0x450B, 0x5A81, 0x9E9B, 0x149417980CC4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionGeometry {
    public func get_TrimEnd() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TrimEnd(this, &_result))
        return _result
    }

    public func put_TrimEnd(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TrimEnd(this, value))
    }

    public func get_TrimOffset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TrimOffset(this, &_result))
        return _result
    }

    public func put_TrimOffset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TrimOffset(this, value))
    }

    public func get_TrimStart() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TrimStart(this, &_result))
        return _result
    }

    public func put_TrimStart(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TrimStart(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionGeometryFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionGeometryFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB2FB802B, 0xC691, 0x5554, 0x8312, 0x9C6D358D6B9E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionGeometryFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionGradientBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionGradientBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9165D1FB, 0xC738, 0x5F44, 0xADDC, 0x309EE071D588)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionGradientBrush {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_ColorStops() throws -> MicrosoftUIComposition_CompositionColorGradientStopCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorGradientStopCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ColorStops(this, &_result))
        return MicrosoftUIComposition_CompositionColorGradientStopCollectionBinding.fromABI(consuming: &_result)
    }

    public func get_ExtendMode() throws -> MicrosoftUIComposition_CompositionGradientExtendMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionGradientExtendMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ExtendMode(this, &_result))
        return MicrosoftUIComposition_CompositionGradientExtendMode.fromABI(_result)
    }

    public func put_ExtendMode(_ value: MicrosoftUIComposition_CompositionGradientExtendMode) throws {
        let value_abi = MicrosoftUIComposition_CompositionGradientExtendMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ExtendMode(this, value_abi))
    }

    public func get_InterpolationSpace() throws -> MicrosoftUIComposition_CompositionColorSpace {
        var _result: SWRT_MicrosoftUIComposition_CompositionColorSpace = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InterpolationSpace(this, &_result))
        return MicrosoftUIComposition_CompositionColorSpace.fromABI(_result)
    }

    public func put_InterpolationSpace(_ value: MicrosoftUIComposition_CompositionColorSpace) throws {
        let value_abi = MicrosoftUIComposition_CompositionColorSpace.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InterpolationSpace(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionGradientBrush2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionGradientBrush2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x03E9EDF3, 0xEE3D, 0x58FC, 0x8C0B, 0x95E4B6060A94)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionGradientBrush2 {
    public func get_MappingMode() throws -> MicrosoftUIComposition_CompositionMappingMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionMappingMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MappingMode(this, &_result))
        return MicrosoftUIComposition_CompositionMappingMode.fromABI(_result)
    }

    public func put_MappingMode(_ value: MicrosoftUIComposition_CompositionMappingMode) throws {
        let value_abi = MicrosoftUIComposition_CompositionMappingMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MappingMode(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionGradientBrushFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionGradientBrushFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB043B155, 0x4B40, 0x590D, 0xA0D9, 0xF8C1A7E0C88F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionGradientBrushFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionLight

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6D633E77, 0xA6B8, 0x5A2D, 0x8235, 0xE0C380C3B47B)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionLight {
    public func get_Targets() throws -> MicrosoftUIComposition_VisualUnorderedCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisualUnorderedCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Targets(this, &_result))
        return MicrosoftUIComposition_VisualUnorderedCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionLight2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0BB940A4, 0x05EF, 0x5920, 0xBAE1, 0x918B36D44380)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionLight2 {
    public func get_ExclusionsFromTargets() throws -> MicrosoftUIComposition_VisualUnorderedCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisualUnorderedCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ExclusionsFromTargets(this, &_result))
        return MicrosoftUIComposition_VisualUnorderedCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionLight3

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionLight3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x95CE4859, 0xDD55, 0x5C38, 0xA3EB, 0x13D053CEBB1E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionLight3 {
    public func get_IsEnabled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEnabled(this, &_result))
        return _result
    }

    public func put_IsEnabled(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsEnabled(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionLightFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionLightFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCB29CAED, 0x9245, 0x51A6, 0xBA56, 0xADDBAEFA54CC)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionLightFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionLineGeometry

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionLineGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x489F9382, 0xC186, 0x5936, 0x8946, 0xC4F927E844AA)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionLineGeometry {
    public func get_Start() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Start(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Start(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Start(this, value_abi))
    }

    public func get_End() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_End(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_End(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_End(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionLinearGradientBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionLinearGradientBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF726FB52, 0x270C, 0x58B1, 0xA902, 0x89576772DEDC)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionLinearGradientBrush {
    public func get_EndPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EndPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_EndPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_EndPoint(this, value_abi))
    }

    public func get_StartPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StartPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_StartPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StartPoint(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionMaskBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionMaskBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC9502786, 0x65AA, 0x5BE5, 0xA679, 0xC3B5DBFB0DC6)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionMaskBrush {
    public func get_Mask() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mask(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Mask(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Mask(this, value_abi))
    }

    public func get_Source() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Source(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Source(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Source(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionNineGridBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionNineGridBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC77A3D21, 0xC7EE, 0x517A, 0x98F4, 0xAD9A7202BC86)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionNineGridBrush {
    public func get_BottomInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomInset(this, &_result))
        return _result
    }

    public func put_BottomInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomInset(this, value))
    }

    public func get_BottomInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomInsetScale(this, &_result))
        return _result
    }

    public func put_BottomInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomInsetScale(this, value))
    }

    public func get_IsCenterHollow() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsCenterHollow(this, &_result))
        return _result
    }

    public func put_IsCenterHollow(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsCenterHollow(this, value))
    }

    public func get_LeftInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LeftInset(this, &_result))
        return _result
    }

    public func put_LeftInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LeftInset(this, value))
    }

    public func get_LeftInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LeftInsetScale(this, &_result))
        return _result
    }

    public func put_LeftInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LeftInsetScale(this, value))
    }

    public func get_RightInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RightInset(this, &_result))
        return _result
    }

    public func put_RightInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RightInset(this, value))
    }

    public func get_RightInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RightInsetScale(this, &_result))
        return _result
    }

    public func put_RightInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RightInsetScale(this, value))
    }

    public func get_Source() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Source(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Source(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Source(this, value_abi))
    }

    public func get_TopInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopInset(this, &_result))
        return _result
    }

    public func put_TopInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopInset(this, value))
    }

    public func get_TopInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopInsetScale(this, &_result))
        return _result
    }

    public func put_TopInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopInsetScale(this, value))
    }

    public func setInsets(_ inset: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsets(this, inset))
    }

    public func setInsetsWithValues(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsetsWithValues(this, left, top, right, bottom))
    }

    public func setInsetScales(_ scale: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsetScales(this, scale))
    }

    public func setInsetScalesWithValues(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsetScalesWithValues(this, left, top, right, bottom))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionObject

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionObject.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0E583D49, 0xFB5E, 0x5481, 0xA426, 0xD3C41E059A5A)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionObject {
    public func get_Compositor() throws -> MicrosoftUIComposition_Compositor? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositor>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Compositor(this, &_result))
        return MicrosoftUIComposition_CompositorBinding.fromABI(consuming: &_result)
    }

    public func get_Properties() throws -> MicrosoftUIComposition_CompositionPropertySet? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Properties(this, &_result))
        return MicrosoftUIComposition_CompositionPropertySetBinding.fromABI(consuming: &_result)
    }

    public func startAnimation(_ propertyName: Swift.String, _ animation: MicrosoftUIComposition_CompositionAnimation?) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var animation_abi = try MicrosoftUIComposition_CompositionAnimationBinding.toABI(animation)
        defer { MicrosoftUIComposition_CompositionAnimationBinding.release(&animation_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimation(this, propertyName_abi, animation_abi))
    }

    public func stopAnimation(_ propertyName: Swift.String) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StopAnimation(this, propertyName_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionObject2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionObject2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBCBBFEBF, 0x799C, 0x51CE, 0x9C82, 0xB6E49E7E62E1)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionObject2 {
    public func get_Comment() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Comment(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Comment(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Comment(this, value_abi))
    }

    public func get_ImplicitAnimations() throws -> MicrosoftUIComposition_ImplicitAnimationCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IImplicitAnimationCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ImplicitAnimations(this, &_result))
        return MicrosoftUIComposition_ImplicitAnimationCollectionBinding.fromABI(consuming: &_result)
    }

    public func put_ImplicitAnimations(_ value: MicrosoftUIComposition_ImplicitAnimationCollection?) throws {
        var value_abi = try MicrosoftUIComposition_ImplicitAnimationCollectionBinding.toABI(value)
        defer { MicrosoftUIComposition_ImplicitAnimationCollectionBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ImplicitAnimations(this, value_abi))
    }

    public func startAnimationGroup(_ value: MicrosoftUIComposition_ICompositionAnimationBase?) throws {
        var value_abi = try MicrosoftUIComposition_ICompositionAnimationBaseBinding.toABI(value)
        defer { MicrosoftUIComposition_ICompositionAnimationBaseBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimationGroup(this, value_abi))
    }

    public func stopAnimationGroup(_ value: MicrosoftUIComposition_ICompositionAnimationBase?) throws {
        var value_abi = try MicrosoftUIComposition_ICompositionAnimationBaseBinding.toABI(value)
        defer { MicrosoftUIComposition_ICompositionAnimationBaseBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StopAnimationGroup(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionObject3

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionObject3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD43C5CF1, 0x47DF, 0x52B8, 0xB409, 0xD5831503905E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionObject3 {
    public func get_DispatcherQueue() throws -> MicrosoftUIDispatching_DispatcherQueue? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIDispatching_IDispatcherQueue>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DispatcherQueue(this, &_result))
        return MicrosoftUIDispatching_DispatcherQueueBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionObject4

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionObject4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x029AD57C, 0x5497, 0x51F3, 0x8B40, 0xE4E235992C6F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionObject4 {
    public func tryGetAnimationController(_ propertyName: Swift.String) throws -> MicrosoftUIComposition_AnimationController? {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IAnimationController>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetAnimationController(this, propertyName_abi, &_result))
        return MicrosoftUIComposition_AnimationControllerBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionObject5

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionObject5.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x85FD26D1, 0xBB99, 0x5392, 0x9DCE, 0xA05CB81458A5)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionObject5 {
    public func startAnimationWithController(_ propertyName: Swift.String, _ animation: MicrosoftUIComposition_CompositionAnimation?, _ animationController: MicrosoftUIComposition_AnimationController?) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var animation_abi = try MicrosoftUIComposition_CompositionAnimationBinding.toABI(animation)
        defer { MicrosoftUIComposition_CompositionAnimationBinding.release(&animation_abi) }
        var animationController_abi = try MicrosoftUIComposition_AnimationControllerBinding.toABI(animationController)
        defer { MicrosoftUIComposition_AnimationControllerBinding.release(&animationController_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimationWithController(this, propertyName_abi, animation_abi, animationController_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionObjectFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionObjectFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6133C5F9, 0xCD3B, 0x56B2, 0x876F, 0xEB849DB14911)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionObjectFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionObjectStatics

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionObjectStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA091356C, 0x38AE, 0x514C, 0x9B58, 0xAD5C8C7936AD)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionObjectStatics {
    public func startAnimationWithIAnimationObject(_ target: MicrosoftUIComposition_IAnimationObject?, _ propertyName: Swift.String, _ animation: MicrosoftUIComposition_CompositionAnimation?) throws {
        var target_abi = try MicrosoftUIComposition_IAnimationObjectBinding.toABI(target)
        defer { MicrosoftUIComposition_IAnimationObjectBinding.release(&target_abi) }
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var animation_abi = try MicrosoftUIComposition_CompositionAnimationBinding.toABI(animation)
        defer { MicrosoftUIComposition_CompositionAnimationBinding.release(&animation_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimationWithIAnimationObject(this, target_abi, propertyName_abi, animation_abi))
    }

    public func startAnimationGroupWithIAnimationObject(_ target: MicrosoftUIComposition_IAnimationObject?, _ animation: MicrosoftUIComposition_ICompositionAnimationBase?) throws {
        var target_abi = try MicrosoftUIComposition_IAnimationObjectBinding.toABI(target)
        defer { MicrosoftUIComposition_IAnimationObjectBinding.release(&target_abi) }
        var animation_abi = try MicrosoftUIComposition_ICompositionAnimationBaseBinding.toABI(animation)
        defer { MicrosoftUIComposition_ICompositionAnimationBaseBinding.release(&animation_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimationGroupWithIAnimationObject(this, target_abi, animation_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionPath

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionPath.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x17C518C0, 0xD7A2, 0x54BE, 0xAC7F, 0xC408562A6A20)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionPath {
}

// MARK: Microsoft.UI.Composition.ICompositionPathFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionPathFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x87143312, 0xD280, 0x51D2, 0xB75B, 0x5D76EA86C285)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionPathFactory {
    public func create(_ source: WindowsGraphics_IGeometrySource2D?) throws -> COM.COMReference<SWRT_MicrosoftUIComposition_ICompositionPath> {
        var source_abi = try WindowsGraphics_IGeometrySource2DBinding.toABI(source)
        defer { WindowsGraphics_IGeometrySource2DBinding.release(&source_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionPath>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Create(this, source_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionPathGeometry

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionPathGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0F6E6B82, 0x060B, 0x571E, 0xB849, 0xAB8E0D723962)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionPathGeometry {
    public func get_Path() throws -> MicrosoftUIComposition_CompositionPath? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionPath>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Path(this, &_result))
        return MicrosoftUIComposition_CompositionPathBinding.fromABI(consuming: &_result)
    }

    public func put_Path(_ value: MicrosoftUIComposition_CompositionPath?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionPathBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionPathBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Path(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionProjectedShadow

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionProjectedShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD400AB10, 0x8B92, 0x5ABB, 0x9E23, 0x807974FC6961)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionProjectedShadow {
    public func get_BlurRadiusMultiplier() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BlurRadiusMultiplier(this, &_result))
        return _result
    }

    public func put_BlurRadiusMultiplier(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BlurRadiusMultiplier(this, value))
    }

    public func get_Casters() throws -> MicrosoftUIComposition_CompositionProjectedShadowCasterCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCasterCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Casters(this, &_result))
        return MicrosoftUIComposition_CompositionProjectedShadowCasterCollectionBinding.fromABI(consuming: &_result)
    }

    public func get_LightSource() throws -> MicrosoftUIComposition_CompositionLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightSource(this, &_result))
        return MicrosoftUIComposition_CompositionLightBinding.fromABI(consuming: &_result)
    }

    public func put_LightSource(_ value: MicrosoftUIComposition_CompositionLight?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionLightBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionLightBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LightSource(this, value_abi))
    }

    public func get_MaxBlurRadius() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxBlurRadius(this, &_result))
        return _result
    }

    public func put_MaxBlurRadius(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MaxBlurRadius(this, value))
    }

    public func get_MinBlurRadius() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinBlurRadius(this, &_result))
        return _result
    }

    public func put_MinBlurRadius(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MinBlurRadius(this, value))
    }

    public func get_Receivers() throws -> MicrosoftUIComposition_CompositionProjectedShadowReceiverUnorderedCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionProjectedShadowReceiverUnorderedCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Receivers(this, &_result))
        return MicrosoftUIComposition_CompositionProjectedShadowReceiverUnorderedCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionProjectedShadowCaster

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCaster.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x15A9F2D0, 0x6BAE, 0x521B, 0x90C7, 0xC7500F2BF562)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCaster {
    public func get_Brush() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Brush(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Brush(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Brush(this, value_abi))
    }

    public func get_CastingVisual() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CastingVisual(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CastingVisual(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CastingVisual(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCasterCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB120BFDC, 0x533C, 0x57A9, 0xAE16, 0xD43BA52472C4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCasterCollection {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func insertAbove(_ newCaster: MicrosoftUIComposition_CompositionProjectedShadowCaster?, _ reference: MicrosoftUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        var reference_abi = try MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.toABI(reference)
        defer { MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.release(&reference_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAbove(this, newCaster_abi, reference_abi))
    }

    public func insertAtBottom(_ newCaster: MicrosoftUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtBottom(this, newCaster_abi))
    }

    public func insertAtTop(_ newCaster: MicrosoftUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtTop(this, newCaster_abi))
    }

    public func insertBelow(_ newCaster: MicrosoftUIComposition_CompositionProjectedShadowCaster?, _ reference: MicrosoftUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        var reference_abi = try MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.toABI(reference)
        defer { MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.release(&reference_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertBelow(this, newCaster_abi, reference_abi))
    }

    public func remove(_ caster: MicrosoftUIComposition_CompositionProjectedShadowCaster?) throws {
        var caster_abi = try MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.toABI(caster)
        defer { MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.release(&caster_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, caster_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCasterCollectionStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x43A98014, 0xB88B, 0x5B2A, 0xB1E2, 0x5E776AB77538)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCasterCollectionStatics {
    public func get_MaxRespectedCasters() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxRespectedCasters(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.ICompositionProjectedShadowReceiver

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionProjectedShadowReceiver.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x29FE12B0, 0xF1A0, 0x50E1, 0xAF28, 0x2E943BC819D6)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionProjectedShadowReceiver {
    public func get_ReceivingVisual() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ReceivingVisual(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_ReceivingVisual(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ReceivingVisual(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionProjectedShadowReceiverUnorderedCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2D35F751, 0xA1FA, 0x5FFF, 0xB156, 0x6D8FCD8362ED)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionProjectedShadowReceiverUnorderedCollection {
    public func add(_ value: MicrosoftUIComposition_CompositionProjectedShadowReceiver?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Add(this, value_abi))
    }

    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func remove(_ value: MicrosoftUIComposition_CompositionProjectedShadowReceiver?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, value_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionPropertySet

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionPropertySet.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x97F7A17B, 0x97BE, 0x5545, 0x9F1C, 0x0B9D44577F57)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionPropertySet {
    public func insertColor(_ propertyName: Swift.String, _ value: WindowsUI_Color) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertColor(this, propertyName_abi, value_abi))
    }

    public func insertMatrix3x2(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Matrix3x2) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertMatrix3x2(this, propertyName_abi, value_abi))
    }

    public func insertMatrix4x4(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Matrix4x4) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix4x4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertMatrix4x4(this, propertyName_abi, value_abi))
    }

    public func insertQuaternion(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Quaternion) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertQuaternion(this, propertyName_abi, value_abi))
    }

    public func insertScalar(_ propertyName: Swift.String, _ value: Swift.Float) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertScalar(this, propertyName_abi, value))
    }

    public func insertVector2(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Vector2) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertVector2(this, propertyName_abi, value_abi))
    }

    public func insertVector3(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Vector3) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertVector3(this, propertyName_abi, value_abi))
    }

    public func insertVector4(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Vector4) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertVector4(this, propertyName_abi, value_abi))
    }

    public func tryGetColor(_ propertyName: Swift.String, _ value: inout WindowsUI_Color) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsUI_Color = .init()
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetColor(this, propertyName_abi, &value_abi, &_result))
        value = WindowsUI_Color.fromABI(value_abi)
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetMatrix3x2(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Matrix3x2) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetMatrix3x2(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Matrix3x2.fromABI(value_abi)
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetMatrix4x4(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Matrix4x4) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Matrix4x4 = .init()
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetMatrix4x4(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Matrix4x4.fromABI(value_abi)
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetQuaternion(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Quaternion) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Quaternion = .init()
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetQuaternion(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Quaternion.fromABI(value_abi)
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetScalar(_ propertyName: Swift.String, _ value: inout Swift.Float) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetScalar(this, propertyName_abi, &value, &_result))
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetVector2(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Vector2) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetVector2(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Vector2.fromABI(value_abi)
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetVector3(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Vector3) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetVector3(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Vector3.fromABI(value_abi)
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetVector4(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Vector4) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Vector4 = .init()
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetVector4(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Vector4.fromABI(value_abi)
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionPropertySet2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionPropertySet2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3DB6D621, 0x3497, 0x55E4, 0x95BF, 0x8AE5E7C34C33)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionPropertySet2 {
    public func insertBoolean(_ propertyName: Swift.String, _ value: Swift.Bool) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertBoolean(this, propertyName_abi, value))
    }

    public func tryGetBoolean(_ propertyName: Swift.String, _ value: inout Swift.Bool) throws -> MicrosoftUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var _result: SWRT_MicrosoftUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetBoolean(this, propertyName_abi, &value, &_result))
        return MicrosoftUIComposition_CompositionGetValueStatus.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositionRadialGradientBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionRadialGradientBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x17662F3F, 0xD351, 0x5435, 0xB3B4, 0xEC26CEFECCC5)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionRadialGradientBrush {
    public func get_EllipseCenter() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EllipseCenter(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_EllipseCenter(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_EllipseCenter(this, value_abi))
    }

    public func get_EllipseRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EllipseRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_EllipseRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_EllipseRadius(this, value_abi))
    }

    public func get_GradientOriginOffset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_GradientOriginOffset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_GradientOriginOffset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_GradientOriginOffset(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionRectangleGeometry

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionRectangleGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBD551FCF, 0x2C7F, 0x5125, 0xAC44, 0x50A4F1D8FA76)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionRectangleGeometry {
    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionRoundedRectangleGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x02EAFC87, 0x8D1F, 0x5445, 0xA416, 0xD81BAEE8A750)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionRoundedRectangleGeometry {
    public func get_CornerRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CornerRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CornerRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CornerRadius(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionScopedBatch

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionScopedBatch.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD31CA572, 0x99CE, 0x5969, 0xB042, 0x6C2D330A3859)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionScopedBatch {
    public func get_IsActive() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsActive(this, &_result))
        return _result
    }

    public func get_IsEnded() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEnded(this, &_result))
        return _result
    }

    public func end() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.End(this))
    }

    public func resume() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Resume(this))
    }

    public func suspend() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Suspend(this))
    }

    public func add_Completed(_ handler: WindowsFoundation_TypedEventHandler<WindowsRuntime.IInspectable?, MicrosoftUIComposition_CompositionBatchCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Completed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Completed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Completed(this, token_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionShadow

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x176B8BB5, 0x4DAE, 0x59B2, 0xB9A0, 0x2499B243267C)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionShadow {
}

// MARK: Microsoft.UI.Composition.ICompositionShadowFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionShadowFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFF27546D, 0x9750, 0x54AE, 0xAB8C, 0x126CBE9158C3)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionShadowFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionShape

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xED75D4D8, 0x437F, 0x5640, 0x9720, 0xFAAE35CE5895)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionShape {
    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionShapeFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionShapeFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7AA2B987, 0x9CDD, 0x5B6E, 0x8AC1, 0xE989D78B4811)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionShapeFactory {
}

// MARK: Microsoft.UI.Composition.ICompositionSpriteShape

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionSpriteShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x982138F2, 0x5781, 0x509A, 0xBA5D, 0x112BCB0B98EF)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionSpriteShape {
    public func get_FillBrush() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FillBrush(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_FillBrush(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FillBrush(this, value_abi))
    }

    public func get_Geometry() throws -> MicrosoftUIComposition_CompositionGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Geometry(this, &_result))
        return MicrosoftUIComposition_CompositionGeometryBinding.fromABI(consuming: &_result)
    }

    public func put_Geometry(_ value: MicrosoftUIComposition_CompositionGeometry?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionGeometryBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionGeometryBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Geometry(this, value_abi))
    }

    public func get_IsStrokeNonScaling() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsStrokeNonScaling(this, &_result))
        return _result
    }

    public func put_IsStrokeNonScaling(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsStrokeNonScaling(this, value))
    }

    public func get_StrokeBrush() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeBrush(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_StrokeBrush(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeBrush(this, value_abi))
    }

    public func get_StrokeDashArray() throws -> MicrosoftUIComposition_CompositionStrokeDashArray? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_Float>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeDashArray(this, &_result))
        return MicrosoftUIComposition_CompositionStrokeDashArrayBinding.fromABI(consuming: &_result)
    }

    public func get_StrokeDashCap() throws -> MicrosoftUIComposition_CompositionStrokeCap {
        var _result: SWRT_MicrosoftUIComposition_CompositionStrokeCap = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeDashCap(this, &_result))
        return MicrosoftUIComposition_CompositionStrokeCap.fromABI(_result)
    }

    public func put_StrokeDashCap(_ value: MicrosoftUIComposition_CompositionStrokeCap) throws {
        let value_abi = MicrosoftUIComposition_CompositionStrokeCap.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeDashCap(this, value_abi))
    }

    public func get_StrokeDashOffset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeDashOffset(this, &_result))
        return _result
    }

    public func put_StrokeDashOffset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeDashOffset(this, value))
    }

    public func get_StrokeEndCap() throws -> MicrosoftUIComposition_CompositionStrokeCap {
        var _result: SWRT_MicrosoftUIComposition_CompositionStrokeCap = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeEndCap(this, &_result))
        return MicrosoftUIComposition_CompositionStrokeCap.fromABI(_result)
    }

    public func put_StrokeEndCap(_ value: MicrosoftUIComposition_CompositionStrokeCap) throws {
        let value_abi = MicrosoftUIComposition_CompositionStrokeCap.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeEndCap(this, value_abi))
    }

    public func get_StrokeLineJoin() throws -> MicrosoftUIComposition_CompositionStrokeLineJoin {
        var _result: SWRT_MicrosoftUIComposition_CompositionStrokeLineJoin = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeLineJoin(this, &_result))
        return MicrosoftUIComposition_CompositionStrokeLineJoin.fromABI(_result)
    }

    public func put_StrokeLineJoin(_ value: MicrosoftUIComposition_CompositionStrokeLineJoin) throws {
        let value_abi = MicrosoftUIComposition_CompositionStrokeLineJoin.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeLineJoin(this, value_abi))
    }

    public func get_StrokeMiterLimit() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeMiterLimit(this, &_result))
        return _result
    }

    public func put_StrokeMiterLimit(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeMiterLimit(this, value))
    }

    public func get_StrokeStartCap() throws -> MicrosoftUIComposition_CompositionStrokeCap {
        var _result: SWRT_MicrosoftUIComposition_CompositionStrokeCap = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeStartCap(this, &_result))
        return MicrosoftUIComposition_CompositionStrokeCap.fromABI(_result)
    }

    public func put_StrokeStartCap(_ value: MicrosoftUIComposition_CompositionStrokeCap) throws {
        let value_abi = MicrosoftUIComposition_CompositionStrokeCap.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeStartCap(this, value_abi))
    }

    public func get_StrokeThickness() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeThickness(this, &_result))
        return _result
    }

    public func put_StrokeThickness(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeThickness(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionSupportsSystemBackdrop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x397DAFE4, 0xB6C2, 0x5BB9, 0x951D, 0xF5707DE8B7BC)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionSupportsSystemBackdrop {
    public func get_SystemBackdrop() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SystemBackdrop(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_SystemBackdrop(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SystemBackdrop(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionSurface

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionSurface.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9EC612C3, 0xA5D2, 0x4F97, 0x9DF3, 0x6B49CE736215)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionSurface {
}

// MARK: Microsoft.UI.Composition.ICompositionSurfaceBrush

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x616BB5A5, 0x0A33, 0x512D, 0xB4B1, 0x3D3734F04ACA)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush {
    public func get_BitmapInterpolationMode() throws -> MicrosoftUIComposition_CompositionBitmapInterpolationMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionBitmapInterpolationMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BitmapInterpolationMode(this, &_result))
        return MicrosoftUIComposition_CompositionBitmapInterpolationMode.fromABI(_result)
    }

    public func put_BitmapInterpolationMode(_ value: MicrosoftUIComposition_CompositionBitmapInterpolationMode) throws {
        let value_abi = MicrosoftUIComposition_CompositionBitmapInterpolationMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BitmapInterpolationMode(this, value_abi))
    }

    public func get_HorizontalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HorizontalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_HorizontalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_HorizontalAlignmentRatio(this, value))
    }

    public func get_Stretch() throws -> MicrosoftUIComposition_CompositionStretch {
        var _result: SWRT_MicrosoftUIComposition_CompositionStretch = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Stretch(this, &_result))
        return MicrosoftUIComposition_CompositionStretch.fromABI(_result)
    }

    public func put_Stretch(_ value: MicrosoftUIComposition_CompositionStretch) throws {
        let value_abi = MicrosoftUIComposition_CompositionStretch.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Stretch(this, value_abi))
    }

    public func get_Surface() throws -> MicrosoftUIComposition_ICompositionSurface? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionSurface>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Surface(this, &_result))
        return MicrosoftUIComposition_ICompositionSurfaceBinding.fromABI(consuming: &_result)
    }

    public func put_Surface(_ value: MicrosoftUIComposition_ICompositionSurface?) throws {
        var value_abi = try MicrosoftUIComposition_ICompositionSurfaceBinding.toABI(value)
        defer { MicrosoftUIComposition_ICompositionSurfaceBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Surface(this, value_abi))
    }

    public func get_VerticalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_VerticalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_VerticalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_VerticalAlignmentRatio(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionSurfaceBrush2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9904B7E3, 0x084B, 0x58B5, 0x9AE1, 0x3A2040DD7A22)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush2 {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionSurfaceBrush3

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8AA74C78, 0x680C, 0x5791, 0xAB07, 0x92DB0F37E352)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush3 {
    public func get_SnapToPixels() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SnapToPixels(this, &_result))
        return _result
    }

    public func put_SnapToPixels(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SnapToPixels(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionViewBox

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionViewBox.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x667E4071, 0xADDD, 0x5DED, 0xB6C0, 0x09E03A14BE7E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionViewBox {
    public func get_HorizontalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HorizontalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_HorizontalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_HorizontalAlignmentRatio(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }

    public func get_Stretch() throws -> MicrosoftUIComposition_CompositionStretch {
        var _result: SWRT_MicrosoftUIComposition_CompositionStretch = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Stretch(this, &_result))
        return MicrosoftUIComposition_CompositionStretch.fromABI(_result)
    }

    public func put_Stretch(_ value: MicrosoftUIComposition_CompositionStretch) throws {
        let value_abi = MicrosoftUIComposition_CompositionStretch.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Stretch(this, value_abi))
    }

    public func get_VerticalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_VerticalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_VerticalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_VerticalAlignmentRatio(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ICompositionVisualSurface

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositionVisualSurface.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x49E3624B, 0x4D2E, 0x53E7, 0x9E02, 0xF64831681134)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositionVisualSurface {
    public func get_SourceVisual() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourceVisual(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_SourceVisual(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourceVisual(this, value_abi))
    }

    public func get_SourceOffset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourceOffset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_SourceOffset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourceOffset(this, value_abi))
    }

    public func get_SourceSize() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourceSize(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_SourceSize(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourceSize(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ICompositor

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositor.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x95213C13, 0xC4CB, 0x57DE, 0xB267, 0xD21AB901AE38)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositor {
    public func createColorKeyFrameAnimation() throws -> MicrosoftUIComposition_ColorKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IColorKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorKeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_ColorKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createColorBrush() throws -> MicrosoftUIComposition_CompositionColorBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorBrush(this, &_result))
        return MicrosoftUIComposition_CompositionColorBrushBinding.fromABI(consuming: &_result)
    }

    public func createColorBrushWithColor(_ color: WindowsUI_Color) throws -> MicrosoftUIComposition_CompositionColorBrush? {
        let color_abi = WindowsUI_Color.toABI(color)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorBrushWithColor(this, color_abi, &_result))
        return MicrosoftUIComposition_CompositionColorBrushBinding.fromABI(consuming: &_result)
    }

    public func createContainerVisual() throws -> MicrosoftUIComposition_ContainerVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IContainerVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateContainerVisual(this, &_result))
        return MicrosoftUIComposition_ContainerVisualBinding.fromABI(consuming: &_result)
    }

    public func createCubicBezierEasingFunction(_ controlPoint1: WindowsFoundationNumerics_Vector2, _ controlPoint2: WindowsFoundationNumerics_Vector2) throws -> MicrosoftUIComposition_CubicBezierEasingFunction? {
        let controlPoint1_abi = WindowsFoundationNumerics_Vector2.toABI(controlPoint1)
        let controlPoint2_abi = WindowsFoundationNumerics_Vector2.toABI(controlPoint2)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICubicBezierEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCubicBezierEasingFunction(this, controlPoint1_abi, controlPoint2_abi, &_result))
        return MicrosoftUIComposition_CubicBezierEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createEffectFactory(_ graphicsEffect: WindowsGraphicsEffects_IGraphicsEffect?) throws -> MicrosoftUIComposition_CompositionEffectFactory? {
        var graphicsEffect_abi = try WindowsGraphicsEffects_IGraphicsEffectBinding.toABI(graphicsEffect)
        defer { WindowsGraphicsEffects_IGraphicsEffectBinding.release(&graphicsEffect_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionEffectFactory>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateEffectFactory(this, graphicsEffect_abi, &_result))
        return MicrosoftUIComposition_CompositionEffectFactoryBinding.fromABI(consuming: &_result)
    }

    public func createEffectFactoryWithProperties(_ graphicsEffect: WindowsGraphicsEffects_IGraphicsEffect?, _ animatableProperties: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> MicrosoftUIComposition_CompositionEffectFactory? {
        var graphicsEffect_abi = try WindowsGraphicsEffects_IGraphicsEffectBinding.toABI(graphicsEffect)
        defer { WindowsGraphicsEffects_IGraphicsEffectBinding.release(&graphicsEffect_abi) }
        var animatableProperties_abi = try WindowsFoundationCollections_IIterableBinding.String.toABI(animatableProperties)
        defer { WindowsFoundationCollections_IIterableBinding.String.release(&animatableProperties_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionEffectFactory>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateEffectFactoryWithProperties(this, graphicsEffect_abi, animatableProperties_abi, &_result))
        return MicrosoftUIComposition_CompositionEffectFactoryBinding.fromABI(consuming: &_result)
    }

    public func createExpressionAnimation() throws -> MicrosoftUIComposition_ExpressionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IExpressionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateExpressionAnimation(this, &_result))
        return MicrosoftUIComposition_ExpressionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createExpressionAnimationWithExpression(_ expression: Swift.String) throws -> MicrosoftUIComposition_ExpressionAnimation? {
        var expression_abi = try WindowsRuntime.StringBinding.toABI(expression)
        defer { WindowsRuntime.StringBinding.release(&expression_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IExpressionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateExpressionAnimationWithExpression(this, expression_abi, &_result))
        return MicrosoftUIComposition_ExpressionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createInsetClip() throws -> MicrosoftUIComposition_InsetClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IInsetClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateInsetClip(this, &_result))
        return MicrosoftUIComposition_InsetClipBinding.fromABI(consuming: &_result)
    }

    public func createInsetClipWithInsets(_ leftInset: Swift.Float, _ topInset: Swift.Float, _ rightInset: Swift.Float, _ bottomInset: Swift.Float) throws -> MicrosoftUIComposition_InsetClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IInsetClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateInsetClipWithInsets(this, leftInset, topInset, rightInset, bottomInset, &_result))
        return MicrosoftUIComposition_InsetClipBinding.fromABI(consuming: &_result)
    }

    public func createLinearEasingFunction() throws -> MicrosoftUIComposition_LinearEasingFunction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ILinearEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLinearEasingFunction(this, &_result))
        return MicrosoftUIComposition_LinearEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createPropertySet() throws -> MicrosoftUIComposition_CompositionPropertySet? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePropertySet(this, &_result))
        return MicrosoftUIComposition_CompositionPropertySetBinding.fromABI(consuming: &_result)
    }

    public func createQuaternionKeyFrameAnimation() throws -> MicrosoftUIComposition_QuaternionKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IQuaternionKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateQuaternionKeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_QuaternionKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createScalarKeyFrameAnimation() throws -> MicrosoftUIComposition_ScalarKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IScalarKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateScalarKeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_ScalarKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createScopedBatch(_ batchType: MicrosoftUIComposition_CompositionBatchTypes) throws -> MicrosoftUIComposition_CompositionScopedBatch? {
        let batchType_abi = MicrosoftUIComposition_CompositionBatchTypes.toABI(batchType)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionScopedBatch>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateScopedBatch(this, batchType_abi, &_result))
        return MicrosoftUIComposition_CompositionScopedBatchBinding.fromABI(consuming: &_result)
    }

    public func createSpriteVisual() throws -> MicrosoftUIComposition_SpriteVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ISpriteVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpriteVisual(this, &_result))
        return MicrosoftUIComposition_SpriteVisualBinding.fromABI(consuming: &_result)
    }

    public func createSurfaceBrush() throws -> MicrosoftUIComposition_CompositionSurfaceBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSurfaceBrush(this, &_result))
        return MicrosoftUIComposition_CompositionSurfaceBrushBinding.fromABI(consuming: &_result)
    }

    public func createSurfaceBrushWithSurface(_ surface: MicrosoftUIComposition_ICompositionSurface?) throws -> MicrosoftUIComposition_CompositionSurfaceBrush? {
        var surface_abi = try MicrosoftUIComposition_ICompositionSurfaceBinding.toABI(surface)
        defer { MicrosoftUIComposition_ICompositionSurfaceBinding.release(&surface_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionSurfaceBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSurfaceBrushWithSurface(this, surface_abi, &_result))
        return MicrosoftUIComposition_CompositionSurfaceBrushBinding.fromABI(consuming: &_result)
    }

    public func createVector2KeyFrameAnimation() throws -> MicrosoftUIComposition_Vector2KeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVector2KeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVector2KeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_Vector2KeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createVector3KeyFrameAnimation() throws -> MicrosoftUIComposition_Vector3KeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVector3KeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVector3KeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_Vector3KeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createVector4KeyFrameAnimation() throws -> MicrosoftUIComposition_Vector4KeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVector4KeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVector4KeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_Vector4KeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func getCommitBatch(_ batchType: MicrosoftUIComposition_CompositionBatchTypes) throws -> MicrosoftUIComposition_CompositionCommitBatch? {
        let batchType_abi = MicrosoftUIComposition_CompositionBatchTypes.toABI(batchType)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionCommitBatch>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetCommitBatch(this, batchType_abi, &_result))
        return MicrosoftUIComposition_CompositionCommitBatchBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositor2

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositor2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA9FFEDAD, 0x3982, 0x576D, 0xA38A, 0xC888FF605819)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositor2 {
    public func createAmbientLight() throws -> MicrosoftUIComposition_AmbientLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IAmbientLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateAmbientLight(this, &_result))
        return MicrosoftUIComposition_AmbientLightBinding.fromABI(consuming: &_result)
    }

    public func createAnimationGroup() throws -> MicrosoftUIComposition_CompositionAnimationGroup? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionAnimationGroup>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateAnimationGroup(this, &_result))
        return MicrosoftUIComposition_CompositionAnimationGroupBinding.fromABI(consuming: &_result)
    }

    public func createBackdropBrush() throws -> MicrosoftUIComposition_CompositionBackdropBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBackdropBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBackdropBrush(this, &_result))
        return MicrosoftUIComposition_CompositionBackdropBrushBinding.fromABI(consuming: &_result)
    }

    public func createDistantLight() throws -> MicrosoftUIComposition_DistantLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IDistantLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateDistantLight(this, &_result))
        return MicrosoftUIComposition_DistantLightBinding.fromABI(consuming: &_result)
    }

    public func createDropShadow() throws -> MicrosoftUIComposition_DropShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IDropShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateDropShadow(this, &_result))
        return MicrosoftUIComposition_DropShadowBinding.fromABI(consuming: &_result)
    }

    public func createImplicitAnimationCollection() throws -> MicrosoftUIComposition_ImplicitAnimationCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IImplicitAnimationCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateImplicitAnimationCollection(this, &_result))
        return MicrosoftUIComposition_ImplicitAnimationCollectionBinding.fromABI(consuming: &_result)
    }

    public func createLayerVisual() throws -> MicrosoftUIComposition_LayerVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ILayerVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLayerVisual(this, &_result))
        return MicrosoftUIComposition_LayerVisualBinding.fromABI(consuming: &_result)
    }

    public func createMaskBrush() throws -> MicrosoftUIComposition_CompositionMaskBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionMaskBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateMaskBrush(this, &_result))
        return MicrosoftUIComposition_CompositionMaskBrushBinding.fromABI(consuming: &_result)
    }

    public func createNineGridBrush() throws -> MicrosoftUIComposition_CompositionNineGridBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionNineGridBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateNineGridBrush(this, &_result))
        return MicrosoftUIComposition_CompositionNineGridBrushBinding.fromABI(consuming: &_result)
    }

    public func createPointLight() throws -> MicrosoftUIComposition_PointLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IPointLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePointLight(this, &_result))
        return MicrosoftUIComposition_PointLightBinding.fromABI(consuming: &_result)
    }

    public func createSpotLight() throws -> MicrosoftUIComposition_SpotLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ISpotLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpotLight(this, &_result))
        return MicrosoftUIComposition_SpotLightBinding.fromABI(consuming: &_result)
    }

    public func createStepEasingFunction() throws -> MicrosoftUIComposition_StepEasingFunction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IStepEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStepEasingFunction(this, &_result))
        return MicrosoftUIComposition_StepEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createStepEasingFunctionWithStepCount(_ stepCount: Swift.Int32) throws -> MicrosoftUIComposition_StepEasingFunction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IStepEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStepEasingFunctionWithStepCount(this, stepCount, &_result))
        return MicrosoftUIComposition_StepEasingFunctionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositor4

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositor4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEE444BCA, 0x735C, 0x5CF2, 0xB79D, 0xA6DD46C16160)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositor4 {
    public func createColorGradientStop() throws -> MicrosoftUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorGradientStop(this, &_result))
        return MicrosoftUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    public func createColorGradientStopWithOffsetAndColor(_ offset: Swift.Float, _ color: WindowsUI_Color) throws -> MicrosoftUIComposition_CompositionColorGradientStop? {
        let color_abi = WindowsUI_Color.toABI(color)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorGradientStopWithOffsetAndColor(this, offset, color_abi, &_result))
        return MicrosoftUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    public func createLinearGradientBrush() throws -> MicrosoftUIComposition_CompositionLinearGradientBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionLinearGradientBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLinearGradientBrush(this, &_result))
        return MicrosoftUIComposition_CompositionLinearGradientBrushBinding.fromABI(consuming: &_result)
    }

    public func createSpringScalarAnimation() throws -> MicrosoftUIComposition_SpringScalarNaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ISpringScalarNaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpringScalarAnimation(this, &_result))
        return MicrosoftUIComposition_SpringScalarNaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createSpringVector2Animation() throws -> MicrosoftUIComposition_SpringVector2NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ISpringVector2NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpringVector2Animation(this, &_result))
        return MicrosoftUIComposition_SpringVector2NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createSpringVector3Animation() throws -> MicrosoftUIComposition_SpringVector3NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ISpringVector3NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpringVector3Animation(this, &_result))
        return MicrosoftUIComposition_SpringVector3NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositor5

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositor5.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBB52D644, 0xA030, 0x5C19, 0xB883, 0x577DED739AE7)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositor5 {
    public func get_Comment() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Comment(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Comment(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Comment(this, value_abi))
    }

    public func get_GlobalPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_GlobalPlaybackRate(this, &_result))
        return _result
    }

    public func put_GlobalPlaybackRate(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_GlobalPlaybackRate(this, value))
    }

    public func createBounceScalarAnimation() throws -> MicrosoftUIComposition_BounceScalarNaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IBounceScalarNaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBounceScalarAnimation(this, &_result))
        return MicrosoftUIComposition_BounceScalarNaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createBounceVector2Animation() throws -> MicrosoftUIComposition_BounceVector2NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IBounceVector2NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBounceVector2Animation(this, &_result))
        return MicrosoftUIComposition_BounceVector2NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createBounceVector3Animation() throws -> MicrosoftUIComposition_BounceVector3NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IBounceVector3NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBounceVector3Animation(this, &_result))
        return MicrosoftUIComposition_BounceVector3NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createContainerShape() throws -> MicrosoftUIComposition_CompositionContainerShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionContainerShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateContainerShape(this, &_result))
        return MicrosoftUIComposition_CompositionContainerShapeBinding.fromABI(consuming: &_result)
    }

    public func createEllipseGeometry() throws -> MicrosoftUIComposition_CompositionEllipseGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionEllipseGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateEllipseGeometry(this, &_result))
        return MicrosoftUIComposition_CompositionEllipseGeometryBinding.fromABI(consuming: &_result)
    }

    public func createLineGeometry() throws -> MicrosoftUIComposition_CompositionLineGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionLineGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLineGeometry(this, &_result))
        return MicrosoftUIComposition_CompositionLineGeometryBinding.fromABI(consuming: &_result)
    }

    public func createPathGeometry() throws -> MicrosoftUIComposition_CompositionPathGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionPathGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePathGeometry(this, &_result))
        return MicrosoftUIComposition_CompositionPathGeometryBinding.fromABI(consuming: &_result)
    }

    public func createPathGeometryWithPath(_ path: MicrosoftUIComposition_CompositionPath?) throws -> MicrosoftUIComposition_CompositionPathGeometry? {
        var path_abi = try MicrosoftUIComposition_CompositionPathBinding.toABI(path)
        defer { MicrosoftUIComposition_CompositionPathBinding.release(&path_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionPathGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePathGeometryWithPath(this, path_abi, &_result))
        return MicrosoftUIComposition_CompositionPathGeometryBinding.fromABI(consuming: &_result)
    }

    public func createPathKeyFrameAnimation() throws -> MicrosoftUIComposition_PathKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IPathKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePathKeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_PathKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createRectangleGeometry() throws -> MicrosoftUIComposition_CompositionRectangleGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionRectangleGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRectangleGeometry(this, &_result))
        return MicrosoftUIComposition_CompositionRectangleGeometryBinding.fromABI(consuming: &_result)
    }

    public func createRoundedRectangleGeometry() throws -> MicrosoftUIComposition_CompositionRoundedRectangleGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionRoundedRectangleGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRoundedRectangleGeometry(this, &_result))
        return MicrosoftUIComposition_CompositionRoundedRectangleGeometryBinding.fromABI(consuming: &_result)
    }

    public func createShapeVisual() throws -> MicrosoftUIComposition_ShapeVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IShapeVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateShapeVisual(this, &_result))
        return MicrosoftUIComposition_ShapeVisualBinding.fromABI(consuming: &_result)
    }

    public func createSpriteShape() throws -> MicrosoftUIComposition_CompositionSpriteShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionSpriteShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpriteShape(this, &_result))
        return MicrosoftUIComposition_CompositionSpriteShapeBinding.fromABI(consuming: &_result)
    }

    public func createSpriteShapeWithGeometry(_ geometry: MicrosoftUIComposition_CompositionGeometry?) throws -> MicrosoftUIComposition_CompositionSpriteShape? {
        var geometry_abi = try MicrosoftUIComposition_CompositionGeometryBinding.toABI(geometry)
        defer { MicrosoftUIComposition_CompositionGeometryBinding.release(&geometry_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionSpriteShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpriteShapeWithGeometry(this, geometry_abi, &_result))
        return MicrosoftUIComposition_CompositionSpriteShapeBinding.fromABI(consuming: &_result)
    }

    public func createViewBox() throws -> MicrosoftUIComposition_CompositionViewBox? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionViewBox>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateViewBox(this, &_result))
        return MicrosoftUIComposition_CompositionViewBoxBinding.fromABI(consuming: &_result)
    }

    public func requestCommitAsync() throws -> WindowsFoundation_IAsyncAction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RequestCommitAsync(this, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositor6

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositor6.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5FD20200, 0xC188, 0x5737, 0xB567, 0x5E61741AF19C)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositor6 {
    public func createGeometricClip() throws -> MicrosoftUIComposition_CompositionGeometricClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionGeometricClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateGeometricClip(this, &_result))
        return MicrosoftUIComposition_CompositionGeometricClipBinding.fromABI(consuming: &_result)
    }

    public func createGeometricClipWithGeometry(_ geometry: MicrosoftUIComposition_CompositionGeometry?) throws -> MicrosoftUIComposition_CompositionGeometricClip? {
        var geometry_abi = try MicrosoftUIComposition_CompositionGeometryBinding.toABI(geometry)
        defer { MicrosoftUIComposition_CompositionGeometryBinding.release(&geometry_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionGeometricClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateGeometricClipWithGeometry(this, geometry_abi, &_result))
        return MicrosoftUIComposition_CompositionGeometricClipBinding.fromABI(consuming: &_result)
    }

    public func createRedirectVisual() throws -> MicrosoftUIComposition_RedirectVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IRedirectVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRedirectVisual(this, &_result))
        return MicrosoftUIComposition_RedirectVisualBinding.fromABI(consuming: &_result)
    }

    public func createRedirectVisualWithSourceVisual(_ source: MicrosoftUIComposition_Visual?) throws -> MicrosoftUIComposition_RedirectVisual? {
        var source_abi = try MicrosoftUIComposition_VisualBinding.toABI(source)
        defer { MicrosoftUIComposition_VisualBinding.release(&source_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IRedirectVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRedirectVisualWithSourceVisual(this, source_abi, &_result))
        return MicrosoftUIComposition_RedirectVisualBinding.fromABI(consuming: &_result)
    }

    public func createBooleanKeyFrameAnimation() throws -> MicrosoftUIComposition_BooleanKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IBooleanKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBooleanKeyFrameAnimation(this, &_result))
        return MicrosoftUIComposition_BooleanKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositor7

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositor7.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5358B81B, 0x4799, 0x5E7C, 0x906C, 0xE3DF3B2E95EB)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositor7 {
    public func get_DispatcherQueue() throws -> MicrosoftUIDispatching_DispatcherQueue? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIDispatching_IDispatcherQueue>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DispatcherQueue(this, &_result))
        return MicrosoftUIDispatching_DispatcherQueueBinding.fromABI(consuming: &_result)
    }

    public func createAnimationPropertyInfo() throws -> MicrosoftUIComposition_AnimationPropertyInfo? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IAnimationPropertyInfo>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateAnimationPropertyInfo(this, &_result))
        return MicrosoftUIComposition_AnimationPropertyInfoBinding.fromABI(consuming: &_result)
    }

    public func createRectangleClip() throws -> MicrosoftUIComposition_RectangleClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IRectangleClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRectangleClip(this, &_result))
        return MicrosoftUIComposition_RectangleClipBinding.fromABI(consuming: &_result)
    }

    public func createRectangleClipWithSides(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float) throws -> MicrosoftUIComposition_RectangleClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IRectangleClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRectangleClipWithSides(this, left, top, right, bottom, &_result))
        return MicrosoftUIComposition_RectangleClipBinding.fromABI(consuming: &_result)
    }

    public func createRectangleClipWithSidesAndRadius(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float, _ topLeftRadius: WindowsFoundationNumerics_Vector2, _ topRightRadius: WindowsFoundationNumerics_Vector2, _ bottomRightRadius: WindowsFoundationNumerics_Vector2, _ bottomLeftRadius: WindowsFoundationNumerics_Vector2) throws -> MicrosoftUIComposition_RectangleClip? {
        let topLeftRadius_abi = WindowsFoundationNumerics_Vector2.toABI(topLeftRadius)
        let topRightRadius_abi = WindowsFoundationNumerics_Vector2.toABI(topRightRadius)
        let bottomRightRadius_abi = WindowsFoundationNumerics_Vector2.toABI(bottomRightRadius)
        let bottomLeftRadius_abi = WindowsFoundationNumerics_Vector2.toABI(bottomLeftRadius)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IRectangleClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRectangleClipWithSidesAndRadius(this, left, top, right, bottom, topLeftRadius_abi, topRightRadius_abi, bottomRightRadius_abi, bottomLeftRadius_abi, &_result))
        return MicrosoftUIComposition_RectangleClipBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositor8

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositor8.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x02F5C9EE, 0xA3C0, 0x577A, 0x9D23, 0x44024C8EACDA)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositor8 {
    public func createAnimationController() throws -> MicrosoftUIComposition_AnimationController? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IAnimationController>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateAnimationController(this, &_result))
        return MicrosoftUIComposition_AnimationControllerBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositorStatics

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositorStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6BAA947A, 0xF103, 0x55C6, 0x91AD, 0x3D275BEA65C4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositorStatics {
    public func get_MaxGlobalPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxGlobalPlaybackRate(this, &_result))
        return _result
    }

    public func get_MinGlobalPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinGlobalPlaybackRate(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.ICompositorWithProjectedShadow

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositorWithProjectedShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60AB2BF2, 0xB95C, 0x5944, 0x8B36, 0xC9773B9F5256)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositorWithProjectedShadow {
    public func createProjectedShadowCaster() throws -> MicrosoftUIComposition_CompositionProjectedShadowCaster? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCaster>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateProjectedShadowCaster(this, &_result))
        return MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.fromABI(consuming: &_result)
    }

    public func createProjectedShadow() throws -> MicrosoftUIComposition_CompositionProjectedShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionProjectedShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateProjectedShadow(this, &_result))
        return MicrosoftUIComposition_CompositionProjectedShadowBinding.fromABI(consuming: &_result)
    }

    public func createProjectedShadowReceiver() throws -> MicrosoftUIComposition_CompositionProjectedShadowReceiver? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionProjectedShadowReceiver>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateProjectedShadowReceiver(this, &_result))
        return MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositorWithRadialGradient

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositorWithRadialGradient.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFA4F8F7D, 0x5CC7, 0x5C9C, 0x883B, 0xFE878A2F3E30)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositorWithRadialGradient {
    public func createRadialGradientBrush() throws -> MicrosoftUIComposition_CompositionRadialGradientBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionRadialGradientBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRadialGradientBrush(this, &_result))
        return MicrosoftUIComposition_CompositionRadialGradientBrushBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.ICompositorWithVisualSurface

public func uuidof(_: SWRT_MicrosoftUIComposition_ICompositorWithVisualSurface.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5FCFE24A, 0x690A, 0x5378, 0xACEE, 0x561E84BFB982)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICompositorWithVisualSurface {
    public func createVisualSurface() throws -> MicrosoftUIComposition_CompositionVisualSurface? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionVisualSurface>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVisualSurface(this, &_result))
        return MicrosoftUIComposition_CompositionVisualSurfaceBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.IContainerVisual

public func uuidof(_: SWRT_MicrosoftUIComposition_IContainerVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC70DBCE1, 0x2C2F, 0x5D8E, 0x91A4, 0xAAE1121E6186)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IContainerVisual {
    public func get_Children() throws -> MicrosoftUIComposition_VisualCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisualCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Children(this, &_result))
        return MicrosoftUIComposition_VisualCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.IContainerVisualFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_IContainerVisualFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3FA45EEB, 0xC6DD, 0x5AFD, 0x971D, 0xEAAF6245E716)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IContainerVisualFactory {
}

// MARK: Microsoft.UI.Composition.ICubicBezierEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_ICubicBezierEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x35E7FCDE, 0xF9CE, 0x590A, 0x8B88, 0x64A82A6B4B48)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ICubicBezierEasingFunction {
    public func get_ControlPoint1() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ControlPoint1(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func get_ControlPoint2() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ControlPoint2(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Composition.IDistantLight

public func uuidof(_: SWRT_MicrosoftUIComposition_IDistantLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x125EF556, 0x56EE, 0x5C60, 0xB944, 0x571928CA03F5)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IDistantLight {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_CoordinateSpace() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CoordinateSpace(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CoordinateSpace(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CoordinateSpace(this, value_abi))
    }

    public func get_Direction() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Direction(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Direction(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Direction(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IDistantLight2

public func uuidof(_: SWRT_MicrosoftUIComposition_IDistantLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9F97BFEC, 0xB6B9, 0x51EE, 0x8480, 0xB546468C748F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IDistantLight2 {
    public func get_Intensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Intensity(this, &_result))
        return _result
    }

    public func put_Intensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Intensity(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IDropShadow

public func uuidof(_: SWRT_MicrosoftUIComposition_IDropShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x977095D2, 0x265F, 0x5F58, 0x9789, 0xCB7F85E98C9E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IDropShadow {
    public func get_BlurRadius() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BlurRadius(this, &_result))
        return _result
    }

    public func put_BlurRadius(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BlurRadius(this, value))
    }

    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_Mask() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mask(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Mask(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Mask(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Opacity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Opacity(this, &_result))
        return _result
    }

    public func put_Opacity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Opacity(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IDropShadow2

public func uuidof(_: SWRT_MicrosoftUIComposition_IDropShadow2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCBC7C266, 0x2D33, 0x5711, 0xB3B4, 0x5699410BEF56)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IDropShadow2 {
    public func get_SourcePolicy() throws -> MicrosoftUIComposition_CompositionDropShadowSourcePolicy {
        var _result: SWRT_MicrosoftUIComposition_CompositionDropShadowSourcePolicy = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourcePolicy(this, &_result))
        return MicrosoftUIComposition_CompositionDropShadowSourcePolicy.fromABI(_result)
    }

    public func put_SourcePolicy(_ value: MicrosoftUIComposition_CompositionDropShadowSourcePolicy) throws {
        let value_abi = MicrosoftUIComposition_CompositionDropShadowSourcePolicy.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourcePolicy(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IElasticEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_IElasticEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB952E12F, 0x4A50, 0x51A9, 0xA11A, 0x23855F4AAE07)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IElasticEasingFunction {
    public func get_Mode() throws -> MicrosoftUIComposition_CompositionEasingFunctionMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionEasingFunctionMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mode(this, &_result))
        return MicrosoftUIComposition_CompositionEasingFunctionMode.fromABI(_result)
    }

    public func get_Oscillations() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Oscillations(this, &_result))
        return _result
    }

    public func get_Springiness() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Springiness(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.IExponentialEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_IExponentialEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDF29ECC1, 0x3FFC, 0x565F, 0x9D6C, 0x533586908106)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IExponentialEasingFunction {
    public func get_Mode() throws -> MicrosoftUIComposition_CompositionEasingFunctionMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionEasingFunctionMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mode(this, &_result))
        return MicrosoftUIComposition_CompositionEasingFunctionMode.fromABI(_result)
    }

    public func get_Exponent() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Exponent(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.IExpressionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IExpressionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7FFF5826, 0x1992, 0x56C0, 0x9060, 0x5ADE561A4F2D)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IExpressionAnimation {
    public func get_Expression() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Expression(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Expression(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Expression(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IImplicitAnimationCollection

public func uuidof(_: SWRT_MicrosoftUIComposition_IImplicitAnimationCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC5C0689E, 0xF5AE, 0x5BED, 0x829B, 0xC522CDA39717)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IImplicitAnimationCollection {
}

// MARK: Microsoft.UI.Composition.IInsetClip

public func uuidof(_: SWRT_MicrosoftUIComposition_IInsetClip.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF9D99475, 0x7B59, 0x5B28, 0xA1D2, 0xB832DA6988C9)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IInsetClip {
    public func get_BottomInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomInset(this, &_result))
        return _result
    }

    public func put_BottomInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomInset(this, value))
    }

    public func get_LeftInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LeftInset(this, &_result))
        return _result
    }

    public func put_LeftInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LeftInset(this, value))
    }

    public func get_RightInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RightInset(this, &_result))
        return _result
    }

    public func put_RightInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RightInset(this, value))
    }

    public func get_TopInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopInset(this, &_result))
        return _result
    }

    public func put_TopInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopInset(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IKeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5A8F57F0, 0xF059, 0x5B47, 0xB308, 0xC4C80FC71248)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IKeyFrameAnimation {
    public func get_DelayTime() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayTime(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_DelayTime(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayTime(this, value_abi))
    }

    public func get_Duration() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Duration(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Duration(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Duration(this, value_abi))
    }

    public func get_IterationBehavior() throws -> MicrosoftUIComposition_AnimationIterationBehavior {
        var _result: SWRT_MicrosoftUIComposition_AnimationIterationBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IterationBehavior(this, &_result))
        return MicrosoftUIComposition_AnimationIterationBehavior.fromABI(_result)
    }

    public func put_IterationBehavior(_ value: MicrosoftUIComposition_AnimationIterationBehavior) throws {
        let value_abi = MicrosoftUIComposition_AnimationIterationBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IterationBehavior(this, value_abi))
    }

    public func get_IterationCount() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IterationCount(this, &_result))
        return _result
    }

    public func put_IterationCount(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IterationCount(this, value))
    }

    public func get_KeyFrameCount() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_KeyFrameCount(this, &_result))
        return _result
    }

    public func get_StopBehavior() throws -> MicrosoftUIComposition_AnimationStopBehavior {
        var _result: SWRT_MicrosoftUIComposition_AnimationStopBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StopBehavior(this, &_result))
        return MicrosoftUIComposition_AnimationStopBehavior.fromABI(_result)
    }

    public func put_StopBehavior(_ value: MicrosoftUIComposition_AnimationStopBehavior) throws {
        let value_abi = MicrosoftUIComposition_AnimationStopBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StopBehavior(this, value_abi))
    }

    public func insertExpressionKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertExpressionKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertExpressionKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: Swift.String, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertExpressionKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.IKeyFrameAnimation2

public func uuidof(_: SWRT_MicrosoftUIComposition_IKeyFrameAnimation2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x414692E5, 0x8A7E, 0x58EA, 0x83E1, 0x25CE475D9300)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IKeyFrameAnimation2 {
    public func get_Direction() throws -> MicrosoftUIComposition_AnimationDirection {
        var _result: SWRT_MicrosoftUIComposition_AnimationDirection = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Direction(this, &_result))
        return MicrosoftUIComposition_AnimationDirection.fromABI(_result)
    }

    public func put_Direction(_ value: MicrosoftUIComposition_AnimationDirection) throws {
        let value_abi = MicrosoftUIComposition_AnimationDirection.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Direction(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IKeyFrameAnimation3

public func uuidof(_: SWRT_MicrosoftUIComposition_IKeyFrameAnimation3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4F97E180, 0x9BCB, 0x5FC4, 0xABBE, 0x43AA3BE327E7)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IKeyFrameAnimation3 {
    public func get_DelayBehavior() throws -> MicrosoftUIComposition_AnimationDelayBehavior {
        var _result: SWRT_MicrosoftUIComposition_AnimationDelayBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayBehavior(this, &_result))
        return MicrosoftUIComposition_AnimationDelayBehavior.fromABI(_result)
    }

    public func put_DelayBehavior(_ value: MicrosoftUIComposition_AnimationDelayBehavior) throws {
        let value_abi = MicrosoftUIComposition_AnimationDelayBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayBehavior(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IKeyFrameAnimationFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_IKeyFrameAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7CCCFC87, 0x3BAF, 0x5100, 0xB5F8, 0x2F779F954F19)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IKeyFrameAnimationFactory {
}

// MARK: Microsoft.UI.Composition.ILayerVisual

public func uuidof(_: SWRT_MicrosoftUIComposition_ILayerVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x64D05CA1, 0x3BF6, 0x5D4F, 0x98A1, 0x7500F2F23EBE)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ILayerVisual {
    public func get_Effect() throws -> MicrosoftUIComposition_CompositionEffectBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionEffectBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Effect(this, &_result))
        return MicrosoftUIComposition_CompositionEffectBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Effect(_ value: MicrosoftUIComposition_CompositionEffectBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionEffectBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionEffectBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Effect(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ILayerVisual2

public func uuidof(_: SWRT_MicrosoftUIComposition_ILayerVisual2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9AB2E401, 0xAF45, 0x54DA, 0x9991, 0xDD31273155D2)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ILayerVisual2 {
    public func get_Shadow() throws -> MicrosoftUIComposition_CompositionShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shadow(this, &_result))
        return MicrosoftUIComposition_CompositionShadowBinding.fromABI(consuming: &_result)
    }

    public func put_Shadow(_ value: MicrosoftUIComposition_CompositionShadow?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionShadowBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionShadowBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Shadow(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ILinearEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_ILinearEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x79BFEEF6, 0x70C7, 0x50A6, 0xBB3A, 0x0E9636148695)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ILinearEasingFunction {
}

// MARK: Microsoft.UI.Composition.INaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_INaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2FF54EBB, 0xA035, 0x50BE, 0xA73C, 0x20014975EE31)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_INaturalMotionAnimation {
    public func get_DelayBehavior() throws -> MicrosoftUIComposition_AnimationDelayBehavior {
        var _result: SWRT_MicrosoftUIComposition_AnimationDelayBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayBehavior(this, &_result))
        return MicrosoftUIComposition_AnimationDelayBehavior.fromABI(_result)
    }

    public func put_DelayBehavior(_ value: MicrosoftUIComposition_AnimationDelayBehavior) throws {
        let value_abi = MicrosoftUIComposition_AnimationDelayBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayBehavior(this, value_abi))
    }

    public func get_DelayTime() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayTime(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_DelayTime(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayTime(this, value_abi))
    }

    public func get_StopBehavior() throws -> MicrosoftUIComposition_AnimationStopBehavior {
        var _result: SWRT_MicrosoftUIComposition_AnimationStopBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StopBehavior(this, &_result))
        return MicrosoftUIComposition_AnimationStopBehavior.fromABI(_result)
    }

    public func put_StopBehavior(_ value: MicrosoftUIComposition_AnimationStopBehavior) throws {
        let value_abi = MicrosoftUIComposition_AnimationStopBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StopBehavior(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.INaturalMotionAnimationFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_INaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0411A259, 0x2622, 0x59E2, 0xA59E, 0x1E23D8F83A9F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_INaturalMotionAnimationFactory {
}

// MARK: Microsoft.UI.Composition.IPathKeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IPathKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2B692808, 0x43DA, 0x5118, 0xB66D, 0x904A3EC74FD9)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IPathKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ path: MicrosoftUIComposition_CompositionPath?) throws {
        var path_abi = try MicrosoftUIComposition_CompositionPathBinding.toABI(path)
        defer { MicrosoftUIComposition_CompositionPathBinding.release(&path_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, path_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ path: MicrosoftUIComposition_CompositionPath?, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        var path_abi = try MicrosoftUIComposition_CompositionPathBinding.toABI(path)
        defer { MicrosoftUIComposition_CompositionPathBinding.release(&path_abi) }
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, path_abi, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.IPointLight

public func uuidof(_: SWRT_MicrosoftUIComposition_IPointLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xED5CC102, 0xF0AC, 0x59A8, 0x8678, 0xCE54146E7BE8)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IPointLight {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_ConstantAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ConstantAttenuation(this, &_result))
        return _result
    }

    public func put_ConstantAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ConstantAttenuation(this, value))
    }

    public func get_CoordinateSpace() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CoordinateSpace(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CoordinateSpace(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CoordinateSpace(this, value_abi))
    }

    public func get_LinearAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LinearAttenuation(this, &_result))
        return _result
    }

    public func put_LinearAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LinearAttenuation(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_QuadraticAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_QuadraticAttenuation(this, &_result))
        return _result
    }

    public func put_QuadraticAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_QuadraticAttenuation(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IPointLight2

public func uuidof(_: SWRT_MicrosoftUIComposition_IPointLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDE466104, 0x59D9, 0x57D2, 0x92B5, 0x554D6D82EDF2)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IPointLight2 {
    public func get_Intensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Intensity(this, &_result))
        return _result
    }

    public func put_Intensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Intensity(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IPointLight3

public func uuidof(_: SWRT_MicrosoftUIComposition_IPointLight3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBE30E87A, 0x8CBB, 0x5A56, 0x8D24, 0x2CD865F383B3)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IPointLight3 {
    public func get_MinAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MinAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MinAttenuationCutoff(this, value))
    }

    public func get_MaxAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MaxAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MaxAttenuationCutoff(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IPowerEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_IPowerEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0268A272, 0xEA06, 0x5FB0, 0x8DEF, 0x49726BCEE39B)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IPowerEasingFunction {
    public func get_Mode() throws -> MicrosoftUIComposition_CompositionEasingFunctionMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionEasingFunctionMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mode(this, &_result))
        return MicrosoftUIComposition_CompositionEasingFunctionMode.fromABI(_result)
    }

    public func get_Power() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Power(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Composition.IQuaternionKeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IQuaternionKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE72D1026, 0xDA3B, 0x5D56, 0x858B, 0x3A9AA3C57D70)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IQuaternionKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Quaternion) throws {
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Quaternion, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.IRectangleClip

public func uuidof(_: SWRT_MicrosoftUIComposition_IRectangleClip.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBC261502, 0x2259, 0x5C01, 0x8616, 0x556110A09657)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IRectangleClip {
    public func get_Bottom() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Bottom(this, &_result))
        return _result
    }

    public func put_Bottom(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Bottom(this, value))
    }

    public func get_BottomLeftRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomLeftRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_BottomLeftRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomLeftRadius(this, value_abi))
    }

    public func get_BottomRightRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomRightRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_BottomRightRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomRightRadius(this, value_abi))
    }

    public func get_Left() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Left(this, &_result))
        return _result
    }

    public func put_Left(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Left(this, value))
    }

    public func get_Right() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Right(this, &_result))
        return _result
    }

    public func put_Right(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Right(this, value))
    }

    public func get_Top() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Top(this, &_result))
        return _result
    }

    public func put_Top(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Top(this, value))
    }

    public func get_TopLeftRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopLeftRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_TopLeftRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopLeftRadius(this, value_abi))
    }

    public func get_TopRightRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopRightRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_TopRightRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopRightRadius(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IRedirectVisual

public func uuidof(_: SWRT_MicrosoftUIComposition_IRedirectVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6C10081A, 0xCDE1, 0x50D9, 0xAC05, 0x78D6845B656F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IRedirectVisual {
    public func get_Source() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Source(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_Source(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Source(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IScalarKeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IScalarKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5A5F8ABE, 0xD129, 0x5B25, 0x8AFF, 0x8180FD9BFB22)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IScalarKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: Swift.Float, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.IScalarNaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x903224B0, 0x2DBE, 0x56EB, 0xB9EA, 0x33D2E3113181)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimation {
    public func get_FinalValue() throws -> Swift.Float? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalValue(this, &_result))
        return WindowsRuntime.SingleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func put_FinalValue(_ value: Swift.Float?) throws {
        var value_abi = try WindowsRuntime.SingleBinding.IReferenceToOptional.toABI(value)
        defer { WindowsRuntime.SingleBinding.IReferenceToOptional.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalValue(this, value_abi))
    }

    public func get_InitialValue() throws -> Swift.Float? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValue(this, &_result))
        return WindowsRuntime.SingleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func put_InitialValue(_ value: Swift.Float?) throws {
        var value_abi = try WindowsRuntime.SingleBinding.IReferenceToOptional.toABI(value)
        defer { WindowsRuntime.SingleBinding.IReferenceToOptional.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialValue(this, value_abi))
    }

    public func get_InitialVelocity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialVelocity(this, &_result))
        return _result
    }

    public func put_InitialVelocity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialVelocity(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x14F8A9AB, 0x976C, 0x5E6F, 0x890B, 0x9A74D07FA39F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IScalarNaturalMotionAnimationFactory {
}

// MARK: Microsoft.UI.Composition.IShapeVisual

public func uuidof(_: SWRT_MicrosoftUIComposition_IShapeVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA911C80B, 0xA5A5, 0x5ACA, 0xB8FF, 0xC43F08F06143)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IShapeVisual {
    public func get_Shapes() throws -> MicrosoftUIComposition_CompositionShapeCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_MicrosoftUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shapes(this, &_result))
        return MicrosoftUIComposition_CompositionShapeCollectionBinding.fromABI(consuming: &_result)
    }

    public func get_ViewBox() throws -> MicrosoftUIComposition_CompositionViewBox? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionViewBox>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ViewBox(this, &_result))
        return MicrosoftUIComposition_CompositionViewBoxBinding.fromABI(consuming: &_result)
    }

    public func put_ViewBox(_ value: MicrosoftUIComposition_CompositionViewBox?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionViewBoxBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionViewBoxBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ViewBox(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ISineEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_ISineEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7FCCB5F8, 0xCB0E, 0x5A01, 0xA26B, 0x98880FF49DC6)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISineEasingFunction {
    public func get_Mode() throws -> MicrosoftUIComposition_CompositionEasingFunctionMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionEasingFunctionMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mode(this, &_result))
        return MicrosoftUIComposition_CompositionEasingFunctionMode.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Composition.ISpotLight

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpotLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5935496A, 0x0586, 0x5F77, 0xBD03, 0xD5A6BB9E8FA0)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpotLight {
    public func get_ConstantAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ConstantAttenuation(this, &_result))
        return _result
    }

    public func put_ConstantAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ConstantAttenuation(this, value))
    }

    public func get_CoordinateSpace() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CoordinateSpace(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CoordinateSpace(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CoordinateSpace(this, value_abi))
    }

    public func get_Direction() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Direction(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Direction(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Direction(this, value_abi))
    }

    public func get_InnerConeAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeAngle(this, &_result))
        return _result
    }

    public func put_InnerConeAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeAngle(this, value))
    }

    public func get_InnerConeAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeAngleInDegrees(this, &_result))
        return _result
    }

    public func put_InnerConeAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeAngleInDegrees(this, value))
    }

    public func get_InnerConeColor() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeColor(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_InnerConeColor(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeColor(this, value_abi))
    }

    public func get_LinearAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LinearAttenuation(this, &_result))
        return _result
    }

    public func put_LinearAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LinearAttenuation(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_OuterConeAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeAngle(this, &_result))
        return _result
    }

    public func put_OuterConeAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeAngle(this, value))
    }

    public func get_OuterConeAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeAngleInDegrees(this, &_result))
        return _result
    }

    public func put_OuterConeAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeAngleInDegrees(this, value))
    }

    public func get_OuterConeColor() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeColor(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_OuterConeColor(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeColor(this, value_abi))
    }

    public func get_QuadraticAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_QuadraticAttenuation(this, &_result))
        return _result
    }

    public func put_QuadraticAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_QuadraticAttenuation(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ISpotLight2

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpotLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x49DD3B50, 0xEC5C, 0x5B6C, 0xBAA1, 0x8504B13E3A67)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpotLight2 {
    public func get_InnerConeIntensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeIntensity(this, &_result))
        return _result
    }

    public func put_InnerConeIntensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeIntensity(this, value))
    }

    public func get_OuterConeIntensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeIntensity(this, &_result))
        return _result
    }

    public func put_OuterConeIntensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeIntensity(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ISpotLight3

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpotLight3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC6919941, 0x0D9F, 0x58C8, 0x91E2, 0xADEF6E5E70A4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpotLight3 {
    public func get_MinAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MinAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MinAttenuationCutoff(this, value))
    }

    public func get_MaxAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MaxAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MaxAttenuationCutoff(this, value))
    }
}

// MARK: Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpringScalarNaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6F720AFD, 0xD3D0, 0x5E78, 0x9C2E, 0x83092F6EA45E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpringScalarNaturalMotionAnimation {
    public func get_DampingRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DampingRatio(this, &_result))
        return _result
    }

    public func put_DampingRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DampingRatio(this, value))
    }

    public func get_Period() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Period(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Period(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Period(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpringVector2NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5B4580A4, 0x2594, 0x521E, 0xB288, 0xEAF2C2A16A66)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpringVector2NaturalMotionAnimation {
    public func get_DampingRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DampingRatio(this, &_result))
        return _result
    }

    public func put_DampingRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DampingRatio(this, value))
    }

    public func get_Period() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Period(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Period(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Period(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpringVector3NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x02D9E1C6, 0x7434, 0x5464, 0xA1F6, 0xD644CE1FC9A6)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpringVector3NaturalMotionAnimation {
    public func get_DampingRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DampingRatio(this, &_result))
        return _result
    }

    public func put_DampingRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DampingRatio(this, value))
    }

    public func get_Period() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Period(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Period(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Period(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ISpriteVisual

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpriteVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7E964632, 0x45E4, 0x5761, 0x806D, 0x5B4022C14F26)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpriteVisual {
    public func get_Brush() throws -> MicrosoftUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Brush(this, &_result))
        return MicrosoftUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Brush(_ value: MicrosoftUIComposition_CompositionBrush?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionBrushBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Brush(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.ISpriteVisual2

public func uuidof(_: SWRT_MicrosoftUIComposition_ISpriteVisual2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3CB43662, 0x9ECF, 0x5128, 0x850D, 0x9EB8437774F0)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_ISpriteVisual2 {
    public func get_Shadow() throws -> MicrosoftUIComposition_CompositionShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shadow(this, &_result))
        return MicrosoftUIComposition_CompositionShadowBinding.fromABI(consuming: &_result)
    }

    public func put_Shadow(_ value: MicrosoftUIComposition_CompositionShadow?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionShadowBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionShadowBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Shadow(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IStepEasingFunction

public func uuidof(_: SWRT_MicrosoftUIComposition_IStepEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC7B1D4CF, 0xC562, 0x56B3, 0xB4E6, 0xB21326165F71)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IStepEasingFunction {
    public func get_FinalStep() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalStep(this, &_result))
        return _result
    }

    public func put_FinalStep(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalStep(this, value))
    }

    public func get_InitialStep() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialStep(this, &_result))
        return _result
    }

    public func put_InitialStep(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialStep(this, value))
    }

    public func get_IsFinalStepSingleFrame() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsFinalStepSingleFrame(this, &_result))
        return _result
    }

    public func put_IsFinalStepSingleFrame(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsFinalStepSingleFrame(this, value))
    }

    public func get_IsInitialStepSingleFrame() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInitialStepSingleFrame(this, &_result))
        return _result
    }

    public func put_IsInitialStepSingleFrame(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsInitialStepSingleFrame(this, value))
    }

    public func get_StepCount() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StepCount(this, &_result))
        return _result
    }

    public func put_StepCount(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StepCount(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IVector2KeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IVector2KeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE9C5E3FD, 0x43B7, 0x526E, 0x9DA0, 0x4C3EA96DB27D)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVector2KeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector2, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.IVector2NaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IVector2NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE00E60CE, 0xD1BE, 0x5C24, 0x885D, 0xC1D0A749D109)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVector2NaturalMotionAnimation {
    public func get_FinalValue() throws -> WindowsFoundationNumerics_Vector2? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.fromABI(consuming: &_result)
    }

    public func put_FinalValue(_ value: WindowsFoundationNumerics_Vector2?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalValue(this, value_abi))
    }

    public func get_InitialValue() throws -> WindowsFoundationNumerics_Vector2? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.fromABI(consuming: &_result)
    }

    public func put_InitialValue(_ value: WindowsFoundationNumerics_Vector2?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialValue(this, value_abi))
    }

    public func get_InitialVelocity() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialVelocity(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_InitialVelocity(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialVelocity(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_IVector2NaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE39AEAD8, 0x80F9, 0x5F64, 0x8644, 0xE9E5646B796F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVector2NaturalMotionAnimationFactory {
}

// MARK: Microsoft.UI.Composition.IVector3KeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IVector3KeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD7DA980E, 0x2DDE, 0x5DD1, 0xA40C, 0xD6868DD2449E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVector3KeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector3, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.IVector3NaturalMotionAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IVector3NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x13FEEEF2, 0xD2C0, 0x5B72, 0xAD67, 0x983A19B9B783)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVector3NaturalMotionAnimation {
    public func get_FinalValue() throws -> WindowsFoundationNumerics_Vector3? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.fromABI(consuming: &_result)
    }

    public func put_FinalValue(_ value: WindowsFoundationNumerics_Vector3?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalValue(this, value_abi))
    }

    public func get_InitialValue() throws -> WindowsFoundationNumerics_Vector3? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.fromABI(consuming: &_result)
    }

    public func put_InitialValue(_ value: WindowsFoundationNumerics_Vector3?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialValue(this, value_abi))
    }

    public func get_InitialVelocity() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialVelocity(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_InitialVelocity(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialVelocity(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_IVector3NaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x428241CB, 0xBE9C, 0x5C2A, 0x939C, 0xEC78AA60BB8A)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVector3NaturalMotionAnimationFactory {
}

// MARK: Microsoft.UI.Composition.IVector4KeyFrameAnimation

public func uuidof(_: SWRT_MicrosoftUIComposition_IVector4KeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x16CEA3B9, 0xC5E3, 0x5F6F, 0xB5C7, 0xDA29A31CCFC7)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVector4KeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector4) throws {
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector4, _ easingFunction: MicrosoftUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        var easingFunction_abi = try MicrosoftUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { MicrosoftUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Microsoft.UI.Composition.IVisual

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC0EEAB6C, 0xC897, 0x5AC6, 0xA1C9, 0x63ABD5055B9B)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisual {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_BackfaceVisibility() throws -> MicrosoftUIComposition_CompositionBackfaceVisibility {
        var _result: SWRT_MicrosoftUIComposition_CompositionBackfaceVisibility = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BackfaceVisibility(this, &_result))
        return MicrosoftUIComposition_CompositionBackfaceVisibility.fromABI(_result)
    }

    public func put_BackfaceVisibility(_ value: MicrosoftUIComposition_CompositionBackfaceVisibility) throws {
        let value_abi = MicrosoftUIComposition_CompositionBackfaceVisibility.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BackfaceVisibility(this, value_abi))
    }

    public func get_BorderMode() throws -> MicrosoftUIComposition_CompositionBorderMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionBorderMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BorderMode(this, &_result))
        return MicrosoftUIComposition_CompositionBorderMode.fromABI(_result)
    }

    public func put_BorderMode(_ value: MicrosoftUIComposition_CompositionBorderMode) throws {
        let value_abi = MicrosoftUIComposition_CompositionBorderMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BorderMode(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Clip() throws -> MicrosoftUIComposition_CompositionClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Clip(this, &_result))
        return MicrosoftUIComposition_CompositionClipBinding.fromABI(consuming: &_result)
    }

    public func put_Clip(_ value: MicrosoftUIComposition_CompositionClip?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionClipBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionClipBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Clip(this, value_abi))
    }

    public func get_CompositeMode() throws -> MicrosoftUIComposition_CompositionCompositeMode {
        var _result: SWRT_MicrosoftUIComposition_CompositionCompositeMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CompositeMode(this, &_result))
        return MicrosoftUIComposition_CompositionCompositeMode.fromABI(_result)
    }

    public func put_CompositeMode(_ value: MicrosoftUIComposition_CompositionCompositeMode) throws {
        let value_abi = MicrosoftUIComposition_CompositionCompositeMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CompositeMode(this, value_abi))
    }

    public func get_IsVisible() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsVisible(this, &_result))
        return _result
    }

    public func put_IsVisible(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsVisible(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Opacity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Opacity(this, &_result))
        return _result
    }

    public func put_Opacity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Opacity(this, value))
    }

    public func get_Orientation() throws -> WindowsFoundationNumerics_Quaternion {
        var _result: SWRT_WindowsFoundationNumerics_Quaternion = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orientation(this, &_result))
        return WindowsFoundationNumerics_Quaternion.fromABI(_result)
    }

    public func put_Orientation(_ value: WindowsFoundationNumerics_Quaternion) throws {
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Orientation(this, value_abi))
    }

    public func get_Parent() throws -> MicrosoftUIComposition_ContainerVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IContainerVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Parent(this, &_result))
        return MicrosoftUIComposition_ContainerVisualBinding.fromABI(consuming: &_result)
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_RotationAxis() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAxis(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_RotationAxis(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAxis(this, value_abi))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix4x4 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix4x4 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix4x4.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix4x4) throws {
        let value_abi = WindowsFoundationNumerics_Matrix4x4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IVisual2

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisual2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x492A7995, 0x0C5C, 0x5993, 0xA283, 0x52E4DA3050EE)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisual2 {
    public func get_ParentForTransform() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ParentForTransform(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_ParentForTransform(_ value: MicrosoftUIComposition_Visual?) throws {
        var value_abi = try MicrosoftUIComposition_VisualBinding.toABI(value)
        defer { MicrosoftUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ParentForTransform(this, value_abi))
    }

    public func get_RelativeOffsetAdjustment() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RelativeOffsetAdjustment(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_RelativeOffsetAdjustment(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RelativeOffsetAdjustment(this, value_abi))
    }

    public func get_RelativeSizeAdjustment() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RelativeSizeAdjustment(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_RelativeSizeAdjustment(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RelativeSizeAdjustment(this, value_abi))
    }
}

// MARK: Microsoft.UI.Composition.IVisual3

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisual3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x972B70B0, 0x950D, 0x5656, 0xA380, 0xBD4A70775868)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisual3 {
    public func get_IsHitTestVisible() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsHitTestVisible(this, &_result))
        return _result
    }

    public func put_IsHitTestVisible(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsHitTestVisible(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IVisual4

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisual4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x27CB223F, 0xC431, 0x57AC, 0xB61E, 0xD6B7515D579F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisual4 {
    public func get_IsPixelSnappingEnabled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsPixelSnappingEnabled(this, &_result))
        return _result
    }

    public func put_IsPixelSnappingEnabled(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsPixelSnappingEnabled(this, value))
    }
}

// MARK: Microsoft.UI.Composition.IVisualCollection

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisualCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD002896D, 0x67D8, 0x5F69, 0xAB70, 0x581FA3BF370F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisualCollection {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func insertAbove(_ newChild: MicrosoftUIComposition_Visual?, _ sibling: MicrosoftUIComposition_Visual?) throws {
        var newChild_abi = try MicrosoftUIComposition_VisualBinding.toABI(newChild)
        defer { MicrosoftUIComposition_VisualBinding.release(&newChild_abi) }
        var sibling_abi = try MicrosoftUIComposition_VisualBinding.toABI(sibling)
        defer { MicrosoftUIComposition_VisualBinding.release(&sibling_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAbove(this, newChild_abi, sibling_abi))
    }

    public func insertAtBottom(_ newChild: MicrosoftUIComposition_Visual?) throws {
        var newChild_abi = try MicrosoftUIComposition_VisualBinding.toABI(newChild)
        defer { MicrosoftUIComposition_VisualBinding.release(&newChild_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtBottom(this, newChild_abi))
    }

    public func insertAtTop(_ newChild: MicrosoftUIComposition_Visual?) throws {
        var newChild_abi = try MicrosoftUIComposition_VisualBinding.toABI(newChild)
        defer { MicrosoftUIComposition_VisualBinding.release(&newChild_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtTop(this, newChild_abi))
    }

    public func insertBelow(_ newChild: MicrosoftUIComposition_Visual?, _ sibling: MicrosoftUIComposition_Visual?) throws {
        var newChild_abi = try MicrosoftUIComposition_VisualBinding.toABI(newChild)
        defer { MicrosoftUIComposition_VisualBinding.release(&newChild_abi) }
        var sibling_abi = try MicrosoftUIComposition_VisualBinding.toABI(sibling)
        defer { MicrosoftUIComposition_VisualBinding.release(&sibling_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertBelow(this, newChild_abi, sibling_abi))
    }

    public func remove(_ child: MicrosoftUIComposition_Visual?) throws {
        var child_abi = try MicrosoftUIComposition_VisualBinding.toABI(child)
        defer { MicrosoftUIComposition_VisualBinding.release(&child_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, child_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Microsoft.UI.Composition.IVisualElement

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisualElement.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2180F1F5, 0xB5D8, 0x4BF6, 0x920A, 0x12006E63EFEF)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisualElement {
}

// MARK: Microsoft.UI.Composition.IVisualElement2

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisualElement2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBC950C8D, 0x1DB0, 0x53AA, 0x9DEE, 0x34271CD18CE6)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisualElement2 {
    public func getVisualInternal() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetVisualInternal(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Composition.IVisualFactory

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisualFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x77BB4668, 0x83FA, 0x5BB5, 0xB78B, 0x5E6FDC3D4038)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisualFactory {
}

// MARK: Microsoft.UI.Composition.IVisualUnorderedCollection

public func uuidof(_: SWRT_MicrosoftUIComposition_IVisualUnorderedCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4A97216E, 0x793E, 0x54E3, 0x96E8, 0xF9DB790119CD)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIComposition_IVisualUnorderedCollection {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func add(_ newVisual: MicrosoftUIComposition_Visual?) throws {
        var newVisual_abi = try MicrosoftUIComposition_VisualBinding.toABI(newVisual)
        defer { MicrosoftUIComposition_VisualBinding.release(&newVisual_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Add(this, newVisual_abi))
    }

    public func remove(_ visual: MicrosoftUIComposition_Visual?) throws {
        var visual_abi = try MicrosoftUIComposition_VisualBinding.toABI(visual)
        defer { MicrosoftUIComposition_VisualBinding.release(&visual_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, visual_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfiguration

public func uuidof(_: SWRT_MicrosoftUICompositionSystemBackdrops_ISystemBackdropConfiguration.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEBCCE1B9, 0x0E0C, 0x5431, 0xAB0E, 0x00F3F0669962)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUICompositionSystemBackdrops_ISystemBackdropConfiguration {
    public func get_HighContrastBackgroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HighContrastBackgroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_HighContrastBackgroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_HighContrastBackgroundColor(this, value_abi))
    }

    public func get_IsHighContrast() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsHighContrast(this, &_result))
        return _result
    }

    public func put_IsHighContrast(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsHighContrast(this, value))
    }

    public func get_IsInputActive() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInputActive(this, &_result))
        return _result
    }

    public func put_IsInputActive(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsInputActive(this, value))
    }

    public func get_Theme() throws -> MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme {
        var _result: SWRT_MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Theme(this, &_result))
        return MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme.fromABI(_result)
    }

    public func put_Theme(_ value: MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme) throws {
        let value_abi = MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Theme(this, value_abi))
    }
}

// MARK: Microsoft.UI.Content.IContentCoordinateConverter

public func uuidof(_: SWRT_MicrosoftUIContent_IContentCoordinateConverter.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x10A11230, 0x5EB4, 0x5840, 0xA346, 0x570F4A49040F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIContent_IContentCoordinateConverter {
    public func convertLocalToScreenWithPoint(_ localPoint: WindowsFoundation_Point) throws -> WindowsGraphics_PointInt32 {
        let localPoint_abi = WindowsFoundation_Point.toABI(localPoint)
        var _result: SWRT_WindowsGraphics_PointInt32 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertLocalToScreenWithPoint(this, localPoint_abi, &_result))
        return WindowsGraphics_PointInt32.fromABI(_result)
    }

    public func convertLocalToScreenWithPoints(_ localPoints: [WindowsFoundation_Point]) throws -> [WindowsGraphics_PointInt32] {
        var localPoints_abi = try WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.toABI(localPoints)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.release(&localPoints_abi) }
        var _result: COM.COMArray<SWRT_WindowsGraphics_PointInt32> = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertLocalToScreenWithPoints(this, localPoints_abi.count, localPoints_abi.pointer, &_result.count, &_result.pointer))
        return WindowsRuntime.ArrayBinding<WindowsGraphics_PointInt32>.fromABI(consuming: &_result)
    }

    public func convertLocalToScreenWithPointsAndRoundingMode(_ localPoints: [WindowsFoundation_Point], _ roundingMode: MicrosoftUIContent_ContentCoordinateRoundingMode) throws -> [WindowsGraphics_PointInt32] {
        var localPoints_abi = try WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.toABI(localPoints)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.release(&localPoints_abi) }
        let roundingMode_abi = MicrosoftUIContent_ContentCoordinateRoundingMode.toABI(roundingMode)
        var _result: COM.COMArray<SWRT_WindowsGraphics_PointInt32> = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertLocalToScreenWithPointsAndRoundingMode(this, localPoints_abi.count, localPoints_abi.pointer, roundingMode_abi, &_result.count, &_result.pointer))
        return WindowsRuntime.ArrayBinding<WindowsGraphics_PointInt32>.fromABI(consuming: &_result)
    }

    public func convertLocalToScreenWithRect(_ localRect: WindowsFoundation_Rect) throws -> WindowsGraphics_RectInt32 {
        let localRect_abi = WindowsFoundation_Rect.toABI(localRect)
        var _result: SWRT_WindowsGraphics_RectInt32 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertLocalToScreenWithRect(this, localRect_abi, &_result))
        return WindowsGraphics_RectInt32.fromABI(_result)
    }

    public func convertScreenToLocalWithPoint(_ screenPoint: WindowsGraphics_PointInt32) throws -> WindowsFoundation_Point {
        let screenPoint_abi = WindowsGraphics_PointInt32.toABI(screenPoint)
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertScreenToLocalWithPoint(this, screenPoint_abi, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func convertScreenToLocalWithPoints(_ screenPoints: [WindowsGraphics_PointInt32]) throws -> [WindowsFoundation_Point] {
        var screenPoints_abi = try WindowsRuntime.ArrayBinding<WindowsGraphics_PointInt32>.toABI(screenPoints)
        defer { WindowsRuntime.ArrayBinding<WindowsGraphics_PointInt32>.release(&screenPoints_abi) }
        var _result: COM.COMArray<SWRT_WindowsFoundation_Point> = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertScreenToLocalWithPoints(this, screenPoints_abi.count, screenPoints_abi.pointer, &_result.count, &_result.pointer))
        return WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.fromABI(consuming: &_result)
    }

    public func convertScreenToLocalWithRect(_ screenRect: WindowsGraphics_RectInt32) throws -> WindowsFoundation_Rect {
        let screenRect_abi = WindowsGraphics_RectInt32.toABI(screenRect)
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertScreenToLocalWithRect(this, screenRect_abi, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Content.IContentCoordinateConverterFactory

public func uuidof(_: SWRT_MicrosoftUIContent_IContentCoordinateConverterFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA4B216EE, 0x0E26, 0x56BD, 0x9209, 0xA75CF9D80F27)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIContent_IContentCoordinateConverterFactory {
}

// MARK: Microsoft.UI.Content.IContentCoordinateConverterStatics

public func uuidof(_: SWRT_MicrosoftUIContent_IContentCoordinateConverterStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF56374CE, 0xB6DF, 0x5B42, 0xA58F, 0x4E3BB039E3A9)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIContent_IContentCoordinateConverterStatics {
    public func createForWindowId(_ windowId: MicrosoftUI_WindowId) throws -> MicrosoftUIContent_ContentCoordinateConverter? {
        let windowId_abi = MicrosoftUI_WindowId.toABI(windowId)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIContent_IContentCoordinateConverter>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateForWindowId(this, windowId_abi, &_result))
        return MicrosoftUIContent_ContentCoordinateConverterBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgs

public func uuidof(_: SWRT_MicrosoftUIContent_IContentEnvironmentSettingChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x76478051, 0xFC80, 0x5EEC, 0xA3F3, 0x62606ABE06B7)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIContent_IContentEnvironmentSettingChangedEventArgs {
    public func get_SettingName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SettingName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs

public func uuidof(_: SWRT_MicrosoftUIContent_IContentEnvironmentStateChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8970FA4F, 0x10BA, 0x5F67, 0x970B, 0x8C72BC009B67)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIContent_IContentEnvironmentStateChangedEventArgs {
    public func get_DidAppWindowIdChange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DidAppWindowIdChange(this, &_result))
        return _result
    }

    public func get_DidDisplayIdChange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DidDisplayIdChange(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Content.IContentIslandEnvironment

public func uuidof(_: SWRT_MicrosoftUIContent_IContentIslandEnvironment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC334236D, 0xDA88, 0x566D, 0x811D, 0x74AEF2EBA978)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIContent_IContentIslandEnvironment {
    public func get_AppWindowId() throws -> MicrosoftUI_WindowId {
        var _result: SWRT_MicrosoftUI_WindowId = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AppWindowId(this, &_result))
        return MicrosoftUI_WindowId.fromABI(_result)
    }

    public func get_DisplayId() throws -> MicrosoftUI_DisplayId {
        var _result: SWRT_MicrosoftUI_DisplayId = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayId(this, &_result))
        return MicrosoftUI_DisplayId.fromABI(_result)
    }

    public func add_SettingChanged(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIContent_ContentIslandEnvironment?, MicrosoftUIContent_ContentEnvironmentSettingChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.ContentIslandEnvironment_ContentEnvironmentSettingChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.ContentIslandEnvironment_ContentEnvironmentSettingChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_SettingChanged(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_SettingChanged(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_SettingChanged(this, token_abi))
    }

    public func add_StateChanged(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIContent_ContentIslandEnvironment?, MicrosoftUIContent_ContentEnvironmentStateChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.ContentIslandEnvironment_ContentEnvironmentStateChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.ContentIslandEnvironment_ContentEnvironmentStateChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_StateChanged(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_StateChanged(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_StateChanged(this, token_abi))
    }
}

// MARK: Microsoft.UI.Content.IContentIslandEnvironmentFactory

public func uuidof(_: SWRT_MicrosoftUIContent_IContentIslandEnvironmentFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x47A782D6, 0xB177, 0x5C1E, 0xBF87, 0x90437DD809D0)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIContent_IContentIslandEnvironmentFactory {
}

// MARK: Microsoft.UI.Dispatching.IDispatcherQueueHandler

public func uuidof(_: SWRT_MicrosoftUIDispatching_DispatcherQueueHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2E0872A9, 0x4E29, 0x5F14, 0xB688, 0xFB96D5F9D5F8)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_DispatcherQueueHandler {
    public func invoke() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this))
    }
}

// MARK: Microsoft.UI.Dispatching.IDispatcherExitDeferral

public func uuidof(_: SWRT_MicrosoftUIDispatching_IDispatcherExitDeferral.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x910B5AAC, 0x3310, 0x563E, 0x8418, 0xF3005579729E)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_IDispatcherExitDeferral {
    public func complete() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Complete(this))
    }
}

// MARK: Microsoft.UI.Dispatching.IDispatcherQueue

public func uuidof(_: SWRT_MicrosoftUIDispatching_IDispatcherQueue.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF6EBF8FA, 0xBE1C, 0x5BF6, 0xA467, 0x73DA28738AE8)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_IDispatcherQueue {
    public func createTimer() throws -> MicrosoftUIDispatching_DispatcherQueueTimer? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIDispatching_IDispatcherQueueTimer>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateTimer(this, &_result))
        return MicrosoftUIDispatching_DispatcherQueueTimerBinding.fromABI(consuming: &_result)
    }

    public func tryEnqueue(_ callback: MicrosoftUIDispatching_DispatcherQueueHandler?) throws -> Swift.Bool {
        var callback_abi = try MicrosoftUIDispatching_DispatcherQueueHandlerBinding.toABI(callback)
        defer { MicrosoftUIDispatching_DispatcherQueueHandlerBinding.release(&callback_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryEnqueue(this, callback_abi, &_result))
        return _result
    }

    public func tryEnqueueWithPriority(_ priority: MicrosoftUIDispatching_DispatcherQueuePriority, _ callback: MicrosoftUIDispatching_DispatcherQueueHandler?) throws -> Swift.Bool {
        let priority_abi = MicrosoftUIDispatching_DispatcherQueuePriority.toABI(priority)
        var callback_abi = try MicrosoftUIDispatching_DispatcherQueueHandlerBinding.toABI(callback)
        defer { MicrosoftUIDispatching_DispatcherQueueHandlerBinding.release(&callback_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryEnqueueWithPriority(this, priority_abi, callback_abi, &_result))
        return _result
    }

    public func add_ShutdownStarting(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIDispatching_DispatcherQueue?, MicrosoftUIDispatching_DispatcherQueueShutdownStartingEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_DispatcherQueueShutdownStartingEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_DispatcherQueueShutdownStartingEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ShutdownStarting(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ShutdownStarting(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ShutdownStarting(this, token_abi))
    }

    public func add_ShutdownCompleted(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIDispatching_DispatcherQueue?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ShutdownCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ShutdownCompleted(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ShutdownCompleted(this, token_abi))
    }
}

// MARK: Microsoft.UI.Dispatching.IDispatcherQueue2

public func uuidof(_: SWRT_MicrosoftUIDispatching_IDispatcherQueue2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0CF48751, 0xF1AC, 0x59B8, 0xBA52, 0x6CE7A1444D6F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_IDispatcherQueue2 {
    public func get_HasThreadAccess() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasThreadAccess(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Dispatching.IDispatcherQueue3

public func uuidof(_: SWRT_MicrosoftUIDispatching_IDispatcherQueue3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x14A7A175, 0x5C27, 0x5A35, 0xB079, 0x21960CF764A8)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_IDispatcherQueue3 {
    public func enqueueEventLoopExit() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.EnqueueEventLoopExit(this))
    }

    public func ensureSystemDispatcherQueue() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.EnsureSystemDispatcherQueue(this))
    }

    public func runEventLoop() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RunEventLoop(this))
    }

    public func runEventLoopWithOptions(_ options: MicrosoftUIDispatching_DispatcherRunOptions, _ deferral: MicrosoftUIDispatching_DispatcherExitDeferral?) throws {
        let options_abi = MicrosoftUIDispatching_DispatcherRunOptions.toABI(options)
        var deferral_abi = try MicrosoftUIDispatching_DispatcherExitDeferralBinding.toABI(deferral)
        defer { MicrosoftUIDispatching_DispatcherExitDeferralBinding.release(&deferral_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RunEventLoopWithOptions(this, options_abi, deferral_abi))
    }

    public func add_FrameworkShutdownStarting(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIDispatching_DispatcherQueue?, MicrosoftUIDispatching_DispatcherQueueShutdownStartingEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_DispatcherQueueShutdownStartingEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_DispatcherQueueShutdownStartingEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_FrameworkShutdownStarting(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_FrameworkShutdownStarting(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_FrameworkShutdownStarting(this, token_abi))
    }

    public func add_FrameworkShutdownCompleted(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIDispatching_DispatcherQueue?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_FrameworkShutdownCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_FrameworkShutdownCompleted(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_FrameworkShutdownCompleted(this, token_abi))
    }
}

// MARK: Microsoft.UI.Dispatching.IDispatcherQueueShutdownStartingEventArgs

public func uuidof(_: SWRT_MicrosoftUIDispatching_IDispatcherQueueShutdownStartingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x32519BE5, 0x072B, 0x5660, 0xA70E, 0x8835C9B8157D)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_IDispatcherQueueShutdownStartingEventArgs {
    public func getDeferral() throws -> WindowsFoundation_Deferral? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IDeferral>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDeferral(this, &_result))
        return WindowsFoundation_DeferralBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Dispatching.IDispatcherQueueStatics

public func uuidof(_: SWRT_MicrosoftUIDispatching_IDispatcherQueueStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCD3382EA, 0xA455, 0x5124, 0xB63A, 0xCA40D34CA23C)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_IDispatcherQueueStatics {
    public func getForCurrentThread() throws -> MicrosoftUIDispatching_DispatcherQueue? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIDispatching_IDispatcherQueue>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetForCurrentThread(this, &_result))
        return MicrosoftUIDispatching_DispatcherQueueBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Dispatching.IDispatcherQueueTimer

public func uuidof(_: SWRT_MicrosoftUIDispatching_IDispatcherQueueTimer.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAD4D63FD, 0x88FE, 0x541F, 0xAC11, 0xBF2DC1ED2CE5)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIDispatching_IDispatcherQueueTimer {
    public func get_Interval() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Interval(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Interval(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Interval(this, value_abi))
    }

    public func get_IsRunning() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsRunning(this, &_result))
        return _result
    }

    public func get_IsRepeating() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsRepeating(this, &_result))
        return _result
    }

    public func put_IsRepeating(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsRepeating(this, value))
    }

    public func start() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Start(this))
    }

    public func stop() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Stop(this))
    }

    public func add_Tick(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIDispatching_DispatcherQueueTimer?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueueTimer_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueueTimer_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Tick(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Tick(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Tick(this, token_abi))
    }
}

// MARK: Microsoft.UI.Input.IInputCursor

public func uuidof(_: SWRT_MicrosoftUIInput_IInputCursor.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x359B15F9, 0x19C2, 0x5714, 0x8432, 0x75176826406B)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIInput_IInputCursor {
}

// MARK: Microsoft.UI.Input.IInputCursorFactory

public func uuidof(_: SWRT_MicrosoftUIInput_IInputCursorFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2F47647B, 0x4BE0, 0x53E9, 0xBE7E, 0xC38D5459DB6B)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIInput_IInputCursorFactory {
}

// MARK: Microsoft.UI.Input.IInputCursorStatics

public func uuidof(_: SWRT_MicrosoftUIInput_IInputCursorStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x92F6A552, 0x099F, 0x55FB, 0x8C31, 0xE450284C9643)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIInput_IInputCursorStatics {
    public func createFromCoreCursor(_ cursor: WindowsUICore_CoreCursor?) throws -> MicrosoftUIInput_InputCursor? {
        var cursor_abi = try WindowsUICore_CoreCursorBinding.toABI(cursor)
        defer { WindowsUICore_CoreCursorBinding.release(&cursor_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIInput_IInputCursor>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFromCoreCursor(this, cursor_abi, &_result))
        return MicrosoftUIInput_InputCursorBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Input.IPointerPoint

public func uuidof(_: SWRT_MicrosoftUIInput_IPointerPoint.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0D430EE6, 0x252C, 0x59A4, 0xB2A2, 0xD44264DC6A40)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIInput_IPointerPoint {
    public func get_FrameId() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FrameId(this, &_result))
        return _result
    }

    public func get_IsInContact() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInContact(this, &_result))
        return _result
    }

    public func get_PointerDeviceType() throws -> MicrosoftUIInput_PointerDeviceType {
        var _result: SWRT_MicrosoftUIInput_PointerDeviceType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerDeviceType(this, &_result))
        return MicrosoftUIInput_PointerDeviceType.fromABI(_result)
    }

    public func get_PointerId() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerId(this, &_result))
        return _result
    }

    public func get_Position() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Position(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func get_Properties() throws -> MicrosoftUIInput_PointerPointProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIInput_IPointerPointProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Properties(this, &_result))
        return MicrosoftUIInput_PointerPointPropertiesBinding.fromABI(consuming: &_result)
    }

    public func get_Timestamp() throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Timestamp(this, &_result))
        return _result
    }

    public func getTransformedPoint(_ transform: MicrosoftUIInput_IPointerPointTransform?) throws -> MicrosoftUIInput_PointerPoint? {
        var transform_abi = try MicrosoftUIInput_IPointerPointTransformBinding.toABI(transform)
        defer { MicrosoftUIInput_IPointerPointTransformBinding.release(&transform_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIInput_IPointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetTransformedPoint(this, transform_abi, &_result))
        return MicrosoftUIInput_PointerPointBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Input.IPointerPointProperties

public func uuidof(_: SWRT_MicrosoftUIInput_IPointerPointProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD760ED77, 0x4B10, 0x57A5, 0xB3CC, 0xD9BF3413E996)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIInput_IPointerPointProperties {
    public func get_ContactRect() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContactRect(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func get_IsBarrelButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsBarrelButtonPressed(this, &_result))
        return _result
    }

    public func get_IsCanceled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsCanceled(this, &_result))
        return _result
    }

    public func get_IsEraser() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEraser(this, &_result))
        return _result
    }

    public func get_IsHorizontalMouseWheel() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsHorizontalMouseWheel(this, &_result))
        return _result
    }

    public func get_IsInRange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInRange(this, &_result))
        return _result
    }

    public func get_IsInverted() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInverted(this, &_result))
        return _result
    }

    public func get_IsLeftButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsLeftButtonPressed(this, &_result))
        return _result
    }

    public func get_IsMiddleButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsMiddleButtonPressed(this, &_result))
        return _result
    }

    public func get_IsPrimary() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsPrimary(this, &_result))
        return _result
    }

    public func get_IsRightButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsRightButtonPressed(this, &_result))
        return _result
    }

    public func get_IsXButton1Pressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsXButton1Pressed(this, &_result))
        return _result
    }

    public func get_IsXButton2Pressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsXButton2Pressed(this, &_result))
        return _result
    }

    public func get_MouseWheelDelta() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MouseWheelDelta(this, &_result))
        return _result
    }

    public func get_Orientation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orientation(this, &_result))
        return _result
    }

    public func get_PointerUpdateKind() throws -> MicrosoftUIInput_PointerUpdateKind {
        var _result: SWRT_MicrosoftUIInput_PointerUpdateKind = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerUpdateKind(this, &_result))
        return MicrosoftUIInput_PointerUpdateKind.fromABI(_result)
    }

    public func get_Pressure() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Pressure(this, &_result))
        return _result
    }

    public func get_TouchConfidence() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TouchConfidence(this, &_result))
        return _result
    }

    public func get_Twist() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Twist(this, &_result))
        return _result
    }

    public func get_XTilt() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_XTilt(this, &_result))
        return _result
    }

    public func get_YTilt() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_YTilt(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Input.IPointerPointTransform

public func uuidof(_: SWRT_MicrosoftUIInput_IPointerPointTransform.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDB4791BC, 0x994D, 0x54C7, 0x92EF, 0x66EA1DE9B43C)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIInput_IPointerPointTransform {
    public func get_Inverse() throws -> MicrosoftUIInput_IPointerPointTransform? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIInput_IPointerPointTransform>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Inverse(this, &_result))
        return MicrosoftUIInput_IPointerPointTransformBinding.fromABI(consuming: &_result)
    }

    public func tryTransform(_ inPoint: WindowsFoundation_Point, _ outPoint: inout WindowsFoundation_Point) throws -> Swift.Bool {
        let inPoint_abi = WindowsFoundation_Point.toABI(inPoint)
        var outPoint_abi: SWRT_WindowsFoundation_Point = .init()
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryTransform(this, inPoint_abi, &outPoint_abi, &_result))
        outPoint = WindowsFoundation_Point.fromABI(outPoint_abi)
        return _result
    }

    public func tryTransformBounds(_ inRect: WindowsFoundation_Rect, _ outRect: inout WindowsFoundation_Rect) throws -> Swift.Bool {
        let inRect_abi = WindowsFoundation_Rect.toABI(inRect)
        var outRect_abi: SWRT_WindowsFoundation_Rect = .init()
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryTransformBounds(this, inRect_abi, &outRect_abi, &_result))
        outRect = WindowsFoundation_Rect.fromABI(outRect_abi)
        return _result
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindow

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCFA788B3, 0x643B, 0x5C5E, 0xAD4E, 0x321D48A82ACD)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindow {
    public func get_Id() throws -> MicrosoftUI_WindowId {
        var _result: SWRT_MicrosoftUI_WindowId = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Id(this, &_result))
        return MicrosoftUI_WindowId.fromABI(_result)
    }

    public func get_IsShownInSwitchers() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsShownInSwitchers(this, &_result))
        return _result
    }

    public func put_IsShownInSwitchers(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsShownInSwitchers(this, value))
    }

    public func get_IsVisible() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsVisible(this, &_result))
        return _result
    }

    public func get_OwnerWindowId() throws -> MicrosoftUI_WindowId {
        var _result: SWRT_MicrosoftUI_WindowId = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OwnerWindowId(this, &_result))
        return MicrosoftUI_WindowId.fromABI(_result)
    }

    public func get_Position() throws -> WindowsGraphics_PointInt32 {
        var _result: SWRT_WindowsGraphics_PointInt32 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Position(this, &_result))
        return WindowsGraphics_PointInt32.fromABI(_result)
    }

    public func get_Presenter() throws -> MicrosoftUIWindowing_AppWindowPresenter? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IAppWindowPresenter>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Presenter(this, &_result))
        return MicrosoftUIWindowing_AppWindowPresenterBinding.fromABI(consuming: &_result)
    }

    public func get_Size() throws -> WindowsGraphics_SizeInt32 {
        var _result: SWRT_WindowsGraphics_SizeInt32 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsGraphics_SizeInt32.fromABI(_result)
    }

    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Title(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Title(this, value_abi))
    }

    public func get_TitleBar() throws -> MicrosoftUIWindowing_AppWindowTitleBar? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IAppWindowTitleBar>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TitleBar(this, &_result))
        return MicrosoftUIWindowing_AppWindowTitleBarBinding.fromABI(consuming: &_result)
    }

    public func destroy() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Destroy(this))
    }

    public func hide() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Hide(this))
    }

    public func move(_ position: WindowsGraphics_PointInt32) throws {
        let position_abi = WindowsGraphics_PointInt32.toABI(position)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Move(this, position_abi))
    }

    public func moveAndResize(_ rect: WindowsGraphics_RectInt32) throws {
        let rect_abi = WindowsGraphics_RectInt32.toABI(rect)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveAndResize(this, rect_abi))
    }

    public func moveAndResizeRelativeToDisplayArea(_ rect: WindowsGraphics_RectInt32, _ displayarea: MicrosoftUIWindowing_DisplayArea?) throws {
        let rect_abi = WindowsGraphics_RectInt32.toABI(rect)
        var displayarea_abi = try MicrosoftUIWindowing_DisplayAreaBinding.toABI(displayarea)
        defer { MicrosoftUIWindowing_DisplayAreaBinding.release(&displayarea_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveAndResizeRelativeToDisplayArea(this, rect_abi, displayarea_abi))
    }

    public func resize(_ size: WindowsGraphics_SizeInt32) throws {
        let size_abi = WindowsGraphics_SizeInt32.toABI(size)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Resize(this, size_abi))
    }

    public func setIcon(_ iconPath: Swift.String) throws {
        var iconPath_abi = try WindowsRuntime.StringBinding.toABI(iconPath)
        defer { WindowsRuntime.StringBinding.release(&iconPath_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetIcon(this, iconPath_abi))
    }

    public func setIconWithIconId(_ iconId: MicrosoftUI_IconId) throws {
        let iconId_abi = MicrosoftUI_IconId.toABI(iconId)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetIconWithIconId(this, iconId_abi))
    }

    public func setPresenter(_ appWindowPresenter: MicrosoftUIWindowing_AppWindowPresenter?) throws {
        var appWindowPresenter_abi = try MicrosoftUIWindowing_AppWindowPresenterBinding.toABI(appWindowPresenter)
        defer { MicrosoftUIWindowing_AppWindowPresenterBinding.release(&appWindowPresenter_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetPresenter(this, appWindowPresenter_abi))
    }

    public func setPresenterByKind(_ appWindowPresenterKind: MicrosoftUIWindowing_AppWindowPresenterKind) throws {
        let appWindowPresenterKind_abi = MicrosoftUIWindowing_AppWindowPresenterKind.toABI(appWindowPresenterKind)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetPresenterByKind(this, appWindowPresenterKind_abi))
    }

    public func show() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Show(this))
    }

    public func showWithActivation(_ activateWindow: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ShowWithActivation(this, activateWindow))
    }

    public func add_Changed(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_AppWindow?, MicrosoftUIWindowing_AppWindowChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.AppWindow_AppWindowChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.AppWindow_AppWindowChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Changed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Changed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Changed(this, token_abi))
    }

    public func add_Closing(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_AppWindow?, MicrosoftUIWindowing_AppWindowClosingEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.AppWindow_AppWindowClosingEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.AppWindow_AppWindowClosingEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Closing(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Closing(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Closing(this, token_abi))
    }

    public func add_Destroying(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_AppWindow?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.AppWindow_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.AppWindow_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Destroying(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Destroying(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Destroying(this, token_abi))
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindow2

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindow2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6CD41292, 0x794C, 0x5CAC, 0x8961, 0x210D012C6EBC)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindow2 {
    public func get_ClientSize() throws -> WindowsGraphics_SizeInt32 {
        var _result: SWRT_WindowsGraphics_SizeInt32 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ClientSize(this, &_result))
        return WindowsGraphics_SizeInt32.fromABI(_result)
    }

    public func moveInZOrderAtBottom() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveInZOrderAtBottom(this))
    }

    public func moveInZOrderAtTop() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveInZOrderAtTop(this))
    }

    public func moveInZOrderBelow(_ windowId: MicrosoftUI_WindowId) throws {
        let windowId_abi = MicrosoftUI_WindowId.toABI(windowId)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveInZOrderBelow(this, windowId_abi))
    }

    public func resizeClient(_ size: WindowsGraphics_SizeInt32) throws {
        let size_abi = WindowsGraphics_SizeInt32.toABI(size)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ResizeClient(this, size_abi))
    }

    public func showOnceWithRequestedStartupState() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ShowOnceWithRequestedStartupState(this))
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindow3

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindow3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2F260CEA, 0x193D, 0x5DD6, 0xA904, 0xD7649A608D2F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindow3 {
    public func associateWithDispatcherQueue(_ dispatcherQueue: MicrosoftUIDispatching_DispatcherQueue?) throws {
        var dispatcherQueue_abi = try MicrosoftUIDispatching_DispatcherQueueBinding.toABI(dispatcherQueue)
        defer { MicrosoftUIDispatching_DispatcherQueueBinding.release(&dispatcherQueue_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.AssociateWithDispatcherQueue(this, dispatcherQueue_abi))
    }

    public func get_DispatcherQueue() throws -> MicrosoftUIDispatching_DispatcherQueue? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIDispatching_IDispatcherQueue>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DispatcherQueue(this, &_result))
        return MicrosoftUIDispatching_DispatcherQueueBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowChangedEventArgs

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2182BC5D, 0xFDAC, 0x5C3E, 0xBF37, 0x7D8D684E9D1D)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowChangedEventArgs {
    public func get_DidPositionChange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DidPositionChange(this, &_result))
        return _result
    }

    public func get_DidPresenterChange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DidPresenterChange(this, &_result))
        return _result
    }

    public func get_DidSizeChange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DidSizeChange(this, &_result))
        return _result
    }

    public func get_DidVisibilityChange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DidVisibilityChange(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowChangedEventArgs2

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowChangedEventArgs2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA773AB4C, 0xA5EC, 0x50E8, 0x98AC, 0x247FE6CD4227)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowChangedEventArgs2 {
    public func get_DidZOrderChange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DidZOrderChange(this, &_result))
        return _result
    }

    public func get_IsZOrderAtBottom() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsZOrderAtBottom(this, &_result))
        return _result
    }

    public func get_IsZOrderAtTop() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsZOrderAtTop(this, &_result))
        return _result
    }

    public func get_ZOrderBelowWindowId() throws -> MicrosoftUI_WindowId {
        var _result: SWRT_MicrosoftUI_WindowId = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ZOrderBelowWindowId(this, &_result))
        return MicrosoftUI_WindowId.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowClosingEventArgs

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowClosingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0E09D90B, 0x2261, 0x590B, 0x9AD1, 0x8504991D8754)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowClosingEventArgs {
    public func get_Cancel() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Cancel(this, &_result))
        return _result
    }

    public func put_Cancel(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Cancel(this, value))
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowPresenter

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowPresenter.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBC3042C2, 0xC6C6, 0x5632, 0x8989, 0xFF0EC6D3B40D)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowPresenter {
    public func get_Kind() throws -> MicrosoftUIWindowing_AppWindowPresenterKind {
        var _result: SWRT_MicrosoftUIWindowing_AppWindowPresenterKind = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Kind(this, &_result))
        return MicrosoftUIWindowing_AppWindowPresenterKind.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowPresenterFactory

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowPresenterFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x62082E3C, 0x1368, 0x5238, 0x90D1, 0xE932DC718A82)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowPresenterFactory {
}

// MARK: Microsoft.UI.Windowing.IAppWindowStatics

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3C315C24, 0xD540, 0x5D72, 0xB518, 0xB226B83627CB)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowStatics {
    public func create() throws -> MicrosoftUIWindowing_AppWindow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IAppWindow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Create(this, &_result))
        return MicrosoftUIWindowing_AppWindowBinding.fromABI(consuming: &_result)
    }

    public func createWithPresenter(_ appWindowPresenter: MicrosoftUIWindowing_AppWindowPresenter?) throws -> MicrosoftUIWindowing_AppWindow? {
        var appWindowPresenter_abi = try MicrosoftUIWindowing_AppWindowPresenterBinding.toABI(appWindowPresenter)
        defer { MicrosoftUIWindowing_AppWindowPresenterBinding.release(&appWindowPresenter_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IAppWindow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWithPresenter(this, appWindowPresenter_abi, &_result))
        return MicrosoftUIWindowing_AppWindowBinding.fromABI(consuming: &_result)
    }

    public func createWithPresenterAndOwner(_ appWindowPresenter: MicrosoftUIWindowing_AppWindowPresenter?, _ ownerWindowId: MicrosoftUI_WindowId) throws -> MicrosoftUIWindowing_AppWindow? {
        var appWindowPresenter_abi = try MicrosoftUIWindowing_AppWindowPresenterBinding.toABI(appWindowPresenter)
        defer { MicrosoftUIWindowing_AppWindowPresenterBinding.release(&appWindowPresenter_abi) }
        let ownerWindowId_abi = MicrosoftUI_WindowId.toABI(ownerWindowId)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IAppWindow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWithPresenterAndOwner(this, appWindowPresenter_abi, ownerWindowId_abi, &_result))
        return MicrosoftUIWindowing_AppWindowBinding.fromABI(consuming: &_result)
    }

    public func getFromWindowId(_ windowId: MicrosoftUI_WindowId) throws -> MicrosoftUIWindowing_AppWindow? {
        let windowId_abi = MicrosoftUI_WindowId.toABI(windowId)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IAppWindow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFromWindowId(this, windowId_abi, &_result))
        return MicrosoftUIWindowing_AppWindowBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowStatics2

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowStatics2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCABC23DB, 0x4606, 0x5D6E, 0x89A5, 0x06DE1D8BD3E2)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowStatics2 {
    public func createWithDispatcherQueue(_ appWindowPresenter: MicrosoftUIWindowing_AppWindowPresenter?, _ ownerWindowId: MicrosoftUI_WindowId, _ DispatcherQueue: MicrosoftUIDispatching_DispatcherQueue?) throws -> MicrosoftUIWindowing_AppWindow? {
        var appWindowPresenter_abi = try MicrosoftUIWindowing_AppWindowPresenterBinding.toABI(appWindowPresenter)
        defer { MicrosoftUIWindowing_AppWindowPresenterBinding.release(&appWindowPresenter_abi) }
        let ownerWindowId_abi = MicrosoftUI_WindowId.toABI(ownerWindowId)
        var DispatcherQueue_abi = try MicrosoftUIDispatching_DispatcherQueueBinding.toABI(DispatcherQueue)
        defer { MicrosoftUIDispatching_DispatcherQueueBinding.release(&DispatcherQueue_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IAppWindow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWithDispatcherQueue(this, appWindowPresenter_abi, ownerWindowId_abi, DispatcherQueue_abi, &_result))
        return MicrosoftUIWindowing_AppWindowBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowTitleBar

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowTitleBar.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5574EFA2, 0xC91C, 0x5700, 0xA363, 0x539C71A7AAF4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowTitleBar {
    public func get_BackgroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BackgroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_BackgroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BackgroundColor(this, value_abi))
    }

    public func get_ButtonBackgroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonBackgroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonBackgroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonBackgroundColor(this, value_abi))
    }

    public func get_ButtonForegroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonForegroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonForegroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonForegroundColor(this, value_abi))
    }

    public func get_ButtonHoverBackgroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonHoverBackgroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonHoverBackgroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonHoverBackgroundColor(this, value_abi))
    }

    public func get_ButtonHoverForegroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonHoverForegroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonHoverForegroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonHoverForegroundColor(this, value_abi))
    }

    public func get_ButtonInactiveBackgroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonInactiveBackgroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonInactiveBackgroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonInactiveBackgroundColor(this, value_abi))
    }

    public func get_ButtonInactiveForegroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonInactiveForegroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonInactiveForegroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonInactiveForegroundColor(this, value_abi))
    }

    public func get_ButtonPressedBackgroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonPressedBackgroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonPressedBackgroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonPressedBackgroundColor(this, value_abi))
    }

    public func get_ButtonPressedForegroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ButtonPressedForegroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ButtonPressedForegroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ButtonPressedForegroundColor(this, value_abi))
    }

    public func get_ExtendsContentIntoTitleBar() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ExtendsContentIntoTitleBar(this, &_result))
        return _result
    }

    public func put_ExtendsContentIntoTitleBar(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ExtendsContentIntoTitleBar(this, value))
    }

    public func get_ForegroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ForegroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_ForegroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ForegroundColor(this, value_abi))
    }

    public func get_Height() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Height(this, &_result))
        return _result
    }

    public func get_IconShowOptions() throws -> MicrosoftUIWindowing_IconShowOptions {
        var _result: SWRT_MicrosoftUIWindowing_IconShowOptions = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IconShowOptions(this, &_result))
        return MicrosoftUIWindowing_IconShowOptions.fromABI(_result)
    }

    public func put_IconShowOptions(_ value: MicrosoftUIWindowing_IconShowOptions) throws {
        let value_abi = MicrosoftUIWindowing_IconShowOptions.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IconShowOptions(this, value_abi))
    }

    public func get_InactiveBackgroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InactiveBackgroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_InactiveBackgroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InactiveBackgroundColor(this, value_abi))
    }

    public func get_InactiveForegroundColor() throws -> WindowsUI_Color? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InactiveForegroundColor(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.fromABI(consuming: &_result)
    }

    public func put_InactiveForegroundColor(_ value: WindowsUI_Color?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsUI_Color>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InactiveForegroundColor(this, value_abi))
    }

    public func get_LeftInset() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LeftInset(this, &_result))
        return _result
    }

    public func get_RightInset() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RightInset(this, &_result))
        return _result
    }

    public func resetToDefault() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ResetToDefault(this))
    }

    public func setDragRectangles(_ value: [WindowsGraphics_RectInt32]) throws {
        var value_abi = try WindowsRuntime.ArrayBinding<WindowsGraphics_RectInt32>.toABI(value)
        defer { WindowsRuntime.ArrayBinding<WindowsGraphics_RectInt32>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetDragRectangles(this, value_abi.count, value_abi.pointer))
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowTitleBar2

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowTitleBar2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x86FAED38, 0x748A, 0x5B4B, 0x9CCF, 0x3BA0496C9041)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowTitleBar2 {
    public func get_PreferredHeightOption() throws -> MicrosoftUIWindowing_TitleBarHeightOption {
        var _result: SWRT_MicrosoftUIWindowing_TitleBarHeightOption = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PreferredHeightOption(this, &_result))
        return MicrosoftUIWindowing_TitleBarHeightOption.fromABI(_result)
    }

    public func put_PreferredHeightOption(_ value: MicrosoftUIWindowing_TitleBarHeightOption) throws {
        let value_abi = MicrosoftUIWindowing_TitleBarHeightOption.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_PreferredHeightOption(this, value_abi))
    }
}

// MARK: Microsoft.UI.Windowing.IAppWindowTitleBarStatics

public func uuidof(_: SWRT_MicrosoftUIWindowing_IAppWindowTitleBarStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9E1DA52E, 0x8B15, 0x54D6, 0xA886, 0xF7B9F9D930B2)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IAppWindowTitleBarStatics {
    public func isCustomizationSupported() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsCustomizationSupported(this, &_result))
        return _result
    }
}

// MARK: Microsoft.UI.Windowing.IDisplayArea

public func uuidof(_: SWRT_MicrosoftUIWindowing_IDisplayArea.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5C7E0537, 0xB621, 0x5579, 0xBCAE, 0xA84AA8746167)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IDisplayArea {
    public func get_DisplayId() throws -> MicrosoftUI_DisplayId {
        var _result: SWRT_MicrosoftUI_DisplayId = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayId(this, &_result))
        return MicrosoftUI_DisplayId.fromABI(_result)
    }

    public func get_IsPrimary() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsPrimary(this, &_result))
        return _result
    }

    public func get_OuterBounds() throws -> WindowsGraphics_RectInt32 {
        var _result: SWRT_WindowsGraphics_RectInt32 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterBounds(this, &_result))
        return WindowsGraphics_RectInt32.fromABI(_result)
    }

    public func get_WorkArea() throws -> WindowsGraphics_RectInt32 {
        var _result: SWRT_WindowsGraphics_RectInt32 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_WorkArea(this, &_result))
        return WindowsGraphics_RectInt32.fromABI(_result)
    }
}

// MARK: Microsoft.UI.Windowing.IDisplayAreaStatics

public func uuidof(_: SWRT_MicrosoftUIWindowing_IDisplayAreaStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x02AB4926, 0x211E, 0x5D49, 0x8E4B, 0x2AF193DAED09)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IDisplayAreaStatics {
    public func get_Primary() throws -> MicrosoftUIWindowing_DisplayArea? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Primary(this, &_result))
        return MicrosoftUIWindowing_DisplayAreaBinding.fromABI(consuming: &_result)
    }

    public func createWatcher() throws -> MicrosoftUIWindowing_DisplayAreaWatcher? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayAreaWatcher>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWatcher(this, &_result))
        return MicrosoftUIWindowing_DisplayAreaWatcherBinding.fromABI(consuming: &_result)
    }

    public func findAll() throws -> WindowsFoundationCollections_IVectorView<MicrosoftUIWindowing_DisplayArea?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIWindowing_DisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FindAll(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.DisplayArea.fromABI(consuming: &_result)
    }

    public func getFromWindowId(_ windowId: MicrosoftUI_WindowId, _ displayAreaFallback: MicrosoftUIWindowing_DisplayAreaFallback) throws -> MicrosoftUIWindowing_DisplayArea? {
        let windowId_abi = MicrosoftUI_WindowId.toABI(windowId)
        let displayAreaFallback_abi = MicrosoftUIWindowing_DisplayAreaFallback.toABI(displayAreaFallback)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFromWindowId(this, windowId_abi, displayAreaFallback_abi, &_result))
        return MicrosoftUIWindowing_DisplayAreaBinding.fromABI(consuming: &_result)
    }

    public func getFromPoint(_ point: WindowsGraphics_PointInt32, _ displayAreaFallback: MicrosoftUIWindowing_DisplayAreaFallback) throws -> MicrosoftUIWindowing_DisplayArea? {
        let point_abi = WindowsGraphics_PointInt32.toABI(point)
        let displayAreaFallback_abi = MicrosoftUIWindowing_DisplayAreaFallback.toABI(displayAreaFallback)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFromPoint(this, point_abi, displayAreaFallback_abi, &_result))
        return MicrosoftUIWindowing_DisplayAreaBinding.fromABI(consuming: &_result)
    }

    public func getFromRect(_ rect: WindowsGraphics_RectInt32, _ displayAreaFallback: MicrosoftUIWindowing_DisplayAreaFallback) throws -> MicrosoftUIWindowing_DisplayArea? {
        let rect_abi = WindowsGraphics_RectInt32.toABI(rect)
        let displayAreaFallback_abi = MicrosoftUIWindowing_DisplayAreaFallback.toABI(displayAreaFallback)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFromRect(this, rect_abi, displayAreaFallback_abi, &_result))
        return MicrosoftUIWindowing_DisplayAreaBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Windowing.IDisplayAreaStatics2

public func uuidof(_: SWRT_MicrosoftUIWindowing_IDisplayAreaStatics2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7207AD4B, 0x890D, 0x5DD7, 0xBC18, 0x78FFD9544D8F)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IDisplayAreaStatics2 {
    public func getFromDisplayId(_ displayId: MicrosoftUI_DisplayId) throws -> MicrosoftUIWindowing_DisplayArea? {
        let displayId_abi = MicrosoftUI_DisplayId.toABI(displayId)
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFromDisplayId(this, displayId_abi, &_result))
        return MicrosoftUIWindowing_DisplayAreaBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.UI.Windowing.IDisplayAreaWatcher

public func uuidof(_: SWRT_MicrosoftUIWindowing_IDisplayAreaWatcher.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x83F6562F, 0xD3A0, 0x548B, 0x8E4F, 0xA99BE3D95C9C)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftUIWindowing_IDisplayAreaWatcher {
    public func get_Status() throws -> MicrosoftUIWindowing_DisplayAreaWatcherStatus {
        var _result: SWRT_MicrosoftUIWindowing_DisplayAreaWatcherStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Status(this, &_result))
        return MicrosoftUIWindowing_DisplayAreaWatcherStatus.fromABI(_result)
    }

    public func start() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Start(this))
    }

    public func stop() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Stop(this))
    }

    public func add_Added(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_DisplayAreaWatcher?, MicrosoftUIWindowing_DisplayArea?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_DisplayArea.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_DisplayArea.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Added(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Added(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Added(this, token_abi))
    }

    public func add_EnumerationCompleted(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_DisplayAreaWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_EnumerationCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_EnumerationCompleted(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_EnumerationCompleted(this, token_abi))
    }

    public func add_Removed(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_DisplayAreaWatcher?, MicrosoftUIWindowing_DisplayArea?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_DisplayArea.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_DisplayArea.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Removed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Removed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Removed(this, token_abi))
    }

    public func add_Stopped(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_DisplayAreaWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Stopped(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Stopped(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Stopped(this, token_abi))
    }

    public func add_Updated(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftUIWindowing_DisplayAreaWatcher?, MicrosoftUIWindowing_DisplayArea?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_DisplayArea.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DisplayAreaWatcher_DisplayArea.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Updated(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Updated(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Updated(this, token_abi))
    }
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceCandidate

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6C54BC0C, 0xEF1E, 0x57B8, 0xB478, 0x34FECE737356)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate {
    public func get_ValueAsString() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ValueAsString(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_ValueAsBytes() throws -> [Swift.UInt8] {
        var _result: COM.COMArray<Swift.UInt8> = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ValueAsBytes(this, &_result.count, &_result.pointer))
        return WindowsRuntime.ArrayBinding<WindowsRuntime.UInt8Binding>.fromABI(consuming: &_result)
    }

    public func get_Kind() throws -> MicrosoftWindowsApplicationModelResources_ResourceCandidateKind {
        var _result: SWRT_MicrosoftWindowsApplicationModelResources_ResourceCandidateKind = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Kind(this, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceCandidateKind.fromABI(_result)
    }

    public func get_QualifierValues() throws -> WindowsFoundationCollections_IMapView<Swift.String, Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_QualifierValues(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_String.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactory

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidateFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBB2B30F8, 0xC19B, 0x5F43, 0x88D9, 0x69AD728A32F4)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidateFactory {
    public func createInstance(_ kind: MicrosoftWindowsApplicationModelResources_ResourceCandidateKind, _ data: Swift.String) throws -> COM.COMReference<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate> {
        let kind_abi = MicrosoftWindowsApplicationModelResources_ResourceCandidateKind.toABI(kind)
        var data_abi = try WindowsRuntime.StringBinding.toABI(data)
        defer { WindowsRuntime.StringBinding.release(&data_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateInstance(this, kind_abi, data_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }

    public func createInstance2(_ data: [Swift.UInt8]) throws -> COM.COMReference<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate> {
        var data_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.UInt8Binding>.toABI(data)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt8Binding>.release(&data_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateInstance2(this, data_abi.count, data_abi.pointer, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceContext

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceContext.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x96FB48DC, 0xF77D, 0x55FF, 0xAF12, 0x34861E3D4939)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceContext {
    public func get_QualifierValues() throws -> WindowsFoundationCollections_IMap<Swift.String, Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMap_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_QualifierValues(this, &_result))
        return WindowsFoundationCollections_IMapBinding.String_String.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceContext2

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceContext2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7A3B1158, 0x798C, 0x5949, 0x969D, 0x03510B9CE6CA)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceContext2 {
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceManager

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceManager.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAC2291EF, 0x81BE, 0x5C99, 0xA0AE, 0xBCEE0180B8A8)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceManager {
    public func get_MainResourceMap() throws -> MicrosoftWindowsApplicationModelResources_ResourceMap? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceMap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MainResourceMap(this, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceMapBinding.fromABI(consuming: &_result)
    }

    public func createResourceContext() throws -> MicrosoftWindowsApplicationModelResources_ResourceContext? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceContext>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateResourceContext(this, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceContextBinding.fromABI(consuming: &_result)
    }

    public func add_ResourceNotFound(_ handler: WindowsFoundation_TypedEventHandler<MicrosoftWindowsApplicationModelResources_ResourceManager?, MicrosoftWindowsApplicationModelResources_ResourceNotFoundEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.ResourceManager_ResourceNotFoundEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.ResourceManager_ResourceNotFoundEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ResourceNotFound(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ResourceNotFound(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ResourceNotFound(this, token_abi))
    }
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceManager2

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceManager2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7EC10160, 0xA154, 0x5C42, 0x8268, 0x30E306B1F585)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceManager2 {
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactory

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceManagerFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD6ACF18F, 0x458A, 0x535B, 0xA5C4, 0xAC2DC4E49099)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceManagerFactory {
    public func createInstance(_ fileName: Swift.String) throws -> COM.COMReference<SWRT_MicrosoftWindowsApplicationModelResources_IResourceManager> {
        var fileName_abi = try WindowsRuntime.StringBinding.toABI(fileName)
        defer { WindowsRuntime.StringBinding.release(&fileName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceManager>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateInstance(this, fileName_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceMap

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceMap.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4ABBD9BC, 0xDF4E, 0x5C7B, 0x812C, 0x7E7BB0C22377)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceMap {
    public func get_ResourceCount() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ResourceCount(this, &_result))
        return _result
    }

    public func getSubtree(_ reference: Swift.String) throws -> MicrosoftWindowsApplicationModelResources_ResourceMap? {
        var reference_abi = try WindowsRuntime.StringBinding.toABI(reference)
        defer { WindowsRuntime.StringBinding.release(&reference_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceMap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSubtree(this, reference_abi, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceMapBinding.fromABI(consuming: &_result)
    }

    public func tryGetSubtree(_ reference: Swift.String) throws -> MicrosoftWindowsApplicationModelResources_ResourceMap? {
        var reference_abi = try WindowsRuntime.StringBinding.toABI(reference)
        defer { WindowsRuntime.StringBinding.release(&reference_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceMap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetSubtree(this, reference_abi, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceMapBinding.fromABI(consuming: &_result)
    }

    public func getValue(_ resource: Swift.String) throws -> MicrosoftWindowsApplicationModelResources_ResourceCandidate? {
        var resource_abi = try WindowsRuntime.StringBinding.toABI(resource)
        defer { WindowsRuntime.StringBinding.release(&resource_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetValue(this, resource_abi, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding.fromABI(consuming: &_result)
    }

    public func getValueWithContext(_ resource: Swift.String, _ context: MicrosoftWindowsApplicationModelResources_ResourceContext?) throws -> MicrosoftWindowsApplicationModelResources_ResourceCandidate? {
        var resource_abi = try WindowsRuntime.StringBinding.toABI(resource)
        defer { WindowsRuntime.StringBinding.release(&resource_abi) }
        var context_abi = try MicrosoftWindowsApplicationModelResources_ResourceContextBinding.toABI(context)
        defer { MicrosoftWindowsApplicationModelResources_ResourceContextBinding.release(&context_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetValueWithContext(this, resource_abi, context_abi, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding.fromABI(consuming: &_result)
    }

    public func getValueByIndex(_ index: Swift.UInt32) throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, MicrosoftWindowsApplicationModelResources_ResourceCandidate?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftWindowsApplicationModelResources_ResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetValueByIndex(this, index, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_ResourceCandidate.fromABI(consuming: &_result)
    }

    public func getValueByIndexWithContext(_ index: Swift.UInt32, _ context: MicrosoftWindowsApplicationModelResources_ResourceContext?) throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, MicrosoftWindowsApplicationModelResources_ResourceCandidate?>? {
        var context_abi = try MicrosoftWindowsApplicationModelResources_ResourceContextBinding.toABI(context)
        defer { MicrosoftWindowsApplicationModelResources_ResourceContextBinding.release(&context_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftWindowsApplicationModelResources_ResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetValueByIndexWithContext(this, index, context_abi, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_ResourceCandidate.fromABI(consuming: &_result)
    }

    public func tryGetValue(_ resource: Swift.String) throws -> MicrosoftWindowsApplicationModelResources_ResourceCandidate? {
        var resource_abi = try WindowsRuntime.StringBinding.toABI(resource)
        defer { WindowsRuntime.StringBinding.release(&resource_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetValue(this, resource_abi, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding.fromABI(consuming: &_result)
    }

    public func tryGetValueWithContext(_ resource: Swift.String, _ context: MicrosoftWindowsApplicationModelResources_ResourceContext?) throws -> MicrosoftWindowsApplicationModelResources_ResourceCandidate? {
        var resource_abi = try WindowsRuntime.StringBinding.toABI(resource)
        defer { WindowsRuntime.StringBinding.release(&resource_abi) }
        var context_abi = try MicrosoftWindowsApplicationModelResources_ResourceContextBinding.toABI(context)
        defer { MicrosoftWindowsApplicationModelResources_ResourceContextBinding.release(&context_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetValueWithContext(this, resource_abi, context_abi, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding.fromABI(consuming: &_result)
    }
}

// MARK: Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgs

public func uuidof(_: SWRT_MicrosoftWindowsApplicationModelResources_IResourceNotFoundEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x64ABB08B, 0xE77D, 0x5B26, 0x830F, 0x15941E0E8200)
}

extension COM.COMInterop where ABIStruct == SWRT_MicrosoftWindowsApplicationModelResources_IResourceNotFoundEventArgs {
    public func get_Context() throws -> MicrosoftWindowsApplicationModelResources_ResourceContext? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceContext>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Context(this, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceContextBinding.fromABI(consuming: &_result)
    }

    public func get_Name() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Name(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func setResolvedCandidate(_ candidate: MicrosoftWindowsApplicationModelResources_ResourceCandidate?) throws {
        var candidate_abi = try MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding.toABI(candidate)
        defer { MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding.release(&candidate_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetResolvedCandidate(this, candidate_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Object, Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_IInspectable_MicrosoftUIComposition_CompositionBatchCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDE522E05, 0x2E72, 0x52EE, 0xBD1F, 0xAC25A0708003)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_IInspectable_MicrosoftUIComposition_CompositionBatchCompletedEventArgs {
    internal func invoke(_ sender: WindowsRuntime.IInspectable?, _ args: MicrosoftUIComposition_CompositionBatchCompletedEventArgs?) throws {
        var sender_abi = try WindowsRuntime.IInspectableBinding.toABI(sender)
        defer { WindowsRuntime.IInspectableBinding.release(&sender_abi) }
        var args_abi = try MicrosoftUIComposition_CompositionBatchCompletedEventArgsBinding.toABI(args)
        defer { MicrosoftUIComposition_CompositionBatchCompletedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Windowing.AppWindow, Microsoft.UI.Windowing.AppWindowClosingEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_AppWindow_MicrosoftUIWindowing_AppWindowClosingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFD0E72C8, 0x8DAA, 0x50A2, 0x959F, 0x4D41446F1FC7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_AppWindow_MicrosoftUIWindowing_AppWindowClosingEventArgs {
    internal func invoke(_ sender: MicrosoftUIWindowing_AppWindow?, _ args: MicrosoftUIWindowing_AppWindowClosingEventArgs?) throws {
        var sender_abi = try MicrosoftUIWindowing_AppWindowBinding.toABI(sender)
        defer { MicrosoftUIWindowing_AppWindowBinding.release(&sender_abi) }
        var args_abi = try MicrosoftUIWindowing_AppWindowClosingEventArgsBinding.toABI(args)
        defer { MicrosoftUIWindowing_AppWindowClosingEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Dispatching.DispatcherQueue, Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIDispatching_DispatcherQueue_MicrosoftUIDispatching_DispatcherQueueShutdownStartingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xECD63A61, 0x4DBF, 0x57BC, 0x880C, 0xA255DFE352C3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIDispatching_DispatcherQueue_MicrosoftUIDispatching_DispatcherQueueShutdownStartingEventArgs {
    internal func invoke(_ sender: MicrosoftUIDispatching_DispatcherQueue?, _ args: MicrosoftUIDispatching_DispatcherQueueShutdownStartingEventArgs?) throws {
        var sender_abi = try MicrosoftUIDispatching_DispatcherQueueBinding.toABI(sender)
        defer { MicrosoftUIDispatching_DispatcherQueueBinding.release(&sender_abi) }
        var args_abi = try MicrosoftUIDispatching_DispatcherQueueShutdownStartingEventArgsBinding.toABI(args)
        defer { MicrosoftUIDispatching_DispatcherQueueShutdownStartingEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment, Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIContent_ContentIslandEnvironment_MicrosoftUIContent_ContentEnvironmentSettingChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1AD20C79, 0x1495, 0x5501, 0xAC8A, 0xA38845E8F218)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIContent_ContentIslandEnvironment_MicrosoftUIContent_ContentEnvironmentSettingChangedEventArgs {
    internal func invoke(_ sender: MicrosoftUIContent_ContentIslandEnvironment?, _ args: MicrosoftUIContent_ContentEnvironmentSettingChangedEventArgs?) throws {
        var sender_abi = try MicrosoftUIContent_ContentIslandEnvironmentBinding.toABI(sender)
        defer { MicrosoftUIContent_ContentIslandEnvironmentBinding.release(&sender_abi) }
        var args_abi = try MicrosoftUIContent_ContentEnvironmentSettingChangedEventArgsBinding.toABI(args)
        defer { MicrosoftUIContent_ContentEnvironmentSettingChangedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Windowing.DisplayAreaWatcher, Microsoft.UI.Windowing.DisplayArea>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_DisplayAreaWatcher_MicrosoftUIWindowing_DisplayArea.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1AB60859, 0xCAAF, 0x5B34, 0xBAB0, 0x3D9035EB80CB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_DisplayAreaWatcher_MicrosoftUIWindowing_DisplayArea {
    internal func invoke(_ sender: MicrosoftUIWindowing_DisplayAreaWatcher?, _ args: MicrosoftUIWindowing_DisplayArea?) throws {
        var sender_abi = try MicrosoftUIWindowing_DisplayAreaWatcherBinding.toABI(sender)
        defer { MicrosoftUIWindowing_DisplayAreaWatcherBinding.release(&sender_abi) }
        var args_abi = try MicrosoftUIWindowing_DisplayAreaBinding.toABI(args)
        defer { MicrosoftUIWindowing_DisplayAreaBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Dispatching.DispatcherQueueTimer, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIDispatching_DispatcherQueueTimer_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2182A2AC, 0x7545, 0x566A, 0x984F, 0xB10F07BAB089)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIDispatching_DispatcherQueueTimer_IInspectable {
    internal func invoke(_ sender: MicrosoftUIDispatching_DispatcherQueueTimer?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try MicrosoftUIDispatching_DispatcherQueueTimerBinding.toABI(sender)
        defer { MicrosoftUIDispatching_DispatcherQueueTimerBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Windowing.AppWindow, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_AppWindow_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEDDD665F, 0x7D53, 0x5B2D, 0x901D, 0x9C12010816E7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_AppWindow_IInspectable {
    internal func invoke(_ sender: MicrosoftUIWindowing_AppWindow?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try MicrosoftUIWindowing_AppWindowBinding.toABI(sender)
        defer { MicrosoftUIWindowing_AppWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Windowing.AppWindow, Microsoft.UI.Windowing.AppWindowChangedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_AppWindow_MicrosoftUIWindowing_AppWindowChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCDA07756, 0x1584, 0x5049, 0x9AD1, 0xCCA782242D34)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_AppWindow_MicrosoftUIWindowing_AppWindowChangedEventArgs {
    internal func invoke(_ sender: MicrosoftUIWindowing_AppWindow?, _ args: MicrosoftUIWindowing_AppWindowChangedEventArgs?) throws {
        var sender_abi = try MicrosoftUIWindowing_AppWindowBinding.toABI(sender)
        defer { MicrosoftUIWindowing_AppWindowBinding.release(&sender_abi) }
        var args_abi = try MicrosoftUIWindowing_AppWindowChangedEventArgsBinding.toABI(args)
        defer { MicrosoftUIWindowing_AppWindowChangedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Dispatching.DispatcherQueue, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIDispatching_DispatcherQueue_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3BDAF5DD, 0x3DA4, 0x5B44, 0xADB3, 0x6990540AFAC6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIDispatching_DispatcherQueue_IInspectable {
    internal func invoke(_ sender: MicrosoftUIDispatching_DispatcherQueue?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try MicrosoftUIDispatching_DispatcherQueueBinding.toABI(sender)
        defer { MicrosoftUIDispatching_DispatcherQueueBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment, Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIContent_ContentIslandEnvironment_MicrosoftUIContent_ContentEnvironmentStateChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC7742341, 0xCFD5, 0x5EF6, 0xAB2A, 0xD38C65B780B5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIContent_ContentIslandEnvironment_MicrosoftUIContent_ContentEnvironmentStateChangedEventArgs {
    internal func invoke(_ sender: MicrosoftUIContent_ContentIslandEnvironment?, _ args: MicrosoftUIContent_ContentEnvironmentStateChangedEventArgs?) throws {
        var sender_abi = try MicrosoftUIContent_ContentIslandEnvironmentBinding.toABI(sender)
        defer { MicrosoftUIContent_ContentIslandEnvironmentBinding.release(&sender_abi) }
        var args_abi = try MicrosoftUIContent_ContentEnvironmentStateChangedEventArgsBinding.toABI(args)
        defer { MicrosoftUIContent_ContentEnvironmentStateChangedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.UI.Windowing.DisplayAreaWatcher, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_DisplayAreaWatcher_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2DDB3359, 0x9837, 0x5BA8, 0x803E, 0xEB5AB1CCB67F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftUIWindowing_DisplayAreaWatcher_IInspectable {
    internal func invoke(_ sender: MicrosoftUIWindowing_DisplayAreaWatcher?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try MicrosoftUIWindowing_DisplayAreaWatcherBinding.toABI(sender)
        defer { MicrosoftUIWindowing_DisplayAreaWatcherBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Microsoft.Windows.ApplicationModel.Resources.ResourceManager, Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_MicrosoftWindowsApplicationModelResources_ResourceManager_MicrosoftWindowsApplicationModelResources_ResourceNotFoundEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x30BB9803, 0x2B8A, 0x58E0, 0x8812, 0x93967822D6D0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_MicrosoftWindowsApplicationModelResources_ResourceManager_MicrosoftWindowsApplicationModelResources_ResourceNotFoundEventArgs {
    internal func invoke(_ sender: MicrosoftWindowsApplicationModelResources_ResourceManager?, _ args: MicrosoftWindowsApplicationModelResources_ResourceNotFoundEventArgs?) throws {
        var sender_abi = try MicrosoftWindowsApplicationModelResources_ResourceManagerBinding.toABI(sender)
        defer { MicrosoftWindowsApplicationModelResources_ResourceManagerBinding.release(&sender_abi) }
        var args_abi = try MicrosoftWindowsApplicationModelResources_ResourceNotFoundEventArgsBinding.toABI(args)
        defer { MicrosoftWindowsApplicationModelResources_ResourceNotFoundEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.Collections.IMap<String, Microsoft.UI.Composition.ICompositionAnimationBase>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMap_String_MicrosoftUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6A91806A, 0x8668, 0x5938, 0x93F9, 0x759D0021AB9B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMap_String_MicrosoftUIComposition_ICompositionAnimationBase {
    internal func lookup(_ key: Swift.String) throws -> MicrosoftUIComposition_ICompositionAnimationBase? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return MicrosoftUIComposition_ICompositionAnimationBaseBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, MicrosoftUIComposition_ICompositionAnimationBase?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.fromABI(consuming: &_result)
    }

    internal func insert(_ key: Swift.String, _ value: MicrosoftUIComposition_ICompositionAnimationBase?) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var value_abi = try MicrosoftUIComposition_ICompositionAnimationBaseBinding.toABI(value)
        defer { MicrosoftUIComposition_ICompositionAnimationBaseBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Insert(this, key_abi, value_abi, &_result))
        return _result
    }

    internal func remove(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, key_abi))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }
}

// MARK: Windows.Foundation.Collections.IMap<String, String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMap_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF6D1F700, 0x49C2, 0x52AE, 0x8154, 0x826F9908773C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMap_String_String {
    internal func lookup(_ key: Swift.String) throws -> Swift.String {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_String.fromABI(consuming: &_result)
    }

    internal func insert(_ key: Swift.String, _ value: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Insert(this, key_abi, value_abi, &_result))
        return _result
    }

    internal func remove(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, key_abi))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }
}

// MARK: Windows.Foundation.Collections.IVector<Microsoft.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_MicrosoftUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x77FA9267, 0xB867, 0x5F77, 0x8C02, 0x7D85819D563B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_MicrosoftUIComposition_CompositionColorGradientStop {
    internal func getAt(_ index: Swift.UInt32) throws -> MicrosoftUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return MicrosoftUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<MicrosoftUIComposition_CompositionColorGradientStop?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIComposition_CompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.CompositionColorGradientStop.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: MicrosoftUIComposition_CompositionColorGradientStop?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try MicrosoftUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: MicrosoftUIComposition_CompositionColorGradientStop?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value_abi))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: MicrosoftUIComposition_CompositionColorGradientStop?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value_abi))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: MicrosoftUIComposition_CompositionColorGradientStop?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value_abi))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [MicrosoftUIComposition_CompositionColorGradientStop?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [MicrosoftUIComposition_CompositionColorGradientStop?]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IVector<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x61CF693F, 0xDB4C, 0x579F, 0xB905, 0x5DD3D23CFD4D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_Float {
    internal func getAt(_ index: Swift.UInt32) throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return _result
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<Swift.Float>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_Float>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.Single.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: Swift.Float, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.Float]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [Swift.Float]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IVector<Microsoft.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_MicrosoftUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7397EF7A, 0xAABD, 0x50A3, 0x9308, 0x06D2A7050621)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_MicrosoftUIComposition_CompositionShape {
    internal func getAt(_ index: Swift.UInt32) throws -> MicrosoftUIComposition_CompositionShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return MicrosoftUIComposition_CompositionShapeBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<MicrosoftUIComposition_CompositionShape?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.CompositionShape.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: MicrosoftUIComposition_CompositionShape?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try MicrosoftUIComposition_CompositionShapeBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionShapeBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: MicrosoftUIComposition_CompositionShape?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionShapeBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionShapeBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value_abi))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: MicrosoftUIComposition_CompositionShape?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionShapeBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionShapeBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value_abi))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: MicrosoftUIComposition_CompositionShape?) throws {
        var value_abi = try MicrosoftUIComposition_CompositionShapeBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionShapeBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value_abi))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [MicrosoftUIComposition_CompositionShape?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [MicrosoftUIComposition_CompositionShape?]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IMapView<String, Microsoft.UI.Composition.ICompositionAnimationBase>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapView_String_MicrosoftUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60D8D804, 0xD025, 0x5B6E, 0x800C, 0xB038CDEDBAB4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapView_String_MicrosoftUIComposition_ICompositionAnimationBase {
    internal func lookup(_ key: Swift.String) throws -> MicrosoftUIComposition_ICompositionAnimationBase? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return MicrosoftUIComposition_ICompositionAnimationBaseBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, MicrosoftUIComposition_ICompositionAnimationBase?>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, MicrosoftUIComposition_ICompositionAnimationBase?>?) throws {
        var first_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.release(&first_abi) }
        var second_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.release(&second_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Split(this, &first_abi, &second_abi))
        first = WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.fromABI(consuming: &first_abi)
        second = WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.fromABI(consuming: &second_abi)
    }
}

// MARK: Windows.Foundation.Collections.IMapView<String, String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapView_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAC7F26F2, 0xFEB7, 0x5B2A, 0x8AC4, 0x345BC62CAEDE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapView_String_String {
    internal func lookup(_ key: Swift.String) throws -> Swift.String {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, Swift.String>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, Swift.String>?) throws {
        var first_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_String>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_String.release(&first_abi) }
        var second_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_String>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_String.release(&second_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Split(this, &first_abi, &second_abi))
        first = WindowsFoundationCollections_IMapViewBinding.String_String.fromABI(consuming: &first_abi)
        second = WindowsFoundationCollections_IMapViewBinding.String_String.fromABI(consuming: &second_abi)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionProjectedShadowReceiver>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionProjectedShadowReceiver.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x89FADB12, 0xCE6B, 0x5056, 0xB34B, 0x42CF6463A87B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionProjectedShadowReceiver {
    internal func first() throws -> WindowsFoundationCollections_IIterator<MicrosoftUIComposition_CompositionProjectedShadowReceiver?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionProjectedShadowReceiver>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionProjectedShadowReceiver.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC9E6839B, 0x5066, 0x5658, 0xAFC8, 0x57D50F1BDE3F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionShape {
    internal func first() throws -> WindowsFoundationCollections_IIterator<MicrosoftUIComposition_CompositionShape?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionShape.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionAnimation>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1DEF86CE, 0x4BE1, 0x5CCC, 0xBA28, 0x05D746D9BB8D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionAnimation {
    internal func first() throws -> WindowsFoundationCollections_IIterator<MicrosoftUIComposition_CompositionAnimation?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionAnimation.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Visual>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_Visual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1D4A1B0E, 0xA493, 0x58B9, 0x80F4, 0x200CD04400F9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_Visual {
    internal func first() throws -> WindowsFoundationCollections_IIterator<MicrosoftUIComposition_Visual?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_Visual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.Visual.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Microsoft.UI.Windowing.DisplayArea>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIWindowing_DisplayArea.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFB253085, 0x6CFC, 0x5FA6, 0x948E, 0x97383F5BE36C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIWindowing_DisplayArea {
    internal func first() throws -> WindowsFoundationCollections_IIterator<MicrosoftUIWindowing_DisplayArea?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIWindowing_DisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.DisplayArea.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0A1F6FF8, 0x2211, 0x5F18, 0xB959, 0x2BC40431FD37)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionColorGradientStop {
    internal func first() throws -> WindowsFoundationCollections_IIterator<MicrosoftUIComposition_CompositionColorGradientStop?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionColorGradientStop.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionProjectedShadowCaster>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionProjectedShadowCaster.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7CC33343, 0x15E6, 0x5A20, 0xACBD, 0xA2AF4CB216A3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_MicrosoftUIComposition_CompositionProjectedShadowCaster {
    internal func first() throws -> WindowsFoundationCollections_IIterator<MicrosoftUIComposition_CompositionProjectedShadowCaster?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionProjectedShadowCaster>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionProjectedShadowCaster.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, String>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE9BDAAF0, 0xCBF6, 0x5C72, 0xBE90, 0x29CBF3A1319B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_String {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IKeyValuePair_String_String.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB01BEE51, 0x063A, 0x5FDA, 0xBD72, 0xD76637BB8CB8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_Float {
    internal func first() throws -> WindowsFoundationCollections_IIterator<Swift.Float>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_Float>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.Single.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Microsoft.UI.Composition.ICompositionAnimationBase>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x999D6F68, 0xB74E, 0x5E06, 0xA798, 0xD254C4895670)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, MicrosoftUIComposition_ICompositionAnimationBase?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IKeyValuePair_String_ICompositionAnimationBase.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE2FCC7C1, 0x3BFC, 0x5A0B, 0xB2B0, 0x72E769D1CB7E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_String {
    internal func first() throws -> WindowsFoundationCollections_IIterator<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.String.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterator<String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8C304EBB, 0x6615, 0x50A4, 0x8829, 0x879ECD443236)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_String {
    internal func get_Current() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [Swift.String]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionAnimation>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3094FCBE, 0x7D8F, 0x5BB0, 0xBF52, 0x085BCEE76496)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionAnimation {
    internal func get_Current() throws -> MicrosoftUIComposition_CompositionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return MicrosoftUIComposition_CompositionAnimationBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [MicrosoftUIComposition_CompositionAnimation?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionAnimationBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionAnimationBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.Visual>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_Visual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x44B22F94, 0x798F, 0x5841, 0xBB05, 0x0D1AAA22F668)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_Visual {
    internal func get_Current() throws -> MicrosoftUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return MicrosoftUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [MicrosoftUIComposition_Visual?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_VisualBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_VisualBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5865F61C, 0x2BCA, 0x5F80, 0x968A, 0x8E06BDC28CB0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionColorGradientStop {
    internal func get_Current() throws -> MicrosoftUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return MicrosoftUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [MicrosoftUIComposition_CompositionColorGradientStop?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Microsoft.UI.Windowing.DisplayArea>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIWindowing_DisplayArea.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3D833884, 0x2258, 0x5C48, 0x8D45, 0x3642FE8C6755)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIWindowing_DisplayArea {
    internal func get_Current() throws -> MicrosoftUIWindowing_DisplayArea? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return MicrosoftUIWindowing_DisplayAreaBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [MicrosoftUIWindowing_DisplayArea?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIWindowing_DisplayAreaBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIWindowing_DisplayAreaBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionProjectedShadowCaster>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionProjectedShadowCaster.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1AC58905, 0x0D81, 0x581D, 0xB718, 0x801297568EC1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionProjectedShadowCaster {
    internal func get_Current() throws -> MicrosoftUIComposition_CompositionProjectedShadowCaster? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionProjectedShadowCaster>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return MicrosoftUIComposition_CompositionProjectedShadowCasterBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [MicrosoftUIComposition_CompositionProjectedShadowCaster?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionProjectedShadowCasterBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionProjectedShadowCasterBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4EC94E18, 0xF15C, 0x5432, 0x9BB3, 0x77BDCD96DC04)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionShape {
    internal func get_Current() throws -> MicrosoftUIComposition_CompositionShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return MicrosoftUIComposition_CompositionShapeBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [MicrosoftUIComposition_CompositionShape?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, Microsoft.UI.Composition.ICompositionAnimationBase>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD7585C8C, 0x8AC4, 0x575F, 0x8A96, 0x0DE9C3159EA9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase {
    internal func get_Current() throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, MicrosoftUIComposition_ICompositionAnimationBase?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_ICompositionAnimationBase.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundationCollections_IKeyValuePair<Swift.String, MicrosoftUIComposition_ICompositionAnimationBase?>?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_ICompositionAnimationBase>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_ICompositionAnimationBase>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, String>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x05EB86F1, 0x7140, 0x5517, 0xB88D, 0xCBAEBE57E6B1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_String {
    internal func get_Current() throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_String.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_String>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_String>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionProjectedShadowReceiver>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionProjectedShadowReceiver.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD0A7E89F, 0xA01E, 0x5C64, 0xBF5E, 0x37D03EAEA320)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_MicrosoftUIComposition_CompositionProjectedShadowReceiver {
    internal func get_Current() throws -> MicrosoftUIComposition_CompositionProjectedShadowReceiver? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionProjectedShadowReceiver>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [MicrosoftUIComposition_CompositionProjectedShadowReceiver?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionProjectedShadowReceiverBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x42614E61, 0xB0AA, 0x5E72, 0x9354, 0x2771DB20B7A8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_Float {
    internal func get_Current() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return _result
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [Swift.Float]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, Microsoft.UI.Composition.ICompositionAnimationBase>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE1EA9D61, 0x0E9E, 0x5375, 0xAC74, 0x502E67F9EDE1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftUIComposition_ICompositionAnimationBase {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> MicrosoftUIComposition_ICompositionAnimationBase? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return MicrosoftUIComposition_ICompositionAnimationBaseBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60310303, 0x49C5, 0x52E6, 0xABC6, 0xA9B36ECCC716)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_String {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftWindowsApplicationModelResources_ResourceCandidate.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6A46DE21, 0x86A6, 0x536A, 0x937B, 0x1EDFA3E16474)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_MicrosoftWindowsApplicationModelResources_ResourceCandidate {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> MicrosoftWindowsApplicationModelResources_ResourceCandidate? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Microsoft.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7C3D1B0A, 0x2533, 0x568B, 0x963C, 0x7FDB5769DBE8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIComposition_CompositionShape {
    internal func getAt(_ index: Swift.UInt32) throws -> MicrosoftUIComposition_CompositionShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return MicrosoftUIComposition_CompositionShapeBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: MicrosoftUIComposition_CompositionShape?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try MicrosoftUIComposition_CompositionShapeBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionShapeBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [MicrosoftUIComposition_CompositionShape?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionShapeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Microsoft.UI.Windowing.DisplayArea>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIWindowing_DisplayArea.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x63490E13, 0xD075, 0x5FE2, 0xB6A4, 0x86A44095215F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIWindowing_DisplayArea {
    internal func getAt(_ index: Swift.UInt32) throws -> MicrosoftUIWindowing_DisplayArea? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIWindowing_IDisplayArea>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return MicrosoftUIWindowing_DisplayAreaBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: MicrosoftUIWindowing_DisplayArea?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try MicrosoftUIWindowing_DisplayAreaBinding.toABI(value)
        defer { MicrosoftUIWindowing_DisplayAreaBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [MicrosoftUIWindowing_DisplayArea?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIWindowing_DisplayAreaBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIWindowing_DisplayAreaBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Microsoft.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB3F66D8C, 0x130E, 0x52D4, 0x803E, 0x5305519D5056)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_MicrosoftUIComposition_CompositionColorGradientStop {
    internal func getAt(_ index: Swift.UInt32) throws -> MicrosoftUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_MicrosoftUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return MicrosoftUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: MicrosoftUIComposition_CompositionColorGradientStop?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try MicrosoftUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { MicrosoftUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [MicrosoftUIComposition_CompositionColorGradientStop?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<MicrosoftUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7BCA64FD, 0x150C, 0x5D50, 0xB56B, 0x9F4F474C5930)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_Float {
    internal func getAt(_ index: Swift.UInt32) throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return _result
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: Swift.Float, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.Float]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}