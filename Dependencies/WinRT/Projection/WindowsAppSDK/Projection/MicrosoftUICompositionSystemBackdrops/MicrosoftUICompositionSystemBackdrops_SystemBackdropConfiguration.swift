// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WindowsAppSDK_ABI
import UWP


/// Represents the system policies applied to a system backdrop target.
public final class MicrosoftUICompositionSystemBackdrops_SystemBackdropConfiguration: WindowsRuntime.WinRTImport<MicrosoftUICompositionSystemBackdrops_SystemBackdropConfigurationBinding>, @unchecked Sendable {
    /// Initializes a new instance of the SystemBackdropConfiguration class.
    public init() throws {
        let _instance = COM.COMReference(transferringRef: try Self._iactivationFactory.activateInstance(binding: MicrosoftUICompositionSystemBackdrops_SystemBackdropConfigurationBinding.self))
        super.init(_wrapping: consume _instance)
    }

    /// The background color used when system or application high-contrast theme is applied.
    public var highContrastBackgroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_HighContrastBackgroundColor()
        }
    }

    /// Sets the background color used when system or application high-contrast theme is applied.
    /// - Parameter newValue: The background color used when system or application high-contrast theme is applied.
    public func highContrastBackgroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_HighContrastBackgroundColor(value)
    }

    /// Gets or sets the background color used when system or application high-contrast theme is applied.
    public var highContrastBackgroundColor_: WindowsUI_Color? {
        get {
            try! self.highContrastBackgroundColor
        }
        set {
            try! self.highContrastBackgroundColor(newValue)
        }
    }

    /// true if the system or application high-contrast theme should be applied; otherwise, false.
    public var isHighContrast: Swift.Bool {
        get throws {
            try _interop.get_IsHighContrast()
        }
    }

    /// Sets a value that indicates whether the system or application high-contrast theme should be applied.
    /// - Parameter newValue: true if the system or application high-contrast theme should be applied; otherwise, false.
    public func isHighContrast(_ value: Swift.Bool) throws {
        try _interop.put_IsHighContrast(value)
    }

    /// Gets or sets a value that indicates whether the system or application high-contrast theme should be applied.
    public var isHighContrast_: Swift.Bool {
        get {
            try! self.isHighContrast
        }
        set {
            try! self.isHighContrast(newValue)
        }
    }

    /// true if the system backdrop should consider the current window as having input focus; otherwise, false.
    public var isInputActive: Swift.Bool {
        get throws {
            try _interop.get_IsInputActive()
        }
    }

    /// Sets a value that indicates whether the system backdrop should consider the current window as having input focus.
    /// - Parameter newValue: true if the system backdrop should consider the current window as having input focus; otherwise, false.
    public func isInputActive(_ value: Swift.Bool) throws {
        try _interop.put_IsInputActive(value)
    }

    /// Gets or sets a value that indicates whether the system backdrop should consider the current window as having input focus.
    public var isInputActive_: Swift.Bool {
        get {
            try! self.isInputActive
        }
        set {
            try! self.isInputActive(newValue)
        }
    }

    /// A value of the enumeration that indicates which theme should be applied to the system backdrop.
    public var theme: MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme {
        get throws {
            try _interop.get_Theme()
        }
    }

    /// Sets the theme that should be applied to the system backdrop that is controlled by this configuration object.
    /// - Parameter newValue: A value of the enumeration that indicates which theme should be applied to the system backdrop.
    public func theme(_ value: MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme) throws {
        try _interop.put_Theme(value)
    }

    /// Gets or sets the theme that should be applied to the system backdrop that is controlled by this configuration object.
    public var theme_: MicrosoftUICompositionSystemBackdrops_SystemBackdropTheme {
        get {
            try! self.theme
        }
        set {
            try! self.theme(newValue)
        }
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUICompositionSystemBackdrops_ISystemBackdropConfiguration>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration")
            }
        }
    }
}