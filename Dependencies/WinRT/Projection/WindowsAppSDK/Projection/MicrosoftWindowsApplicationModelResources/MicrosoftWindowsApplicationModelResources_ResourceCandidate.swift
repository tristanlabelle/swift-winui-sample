// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WindowsAppSDK_ABI
import UWP


/// Represents a single possible value for a given resource, the qualifiers associated with that resource, and how well those qualifiers match the context against which it was resolved.
public final class MicrosoftWindowsApplicationModelResources_ResourceCandidate: WindowsRuntime.WinRTImport<MicrosoftWindowsApplicationModelResources_ResourceCandidateBinding>, @unchecked Sendable {
    /// Creates an instance of the ResourceCandidate class with the specified value.
    /// - Parameter kind: The type of ResourceCandidate being created.
    /// - Parameter data: The value of the ResourceCandidate.
    public init(_ kind: MicrosoftWindowsApplicationModelResources_ResourceCandidateKind, _ data: Swift.String) throws {
        let _instance = try Self._iresourceCandidateFactory.createInstance(kind, data)
        super.init(_wrapping: consume _instance)
    }

    /// Creates an instance of the ResourceCandidate class with the specified value.
    /// - Parameter data: The value for this ResourceCandidate represented as a bytes.
    public init(_ data: [Swift.UInt8]) throws {
        let _instance = try Self._iresourceCandidateFactory.createInstance2(data)
        super.init(_wrapping: consume _instance)
    }

    /// A ResourceCandidateKind that specifies the type of resource that is encapsulated in this ResourceCandidate.
    public var kind: MicrosoftWindowsApplicationModelResources_ResourceCandidateKind {
        get throws {
            try _interop.get_Kind()
        }
    }

    /// Gets the type of resource that is encapsulated in this ResourceCandidate.
    public var kind_: MicrosoftWindowsApplicationModelResources_ResourceCandidateKind {
        try! self.kind
    }

    /// A dictionary that contains all qualifiers associated with this ResourceCandidate.
    public var qualifierValues: WindowsFoundationCollections_IMapView<Swift.String, Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_QualifierValues())
        }
    }

    /// Gets the qualifiers associated with this ResourceCandidate.
    public var qualifierValues_: WindowsFoundationCollections_IMapView<Swift.String, Swift.String>! {
        try! NullResult.catch(self.qualifierValues)
    }

    /// The value of the ResourceCandidate represented in bytes.
    public var valueAsBytes: [Swift.UInt8] {
        get throws {
            try _interop.get_ValueAsBytes()
        }
    }

    /// Gets the value of the ResourceCandidate represented in bytes.
    public var valueAsBytes_: [Swift.UInt8] {
        try! self.valueAsBytes
    }

    /// The value of the ResourceCandidate represented as a string.
    public var valueAsString: Swift.String {
        get throws {
            try _interop.get_ValueAsString()
        }
    }

    /// Gets the value of the ResourceCandidate represented as a string.
    public var valueAsString_: Swift.String {
        try! self.valueAsString
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidate>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate")
            }
        }
    }

    private static var _lazyIResourceCandidateFactory: COM.COMReference<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidateFactory>.Optional = .none

    internal static var _iresourceCandidateFactory: COM.COMInterop<SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidateFactory> {
        get throws {
            try _lazyIResourceCandidateFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftWindowsApplicationModelResources_IResourceCandidateFactory.self)).cast()
            }
        }
    }
}