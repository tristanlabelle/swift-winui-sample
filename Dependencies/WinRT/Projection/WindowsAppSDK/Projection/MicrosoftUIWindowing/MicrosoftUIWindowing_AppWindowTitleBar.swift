// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WindowsAppSDK_ABI
import UWP


/// Represents the title bar of an app window.
public final class MicrosoftUIWindowing_AppWindowTitleBar: WindowsRuntime.WinRTImport<MicrosoftUIWindowing_AppWindowTitleBarBinding>, @unchecked Sendable {
    /// Resets the current title bar back to the default settings for the window.
    public func resetToDefault() throws {
        try _interop.resetToDefault()
    }

    /// Sets the drag regions for the window.
    /// - Parameter value: An array of RectInt32, where each rectangle must be within the client area of the window to which the title bar belongs.
    public func setDragRectangles(_ value: [WindowsGraphics_RectInt32]) throws {
        try _interop.setDragRectangles(value)
    }

    /// The color of the title bar background.
    public var backgroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_BackgroundColor()
        }
    }

    /// Sets the color of the title bar background.
    /// - Parameter newValue: The color of the title bar background.
    public func backgroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_BackgroundColor(value)
    }

    /// Gets or sets the color of the title bar background.
    public var backgroundColor_: WindowsUI_Color? {
        get {
            try! self.backgroundColor
        }
        set {
            try! self.backgroundColor(newValue)
        }
    }

    /// The background color of the title bar buttons.
    public var buttonBackgroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonBackgroundColor()
        }
    }

    /// Sets the background color of the title bar buttons.
    /// - Parameter newValue: The background color of the title bar buttons.
    public func buttonBackgroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonBackgroundColor(value)
    }

    /// Gets or sets the background color of the title bar buttons.
    public var buttonBackgroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonBackgroundColor
        }
        set {
            try! self.buttonBackgroundColor(newValue)
        }
    }

    /// The foreground color of the title bar buttons.
    public var buttonForegroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonForegroundColor()
        }
    }

    /// Sets the foreground color of the title bar buttons.
    /// - Parameter newValue: The foreground color of the title bar buttons.
    public func buttonForegroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonForegroundColor(value)
    }

    /// Gets or sets the foreground color of the title bar buttons.
    public var buttonForegroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonForegroundColor
        }
        set {
            try! self.buttonForegroundColor(newValue)
        }
    }

    /// The background color of a title bar button when the pointer is over it.
    public var buttonHoverBackgroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonHoverBackgroundColor()
        }
    }

    /// Sets the background color of a title bar button when the pointer is over it.
    /// - Parameter newValue: The background color of a title bar button when the pointer is over it.
    public func buttonHoverBackgroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonHoverBackgroundColor(value)
    }

    /// Gets or sets the background color of a title bar button when the pointer is over it.
    public var buttonHoverBackgroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonHoverBackgroundColor
        }
        set {
            try! self.buttonHoverBackgroundColor(newValue)
        }
    }

    /// The foreground color of a title bar button when the pointer is over it.
    public var buttonHoverForegroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonHoverForegroundColor()
        }
    }

    /// Sets the foreground color of a title bar button when the pointer is over it.
    /// - Parameter newValue: The foreground color of a title bar button when the pointer is over it.
    public func buttonHoverForegroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonHoverForegroundColor(value)
    }

    /// Gets or sets the foreground color of a title bar button when the pointer is over it.
    public var buttonHoverForegroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonHoverForegroundColor
        }
        set {
            try! self.buttonHoverForegroundColor(newValue)
        }
    }

    /// The background color of a title bar button when it's inactive.
    public var buttonInactiveBackgroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonInactiveBackgroundColor()
        }
    }

    /// Sets the background color of a title bar button when it's inactive.
    /// - Parameter newValue: The background color of a title bar button when it's inactive.
    public func buttonInactiveBackgroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonInactiveBackgroundColor(value)
    }

    /// Gets or sets the background color of a title bar button when it's inactive.
    public var buttonInactiveBackgroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonInactiveBackgroundColor
        }
        set {
            try! self.buttonInactiveBackgroundColor(newValue)
        }
    }

    /// The foreground color of a title bar button when it's inactive.
    public var buttonInactiveForegroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonInactiveForegroundColor()
        }
    }

    /// Sets the foreground color of a title bar button when it's inactive.
    /// - Parameter newValue: The foreground color of a title bar button when it's inactive.
    public func buttonInactiveForegroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonInactiveForegroundColor(value)
    }

    /// Gets or sets the foreground color of a title bar button when it's inactive.
    public var buttonInactiveForegroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonInactiveForegroundColor
        }
        set {
            try! self.buttonInactiveForegroundColor(newValue)
        }
    }

    /// The background color of a title bar button when it's pressed.
    public var buttonPressedBackgroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonPressedBackgroundColor()
        }
    }

    /// Sets the background color of a title bar button when it's pressed.
    /// - Parameter newValue: The background color of a title bar button when it's pressed.
    public func buttonPressedBackgroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonPressedBackgroundColor(value)
    }

    /// Gets or sets the background color of a title bar button when it's pressed.
    public var buttonPressedBackgroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonPressedBackgroundColor
        }
        set {
            try! self.buttonPressedBackgroundColor(newValue)
        }
    }

    /// The foreground color of a title bar button when it's pressed.
    public var buttonPressedForegroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ButtonPressedForegroundColor()
        }
    }

    /// Sets the foreground color of a title bar button when it's pressed.
    /// - Parameter newValue: The foreground color of a title bar button when it's pressed.
    public func buttonPressedForegroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ButtonPressedForegroundColor(value)
    }

    /// Gets or sets the foreground color of a title bar button when it's pressed.
    public var buttonPressedForegroundColor_: WindowsUI_Color? {
        get {
            try! self.buttonPressedForegroundColor
        }
        set {
            try! self.buttonPressedForegroundColor(newValue)
        }
    }

    /// true to extend app content into the title bar area; otherwise, false. The default is false.
    public var extendsContentIntoTitleBar: Swift.Bool {
        get throws {
            try _interop.get_ExtendsContentIntoTitleBar()
        }
    }

    /// Sets a value that specifies whether app content extends into the title bar area.
    /// - Parameter newValue: true to extend app content into the title bar area; otherwise, false. The default is false.
    public func extendsContentIntoTitleBar(_ value: Swift.Bool) throws {
        try _interop.put_ExtendsContentIntoTitleBar(value)
    }

    /// Gets or sets a value that specifies whether app content extends into the title bar area.
    public var extendsContentIntoTitleBar_: Swift.Bool {
        get {
            try! self.extendsContentIntoTitleBar
        }
        set {
            try! self.extendsContentIntoTitleBar(newValue)
        }
    }

    /// The color of the title bar foreground.
    public var foregroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_ForegroundColor()
        }
    }

    /// Sets the color of the title bar foreground.
    /// - Parameter newValue: The color of the title bar foreground.
    public func foregroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_ForegroundColor(value)
    }

    /// Gets or sets the color of the title bar foreground.
    public var foregroundColor_: WindowsUI_Color? {
        get {
            try! self.foregroundColor
        }
        set {
            try! self.foregroundColor(newValue)
        }
    }

    /// The height of the title bar in client coordinates.
    public var height: Swift.Int32 {
        get throws {
            try _interop.get_Height()
        }
    }

    /// Gets the height of the title bar in client coordinates.
    public var height_: Swift.Int32 {
        try! self.height
    }

    /// A value that specifies how the window icon is displayed in the title bar.
    public var iconShowOptions: MicrosoftUIWindowing_IconShowOptions {
        get throws {
            try _interop.get_IconShowOptions()
        }
    }

    /// Sets a value that specifies how the window icon is displayed in the title bar.
    /// - Parameter newValue: A value that specifies how the window icon is displayed in the title bar.
    public func iconShowOptions(_ value: MicrosoftUIWindowing_IconShowOptions) throws {
        try _interop.put_IconShowOptions(value)
    }

    /// Gets or sets a value that specifies how the window icon is displayed in the title bar.
    public var iconShowOptions_: MicrosoftUIWindowing_IconShowOptions {
        get {
            try! self.iconShowOptions
        }
        set {
            try! self.iconShowOptions(newValue)
        }
    }

    /// The color of the title bar background when it's inactive.
    public var inactiveBackgroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_InactiveBackgroundColor()
        }
    }

    /// Sets the color of the title bar background when it's inactive.
    /// - Parameter newValue: The color of the title bar background when it's inactive.
    public func inactiveBackgroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_InactiveBackgroundColor(value)
    }

    /// Gets or sets the color of the title bar background when it's inactive.
    public var inactiveBackgroundColor_: WindowsUI_Color? {
        get {
            try! self.inactiveBackgroundColor
        }
        set {
            try! self.inactiveBackgroundColor(newValue)
        }
    }

    /// The color of the title bar foreground when it's inactive.
    public var inactiveForegroundColor: WindowsUI_Color? {
        get throws {
            try _interop.get_InactiveForegroundColor()
        }
    }

    /// Sets the color of the title bar foreground when it's inactive.
    /// - Parameter newValue: The color of the title bar foreground when it's inactive.
    public func inactiveForegroundColor(_ value: WindowsUI_Color?) throws {
        try _interop.put_InactiveForegroundColor(value)
    }

    /// Gets or sets the color of the title bar foreground when it's inactive.
    public var inactiveForegroundColor_: WindowsUI_Color? {
        get {
            try! self.inactiveForegroundColor
        }
        set {
            try! self.inactiveForegroundColor(newValue)
        }
    }

    /// The width of the system-reserved region of the upper-left corner of the app window.
    public var leftInset: Swift.Int32 {
        get throws {
            try _interop.get_LeftInset()
        }
    }

    /// Gets the width of the system-reserved region of the upper-left corner of the app window.
    public var leftInset_: Swift.Int32 {
        try! self.leftInset
    }

    /// The width of the system-reserved region of the upper-right corner of the app window.
    public var rightInset: Swift.Int32 {
        get throws {
            try _interop.get_RightInset()
        }
    }

    /// Gets the width of the system-reserved region of the upper-right corner of the app window.
    public var rightInset_: Swift.Int32 {
        try! self.rightInset
    }

    /// A value of the enumeration that indicates the preferred height of the title bar. The default is Standard.
    public var preferredHeightOption: MicrosoftUIWindowing_TitleBarHeightOption {
        get throws {
            try _iappWindowTitleBar2.get_PreferredHeightOption()
        }
    }

    /// Sets a value that specifies the height options of the title bar when the AppWindowTitleBar.ExtendsContentIntoTitleBar property is true.
    /// - Parameter newValue: A value of the enumeration that indicates the preferred height of the title bar. The default is Standard.
    public func preferredHeightOption(_ value: MicrosoftUIWindowing_TitleBarHeightOption) throws {
        try _iappWindowTitleBar2.put_PreferredHeightOption(value)
    }

    /// Gets or sets a value that specifies the height options of the title bar when the AppWindowTitleBar.ExtendsContentIntoTitleBar property is true.
    public var preferredHeightOption_: MicrosoftUIWindowing_TitleBarHeightOption {
        get {
            try! self.preferredHeightOption
        }
        set {
            try! self.preferredHeightOption(newValue)
        }
    }

    /// Gets a value that indicates whether the title bar can be customized.
    /// - Returns: true if the title bar can be customized; otherwise, false.
    public static func isCustomizationSupported() throws -> Swift.Bool {
        try _iappWindowTitleBarStatics.isCustomizationSupported()
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIWindowing_IAppWindowTitleBar>) {
        super.init(_wrapping: consume inner)
    }

    private var _lazyIAppWindowTitleBar2: COM.COMReference<SWRT_MicrosoftUIWindowing_IAppWindowTitleBar2>.Optional = .none

    internal var _iappWindowTitleBar2: COM.COMInterop<SWRT_MicrosoftUIWindowing_IAppWindowTitleBar2> {
        get throws {
            try _lazyIAppWindowTitleBar2.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_MicrosoftUIWindowing_IAppWindowTitleBar2.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Windowing.AppWindowTitleBar")
            }
        }
    }

    private static var _lazyIAppWindowTitleBarStatics: COM.COMReference<SWRT_MicrosoftUIWindowing_IAppWindowTitleBarStatics>.Optional = .none

    internal static var _iappWindowTitleBarStatics: COM.COMInterop<SWRT_MicrosoftUIWindowing_IAppWindowTitleBarStatics> {
        get throws {
            try _lazyIAppWindowTitleBarStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIWindowing_IAppWindowTitleBarStatics.self)).cast()
            }
        }
    }
}