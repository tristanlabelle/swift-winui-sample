// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

public enum WindowsFoundationCollections_MapChangedEventHandlerBinding {
}

// MARK: Windows.Foundation.Collections.MapChangedEventHandler<String, Object>

extension WindowsFoundationCollections_MapChangedEventHandlerBinding {
    internal enum String_Object: WindowsRuntime.DelegateBinding {
        public typealias SwiftObject = WindowsFoundationCollections_MapChangedEventHandler<Swift.String, WindowsRuntime.IInspectable?>
        public typealias ABIStruct = SWRT_WindowsFoundationCollections_MapChangedEventHandler_String_IInspectable

        public static let typeName = "Windows.Foundation.Collections.MapChangedEventHandler<String, Object>"

        public static var interfaceID: COM.COMInterfaceID {
            uuidof(ABIStruct.self)
        }

        public static var ireferenceID: COM.COMInterfaceID {
            COMInterfaceID(0x31162602, 0xCAC7, 0x50AD, 0xB086, 0xAF3AB01C713F)
        }

        public static var ireferenceArrayID: COM.COMInterfaceID {
            COMInterfaceID(0xDC3B96A3, 0x329F, 0x5273, 0xAF73, 0x341CE28538F6)
        }

        public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
            Import(_wrapping: consume reference).invoke
        }

        public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
            ExportedDelegate<Self>(object).toCOM()
        }

        private final class Import: COMImport<String_Object> {
            public func invoke(_ sender: WindowsFoundationCollections_IObservableMap<Swift.String, WindowsRuntime.IInspectable?>?, _ event: WindowsFoundationCollections_IMapChangedEventArgs<Swift.String>?) throws {
                try _interop.invoke(sender, event)
            }
        }

        public static var virtualTablePointer: UnsafeRawPointer {
            .init(withUnsafePointer(to: &virtualTable) { $0 })
        }

        private static var virtualTable = SWRT_WindowsFoundationCollections_MapChangedEventHandler_String_IInspectable_VirtualTable(
            QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
            AddRef: { IUnknownVirtualTable.AddRef($0) },
            Release: { IUnknownVirtualTable.Release($0) },
            Invoke: { this, sender, event in _implement(this) { this in
                let sender_swift = WindowsFoundationCollections_IObservableMapBinding.String_Object.fromABI(sender)
                let event_swift = WindowsFoundationCollections_IMapChangedEventArgsBinding.String.fromABI(event)
                try this(sender_swift, event_swift)
            } }
        )
    }
}