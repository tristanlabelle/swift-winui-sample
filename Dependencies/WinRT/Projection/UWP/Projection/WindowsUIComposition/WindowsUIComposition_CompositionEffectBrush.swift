// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Paints a SpriteVisual with the output of a filter effect. The filter effect description is defined using the  CompositionEffectFactory class.
public final class WindowsUIComposition_CompositionEffectBrush: WindowsUIComposition_CompositionBrush, @unchecked Sendable {
    /// Retrieves a CompositionBrush associated with a given CompositionEffectSourceParameter name.
    /// - Parameter name: The name of the input.
    /// - Returns: Returns the specified input.
    public func getSourceParameter(_ name: Swift.String) throws -> WindowsUIComposition_CompositionBrush {
        try COM.NullResult.unwrap(_icompositionEffectBrush.getSourceParameter(name))
    }

    /// Associates a name declared using CompositionEffectSourceParameter to an effect source.
    /// - Parameter name: The name of the source parameter.
    /// - Parameter source: The source to pass to the effect.
    public func setSourceParameter(_ name: Swift.String, _ source: WindowsUIComposition_CompositionBrush?) throws {
        try _icompositionEffectBrush.setSourceParameter(name, source)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_ICompositionEffectBrush>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyICompositionEffectBrush: COM.COMReference<SWRT_WindowsUIComposition_ICompositionEffectBrush>.Optional = .none

    internal var _icompositionEffectBrush: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionEffectBrush> {
        get throws {
            try _lazyICompositionEffectBrush.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionEffectBrush.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.CompositionEffectBrush")
            }
        }
    }
}