// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents an object that can have a projected shadow cast on it.
public final class WindowsUIComposition_CompositionProjectedShadowReceiver: WindowsUIComposition_CompositionObject, @unchecked Sendable {
    /// The Visual that the shadow is cast on.
    public var receivingVisual: WindowsUIComposition_Visual {
        get throws {
            try COM.NullResult.unwrap(_icompositionProjectedShadowReceiver.get_ReceivingVisual())
        }
    }

    /// Sets the Visual that the shadow is cast on.
    /// - Parameter newValue: The Visual that the shadow is cast on.
    public func receivingVisual(_ value: WindowsUIComposition_Visual?) throws {
        try _icompositionProjectedShadowReceiver.put_ReceivingVisual(value)
    }

    /// Gets or sets the Visual that the shadow is cast on.
    public var receivingVisual_: WindowsUIComposition_Visual! {
        get {
            try! NullResult.catch(self.receivingVisual)
        }
        set {
            try! self.receivingVisual(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyICompositionProjectedShadowReceiver: COM.COMReference<SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver>.Optional = .none

    internal var _icompositionProjectedShadowReceiver: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver> {
        get throws {
            try _lazyICompositionProjectedShadowReceiver.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.CompositionProjectedShadowReceiver")
            }
        }
    }
}