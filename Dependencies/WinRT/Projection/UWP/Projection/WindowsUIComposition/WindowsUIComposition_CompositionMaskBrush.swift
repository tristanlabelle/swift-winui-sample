// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Paints a SpriteVisual with a CompositionBrush with an opacity mask applied to it. The source of the opacity mask can be any CompositionBrush of type CompositionColorBrush, CompositionLinearGradientBrush, CompositionSurfaceBrush, CompositionEffectBrush or a CompositionNineGridBrush. The opacity mask must be specified as a CompositionSurfaceBrush.
public final class WindowsUIComposition_CompositionMaskBrush: WindowsUIComposition_CompositionBrush, @unchecked Sendable {
    /// A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.
    public var mask: WindowsUIComposition_CompositionBrush {
        get throws {
            try COM.NullResult.unwrap(_icompositionMaskBrush.get_Mask())
        }
    }

    /// A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.
    /// - Parameter newValue: A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.
    public func mask(_ value: WindowsUIComposition_CompositionBrush?) throws {
        try _icompositionMaskBrush.put_Mask(value)
    }

    /// A brush that contains the opacity mask with which the Source brush's content is to be masked. Can be of type CompositionSurfaceBrush or CompositionNineGridBrush.
    public var mask_: WindowsUIComposition_CompositionBrush! {
        get {
            try! NullResult.catch(self.mask)
        }
        set {
            try! self.mask(newValue)
        }
    }

    /// A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.
    public var source: WindowsUIComposition_CompositionBrush {
        get throws {
            try COM.NullResult.unwrap(_icompositionMaskBrush.get_Source())
        }
    }

    /// A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.
    /// - Parameter newValue: A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.
    public func source(_ value: WindowsUIComposition_CompositionBrush?) throws {
        try _icompositionMaskBrush.put_Source(value)
    }

    /// A brush whose content is to be masked by the opacity mask. Can be of type CompositionSurfaceBrush, CompositionColorBrush, or CompositionNineGridBrush.
    public var source_: WindowsUIComposition_CompositionBrush! {
        get {
            try! NullResult.catch(self.source)
        }
        set {
            try! self.source(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_ICompositionMaskBrush>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyICompositionMaskBrush: COM.COMReference<SWRT_WindowsUIComposition_ICompositionMaskBrush>.Optional = .none

    internal var _icompositionMaskBrush: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionMaskBrush> {
        get throws {
            try _lazyICompositionMaskBrush.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionMaskBrush.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.CompositionMaskBrush")
            }
        }
    }
}