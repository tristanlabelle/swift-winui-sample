// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Paints a SpriteVisual with pixels from an ICompositionSurface.
public final class WindowsUIComposition_CompositionSurfaceBrush: WindowsUIComposition_CompositionBrush, @unchecked Sendable {
    /// Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).
    public var bitmapInterpolationMode: WindowsUIComposition_CompositionBitmapInterpolationMode {
        get throws {
            try _icompositionSurfaceBrush.get_BitmapInterpolationMode()
        }
    }

    /// Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).
    /// - Parameter newValue: Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).
    public func bitmapInterpolationMode(_ value: WindowsUIComposition_CompositionBitmapInterpolationMode) throws {
        try _icompositionSurfaceBrush.put_BitmapInterpolationMode(value)
    }

    /// Specifies the algorithm used for interpolating pixels from ICompositionSurface when they do not form a one-to-one mapping to pixels on SpriteVisual (as can happen under stretch, scale, rotation, and other transformations).
    public var bitmapInterpolationMode_: WindowsUIComposition_CompositionBitmapInterpolationMode {
        get {
            try! self.bitmapInterpolationMode
        }
        set {
            try! self.bitmapInterpolationMode(newValue)
        }
    }

    /// The positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. The default value is 0.5f.
    public var horizontalAlignmentRatio: Swift.Float {
        get throws {
            try _icompositionSurfaceBrush.get_HorizontalAlignmentRatio()
        }
    }

    /// Controls the positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. By default this is set to 0.0f.
    /// - Parameter newValue: The positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. The default value is 0.5f.
    public func horizontalAlignmentRatio(_ value: Swift.Float) throws {
        try _icompositionSurfaceBrush.put_HorizontalAlignmentRatio(value)
    }

    /// Controls the positioning of the vertical axis of content with respect to the vertical axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge of the SpriteVisual. By default this is set to 0.0f.
    public var horizontalAlignmentRatio_: Swift.Float {
        get {
            try! self.horizontalAlignmentRatio
        }
        set {
            try! self.horizontalAlignmentRatio(newValue)
        }
    }

    /// Controls how the brush's content is scaled with respect to the size of the SpriteVisual it is painted onto.
    public var stretch: WindowsUIComposition_CompositionStretch {
        get throws {
            try _icompositionSurfaceBrush.get_Stretch()
        }
    }

    /// Controls the scaling that is applied to the contents the ICompositionSurface with respect to the size of the SpriteVisual that is being painted.
    /// - Parameter newValue: Controls how the brush's content is scaled with respect to the size of the SpriteVisual it is painted onto.
    public func stretch(_ value: WindowsUIComposition_CompositionStretch) throws {
        try _icompositionSurfaceBrush.put_Stretch(value)
    }

    /// Controls the scaling that is applied to the contents the ICompositionSurface with respect to the size of the SpriteVisual that is being painted.
    public var stretch_: WindowsUIComposition_CompositionStretch {
        get {
            try! self.stretch
        }
        set {
            try! self.stretch(newValue)
        }
    }

    /// The composition surface associated with the CompositionSurfaceBrush.
    public var surface: WindowsUIComposition_ICompositionSurface {
        get throws {
            try COM.NullResult.unwrap(_icompositionSurfaceBrush.get_Surface())
        }
    }

    /// The ICompositionSurface associated with the CompositionSurfaceBrush.
    /// - Parameter newValue: The composition surface associated with the CompositionSurfaceBrush.
    public func surface(_ value: WindowsUIComposition_ICompositionSurface?) throws {
        try _icompositionSurfaceBrush.put_Surface(value)
    }

    /// The ICompositionSurface associated with the CompositionSurfaceBrush.
    public var surface_: WindowsUIComposition_ICompositionSurface! {
        get {
            try! NullResult.catch(self.surface)
        }
        set {
            try! self.surface(newValue)
        }
    }

    /// The positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual.
    public var verticalAlignmentRatio: Swift.Float {
        get throws {
            try _icompositionSurfaceBrush.get_VerticalAlignmentRatio()
        }
    }

    /// Controls the positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge of the SpriteVisual. The default value is 0.5f.
    /// - Parameter newValue: The positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual.
    public func verticalAlignmentRatio(_ value: Swift.Float) throws {
        try _icompositionSurfaceBrush.put_VerticalAlignmentRatio(value)
    }

    /// Controls the positioning of the horizontal axis of content with respect to the horizontal axis of the SpriteVisual. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge of the SpriteVisual. The default value is 0.5f.
    public var verticalAlignmentRatio_: Swift.Float {
        get {
            try! self.verticalAlignmentRatio
        }
        set {
            try! self.verticalAlignmentRatio(newValue)
        }
    }

    /// The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.
    public var anchorPoint: WindowsFoundationNumerics_Vector2 {
        get throws {
            try _icompositionSurfaceBrush2.get_AnchorPoint()
        }
    }

    /// The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.
    /// - Parameter newValue: The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.
    public func anchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        try _icompositionSurfaceBrush2.put_AnchorPoint(value)
    }

    /// The point on the brush to be positioned at the brush's offset. Value is normalized with respect to the size of the SpriteVisual.
    public var anchorPoint_: WindowsFoundationNumerics_Vector2 {
        get {
            try! self.anchorPoint
        }
        set {
            try! self.anchorPoint(newValue)
        }
    }

    /// The point about which the brush is rotated and scaled.
    public var centerPoint: WindowsFoundationNumerics_Vector2 {
        get throws {
            try _icompositionSurfaceBrush2.get_CenterPoint()
        }
    }

    /// The point about which the brush is rotated and scaled.
    /// - Parameter newValue: The point about which the brush is rotated and scaled.
    public func centerPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        try _icompositionSurfaceBrush2.put_CenterPoint(value)
    }

    /// The point about which the brush is rotated and scaled.
    public var centerPoint_: WindowsFoundationNumerics_Vector2 {
        get {
            try! self.centerPoint
        }
        set {
            try! self.centerPoint(newValue)
        }
    }

    /// The offset of the brush relative to its SpriteVisual.
    public var offset: WindowsFoundationNumerics_Vector2 {
        get throws {
            try _icompositionSurfaceBrush2.get_Offset()
        }
    }

    /// The offset of the brush relative to its SpriteVisual.
    /// - Parameter newValue: The offset of the brush relative to its SpriteVisual.
    public func offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        try _icompositionSurfaceBrush2.put_Offset(value)
    }

    /// The offset of the brush relative to its SpriteVisual.
    public var offset_: WindowsFoundationNumerics_Vector2 {
        get {
            try! self.offset
        }
        set {
            try! self.offset(newValue)
        }
    }

    /// The rotation angle, in radians, of the brush.
    public var rotationAngle: Swift.Float {
        get throws {
            try _icompositionSurfaceBrush2.get_RotationAngle()
        }
    }

    /// The rotation angle, in radians, of the brush.
    /// - Parameter newValue: The rotation angle, in radians, of the brush.
    public func rotationAngle(_ value: Swift.Float) throws {
        try _icompositionSurfaceBrush2.put_RotationAngle(value)
    }

    /// The rotation angle, in radians, of the brush.
    public var rotationAngle_: Swift.Float {
        get {
            try! self.rotationAngle
        }
        set {
            try! self.rotationAngle(newValue)
        }
    }

    /// The rotation angle, in degrees, of the brush.
    public var rotationAngleInDegrees: Swift.Float {
        get throws {
            try _icompositionSurfaceBrush2.get_RotationAngleInDegrees()
        }
    }

    /// The rotation angle, in degrees, of the brush.
    /// - Parameter newValue: The rotation angle, in degrees, of the brush.
    public func rotationAngleInDegrees(_ value: Swift.Float) throws {
        try _icompositionSurfaceBrush2.put_RotationAngleInDegrees(value)
    }

    /// The rotation angle, in degrees, of the brush.
    public var rotationAngleInDegrees_: Swift.Float {
        get {
            try! self.rotationAngleInDegrees
        }
        set {
            try! self.rotationAngleInDegrees(newValue)
        }
    }

    /// The scale to apply to the brush.
    public var scale: WindowsFoundationNumerics_Vector2 {
        get throws {
            try _icompositionSurfaceBrush2.get_Scale()
        }
    }

    /// The scale to apply to the brush.
    /// - Parameter newValue: The scale to apply to the brush.
    public func scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        try _icompositionSurfaceBrush2.put_Scale(value)
    }

    /// The scale to apply to the brush.
    public var scale_: WindowsFoundationNumerics_Vector2 {
        get {
            try! self.scale
        }
        set {
            try! self.scale(newValue)
        }
    }

    /// The transformation matrix to apply to the brush.
    public var transformMatrix: WindowsFoundationNumerics_Matrix3x2 {
        get throws {
            try _icompositionSurfaceBrush2.get_TransformMatrix()
        }
    }

    /// The transformation matrix to apply to the brush.
    /// - Parameter newValue: The transformation matrix to apply to the brush.
    public func transformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        try _icompositionSurfaceBrush2.put_TransformMatrix(value)
    }

    /// The transformation matrix to apply to the brush.
    public var transformMatrix_: WindowsFoundationNumerics_Matrix3x2 {
        get {
            try! self.transformMatrix
        }
        set {
            try! self.transformMatrix(newValue)
        }
    }

    /// **true** if the surface brush aligns with pixels; otherwise, **false**.
    public var snapToPixels: Swift.Bool {
        get throws {
            try _icompositionSurfaceBrush3.get_SnapToPixels()
        }
    }

    /// Sets a value that indicates whether the surface brush aligns with pixels.
    /// - Parameter newValue: **true** if the surface brush aligns with pixels; otherwise, **false**.
    public func snapToPixels(_ value: Swift.Bool) throws {
        try _icompositionSurfaceBrush3.put_SnapToPixels(value)
    }

    /// Gets or sets a value that indicates whether the surface brush aligns with pixels.
    public var snapToPixels_: Swift.Bool {
        get {
            try! self.snapToPixels
        }
        set {
            try! self.snapToPixels(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_ICompositionSurfaceBrush>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyICompositionSurfaceBrush: COM.COMReference<SWRT_WindowsUIComposition_ICompositionSurfaceBrush>.Optional = .none

    internal var _icompositionSurfaceBrush: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionSurfaceBrush> {
        get throws {
            try _lazyICompositionSurfaceBrush.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionSurfaceBrush.self)).cast()
            }
        }
    }

    private var _lazyICompositionSurfaceBrush2: COM.COMReference<SWRT_WindowsUIComposition_ICompositionSurfaceBrush2>.Optional = .none

    internal var _icompositionSurfaceBrush2: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionSurfaceBrush2> {
        get throws {
            try _lazyICompositionSurfaceBrush2.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionSurfaceBrush2.self)).cast()
            }
        }
    }

    private var _lazyICompositionSurfaceBrush3: COM.COMReference<SWRT_WindowsUIComposition_ICompositionSurfaceBrush3>.Optional = .none

    internal var _icompositionSurfaceBrush3: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionSurfaceBrush3> {
        get throws {
            try _lazyICompositionSurfaceBrush3.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionSurfaceBrush3.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.CompositionSurfaceBrush")
            }
        }
    }
}