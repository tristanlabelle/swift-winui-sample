// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents information about a property that can be animated.
public final class WindowsUIComposition_AnimationPropertyInfo: WindowsUIComposition_CompositionObject, @unchecked Sendable {
    /// A value of the enumeration that specifies how an animated property can be accessed.
    public var accessMode: WindowsUIComposition_AnimationPropertyAccessMode {
        get throws {
            try _ianimationPropertyInfo.get_AccessMode()
        }
    }

    /// Sets a value that specifies how an animated property can be accessed.
    /// - Parameter newValue: A value of the enumeration that specifies how an animated property can be accessed.
    public func accessMode(_ value: WindowsUIComposition_AnimationPropertyAccessMode) throws {
        try _ianimationPropertyInfo.put_AccessMode(value)
    }

    /// Gets or sets a value that specifies how an animated property can be accessed.
    public var accessMode_: WindowsUIComposition_AnimationPropertyAccessMode {
        get {
            try! self.accessMode
        }
        set {
            try! self.accessMode(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_IAnimationPropertyInfo>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyIAnimationPropertyInfo: COM.COMReference<SWRT_WindowsUIComposition_IAnimationPropertyInfo>.Optional = .none

    internal var _ianimationPropertyInfo: COM.COMInterop<SWRT_WindowsUIComposition_IAnimationPropertyInfo> {
        get throws {
            try _lazyIAnimationPropertyInfo.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_IAnimationPropertyInfo.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.AnimationPropertyInfo")
            }
        }
    }
}