// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents a collection of values that indicates the pattern of dashes and gaps that is used to outline shapes.
public final class WindowsUIComposition_CompositionStrokeDashArray: WindowsUIComposition_CompositionObject, WindowsFoundationCollections_IVectorProtocol, WindowsFoundationCollections_IIterableProtocol, @unchecked Sendable {
    public typealias T = Swift.Float

    // MARK: Windows.Foundation.Collections.IVector<Single> members

    /// Returns the value located at the specified index.
    /// - Parameter index: The integer index for the value to retrieve.
    /// - Returns: The value at the specified index.
    public func getAt(_ index: Swift.UInt32) throws -> Swift.Float {
        try _ivector.getAt(index)
    }

    /// Gets an immutable view into the collection.
    /// - Returns: An object representing the immutable collection view.
    public func getView() throws -> WindowsFoundationCollections_IVectorView<Swift.Float> {
        try COM.NullResult.unwrap(_ivector.getView())
    }

    /// Retrieves the index of the specified item.
    /// - Parameter value: The value to find in the collection.
    /// - Parameter index: The index of the item to find, if found.
    /// - Returns: **true** if an item with the specified value was found; otherwise, **false**.
    public func indexOf(_ value: Swift.Float, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _ivector.indexOf(value, &index)
    }

    /// Sets the value at the specified index to the value specified.
    /// - Parameter index: The index at which to set the value.
    /// - Parameter value: The value to set.
    public func setAt(_ index: Swift.UInt32, _ value: Swift.Float) throws {
        try _ivector.setAt(index, value)
    }

    /// Inserts the specified item at the specified index.
    /// - Parameter index: The index at which to set the value.
    /// - Parameter value: The value to set.
    public func insertAt(_ index: Swift.UInt32, _ value: Swift.Float) throws {
        try _ivector.insertAt(index, value)
    }

    /// Removes the item at the specified index.
    /// - Parameter index: The index position of the item to remove.
    public func removeAt(_ index: Swift.UInt32) throws {
        try _ivector.removeAt(index)
    }

    /// Adds a new item to the collection.
    /// - Parameter value: The item to add.
    public func append(_ value: Swift.Float) throws {
        try _ivector.append(value)
    }

    /// Removes the last item in the collection.
    public func removeAtEnd() throws {
        try _ivector.removeAtEnd()
    }

    /// Removes all items from the collection.
    public func clear() throws {
        try _ivector.clear()
    }

    /// Retrieves multiple elements in a single pass through the iterator.
    /// - Parameter startIndex: The index from which to start retrieval.
    /// - Parameter items: Provides the destination for the result. Size the initial array size as a "capacity" in order to specify how many results should be retrieved.
    /// - Returns: The number of items retrieved.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.Float]) throws -> Swift.UInt32 {
        try _ivector.getMany(startIndex, items)
    }

    /// Initially clears the collection, then inserts the provided array as new items.
    /// - Parameter items: The new collection items.
    public func replaceAll(_ items: [Swift.Float]) throws {
        try _ivector.replaceAll(items)
    }

    /// The count of items in the collection.
    public var size: Swift.UInt32 {
        get throws {
            try _ivector.get_Size()
        }
    }

    // MARK: Windows.Foundation.Collections.IIterable<Single> members

    /// Returns an iterator for the items in the collection.
    /// - Returns: The iterator object. The iterator's current position is the 0-index position, or at the collection end if the collection is empty.
    public func first() throws -> WindowsFoundationCollections_IIterator<Swift.Float> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsFoundationCollections_IVector_Float>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyIVector: COM.COMReference<SWRT_WindowsFoundationCollections_IVector_Float>.Optional = .none

    internal var _ivector: COM.COMInterop<SWRT_WindowsFoundationCollections_IVector_Float> {
        get throws {
            try _lazyIVector.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsFoundationCollections_IVector_Float.self)).cast()
            }
        }
    }

    private var _lazyIIterable: COM.COMReference<SWRT_WindowsFoundationCollections_IIterable_Float>.Optional = .none

    internal var _iiterable: COM.COMInterop<SWRT_WindowsFoundationCollections_IIterable_Float> {
        get throws {
            try _lazyIIterable.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsFoundationCollections_IIterable_Float.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.CompositionStrokeDashArray")
            }
        }
    }
}