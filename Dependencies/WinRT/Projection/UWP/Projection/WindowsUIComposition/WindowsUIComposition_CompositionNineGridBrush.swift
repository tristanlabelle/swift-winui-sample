// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Paints a SpriteVisual with a CompositionBrush after applying Nine-Grid Stretching to the contents of the Source brush. The source of the nine-grid stretch can by any CompositionBrush of type CompositionColorBrush, CompositionSurfaceBrush or a CompositionEffectBrush.
public final class WindowsUIComposition_CompositionNineGridBrush: WindowsUIComposition_CompositionBrush, @unchecked Sendable {
    /// Sets the insets of a CompositionNineGridBrush using the same value for the top, bottom, left, and right. Defaults to 0.0f.
    /// - Parameter inset: The inset value to use for the top, bottom, left, and right.
    public func setInsets(_ inset: Swift.Float) throws {
        try _icompositionNineGridBrush.setInsets(inset)
    }

    /// Sets the insets of a CompositionNineGridBrush using the specified values for the top, bottom, left, and right. Defaults to 0.0f.
    /// - Parameter left: The inset from the left of the image.
    /// - Parameter top: The inset from the top of the image.
    /// - Parameter right: The inset from the right of the image.
    /// - Parameter bottom: The inset from the bottom of the image.
    public func setInsets(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float) throws {
        try _icompositionNineGridBrush.setInsetsWithValues(left, top, right, bottom)
    }

    /// Sets the (same) scale to be applied to the left, top, right, and bottom insets. Defaults to 1.0f.
    /// - Parameter scale: The scale for all of the insets.
    public func setInsetScales(_ scale: Swift.Float) throws {
        try _icompositionNineGridBrush.setInsetScales(scale)
    }

    /// Sets the scale to be applied to the left, top, right, and bottom insets respectively. Defaults to 1.0f.
    /// - Parameter left: The scale of the left inset.
    /// - Parameter top: The scale of the top inset.
    /// - Parameter right: The scale of the right inset.
    /// - Parameter bottom: The scale of the bottom inset.
    public func setInsetScales(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float) throws {
        try _icompositionNineGridBrush.setInsetScalesWithValues(left, top, right, bottom)
    }

    /// Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.
    public var bottomInset: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_BottomInset()
        }
    }

    /// Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.
    /// - Parameter newValue: Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.
    public func bottomInset(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_BottomInset(value)
    }

    /// Inset from the bottom edge of the source content that specifies the thickness of the bottom row. Defaults to 0.0f.
    public var bottomInset_: Swift.Float {
        get {
            try! self.bottomInset
        }
        set {
            try! self.bottomInset(newValue)
        }
    }

    /// Scale to be applied to BottomInset. Defaults to 1.0f.
    public var bottomInsetScale: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_BottomInsetScale()
        }
    }

    /// Scale to be applied to BottomInset. Defaults to 1.0f.
    /// - Parameter newValue: Scale to be applied to BottomInset. Defaults to 1.0f.
    public func bottomInsetScale(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_BottomInsetScale(value)
    }

    /// Scale to be applied to BottomInset. Defaults to 1.0f.
    public var bottomInsetScale_: Swift.Float {
        get {
            try! self.bottomInsetScale
        }
        set {
            try! self.bottomInsetScale(newValue)
        }
    }

    /// Indicates whether the center of the Nine-Grid is drawn.
    public var isCenterHollow: Swift.Bool {
        get throws {
            try _icompositionNineGridBrush.get_IsCenterHollow()
        }
    }

    /// Indicates whether the center of the Nine-Grid is drawn.
    /// - Parameter newValue: Indicates whether the center of the Nine-Grid is drawn.
    public func isCenterHollow(_ value: Swift.Bool) throws {
        try _icompositionNineGridBrush.put_IsCenterHollow(value)
    }

    /// Indicates whether the center of the Nine-Grid is drawn.
    public var isCenterHollow_: Swift.Bool {
        get {
            try! self.isCenterHollow
        }
        set {
            try! self.isCenterHollow(newValue)
        }
    }

    /// Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.
    public var leftInset: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_LeftInset()
        }
    }

    /// Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.
    /// - Parameter newValue: Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.
    public func leftInset(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_LeftInset(value)
    }

    /// Inset from the left edge of the source content that specifies the thickness of the left column. Defaults to 0.0f.
    public var leftInset_: Swift.Float {
        get {
            try! self.leftInset
        }
        set {
            try! self.leftInset(newValue)
        }
    }

    /// Scale to be applied to LeftInset. Defaults to 1.0f.
    public var leftInsetScale: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_LeftInsetScale()
        }
    }

    /// Scale to be applied to LeftInset. Defaults to 1.0f.
    /// - Parameter newValue: Scale to be applied to LeftInset. Defaults to 1.0f.
    public func leftInsetScale(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_LeftInsetScale(value)
    }

    /// Scale to be applied to LeftInset. Defaults to 1.0f.
    public var leftInsetScale_: Swift.Float {
        get {
            try! self.leftInsetScale
        }
        set {
            try! self.leftInsetScale(newValue)
        }
    }

    /// Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.
    public var rightInset: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_RightInset()
        }
    }

    /// Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.
    /// - Parameter newValue: Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.
    public func rightInset(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_RightInset(value)
    }

    /// Inset from the right edge of the source content that specifies the thickness of the right column. Defaults to 0.0f.
    public var rightInset_: Swift.Float {
        get {
            try! self.rightInset
        }
        set {
            try! self.rightInset(newValue)
        }
    }

    /// Scale to be applied to RightInset. Defaults to 1.0f.
    public var rightInsetScale: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_RightInsetScale()
        }
    }

    /// Scale to be applied to RightInset. Defaults to 1.0f.
    /// - Parameter newValue: Scale to be applied to RightInset. Defaults to 1.0f.
    public func rightInsetScale(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_RightInsetScale(value)
    }

    /// Scale to be applied to RightInset. Defaults to 1.0f.
    public var rightInsetScale_: Swift.Float {
        get {
            try! self.rightInsetScale
        }
        set {
            try! self.rightInsetScale(newValue)
        }
    }

    /// The brush whose content is to be scaled using Nine-Grid Scaling. Can be of type CompositionSurfaceBrush or CompositionColorBrush.
    public var source: WindowsUIComposition_CompositionBrush {
        get throws {
            try COM.NullResult.unwrap(_icompositionNineGridBrush.get_Source())
        }
    }

    /// The brush whose content is to be Nine-Grid stretched. Can be of type CompositionSurfaceBrush or CompositionColorBrush.
    /// - Parameter newValue: The brush whose content is to be scaled using Nine-Grid Scaling. Can be of type CompositionSurfaceBrush or CompositionColorBrush.
    public func source(_ value: WindowsUIComposition_CompositionBrush?) throws {
        try _icompositionNineGridBrush.put_Source(value)
    }

    /// The brush whose content is to be Nine-Grid stretched. Can be of type CompositionSurfaceBrush or CompositionColorBrush.
    public var source_: WindowsUIComposition_CompositionBrush! {
        get {
            try! NullResult.catch(self.source)
        }
        set {
            try! self.source(newValue)
        }
    }

    /// Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.
    public var topInset: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_TopInset()
        }
    }

    /// Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.
    /// - Parameter newValue: Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.
    public func topInset(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_TopInset(value)
    }

    /// Inset from the top edge of the source content that specifies the thickness of the top row. Defaults to 0.0f.
    public var topInset_: Swift.Float {
        get {
            try! self.topInset
        }
        set {
            try! self.topInset(newValue)
        }
    }

    /// Scale to be applied to TopInset. Defaults to 1.0f.
    public var topInsetScale: Swift.Float {
        get throws {
            try _icompositionNineGridBrush.get_TopInsetScale()
        }
    }

    /// Scale to be applied to TopInset. Defaults to 1.0f.
    /// - Parameter newValue: Scale to be applied to TopInset. Defaults to 1.0f.
    public func topInsetScale(_ value: Swift.Float) throws {
        try _icompositionNineGridBrush.put_TopInsetScale(value)
    }

    /// Scale to be applied to TopInset. Defaults to 1.0f.
    public var topInsetScale_: Swift.Float {
        get {
            try! self.topInsetScale
        }
        set {
            try! self.topInsetScale(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_ICompositionNineGridBrush>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyICompositionNineGridBrush: COM.COMReference<SWRT_WindowsUIComposition_ICompositionNineGridBrush>.Optional = .none

    internal var _icompositionNineGridBrush: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionNineGridBrush> {
        get throws {
            try _lazyICompositionNineGridBrush.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionNineGridBrush.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.CompositionNineGridBrush")
            }
        }
    }
}