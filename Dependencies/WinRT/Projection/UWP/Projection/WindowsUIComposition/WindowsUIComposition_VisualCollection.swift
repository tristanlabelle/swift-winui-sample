// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents a collection of visual instances.
public final class WindowsUIComposition_VisualCollection: WindowsUIComposition_CompositionObject, WindowsFoundationCollections_IIterableProtocol, @unchecked Sendable {
    public typealias T = WindowsUIComposition_Visual?

    /// Inserts a visual above the specified sibling visual in the visual collection.
    /// - Parameter newChild: The new visual to insert.
    /// - Parameter sibling: The sibling to insert the visual above.
    public func insertAbove(_ newChild: WindowsUIComposition_Visual?, _ sibling: WindowsUIComposition_Visual?) throws {
        try _ivisualCollection.insertAbove(newChild, sibling)
    }

    /// Inserts a new visual at the bottom of the visual collection.
    /// - Parameter newChild: The new visual to insert.
    public func insertAtBottom(_ newChild: WindowsUIComposition_Visual?) throws {
        try _ivisualCollection.insertAtBottom(newChild)
    }

    /// Inserts a new visual at the top of the visual collection.
    /// - Parameter newChild: The new visual to insert.
    public func insertAtTop(_ newChild: WindowsUIComposition_Visual?) throws {
        try _ivisualCollection.insertAtTop(newChild)
    }

    /// Insert a new visual below the specified visual in the visual collection.
    /// - Parameter newChild: The new visual to insert.
    /// - Parameter sibling: The sibling visual to insert the new visual below.
    public func insertBelow(_ newChild: WindowsUIComposition_Visual?, _ sibling: WindowsUIComposition_Visual?) throws {
        try _ivisualCollection.insertBelow(newChild, sibling)
    }

    /// Removes the specified visual instance from the collection.
    /// - Parameter child: The specified visual instance from the collection.
    public func remove(_ child: WindowsUIComposition_Visual?) throws {
        try _ivisualCollection.remove(child)
    }

    /// Removes all of the visual instances from the collection.
    public func removeAll() throws {
        try _ivisualCollection.removeAll()
    }

    /// The number of visual instances in the collection.
    public var count: Swift.Int32 {
        get throws {
            try _ivisualCollection.get_Count()
        }
    }

    /// Gets the number of visual instances in the collection.
    public var count_: Swift.Int32 {
        try! self.count
    }

    // MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Composition.Visual> members

    /// Retrieves an iterator with the first object at the bottom of the collection.
    /// - Returns: Returns an iterator with the first object at the bottom of the collection. VisualCollections are ordered from bottom to top.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIComposition_Visual?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_IVisualCollection>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyIVisualCollection: COM.COMReference<SWRT_WindowsUIComposition_IVisualCollection>.Optional = .none

    internal var _ivisualCollection: COM.COMInterop<SWRT_WindowsUIComposition_IVisualCollection> {
        get throws {
            try _lazyIVisualCollection.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_IVisualCollection.self)).cast()
            }
        }
    }

    private var _lazyIIterable: COM.COMReference<SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_Visual>.Optional = .none

    internal var _iiterable: COM.COMInterop<SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_Visual> {
        get throws {
            try _lazyIIterable.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_Visual.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.VisualCollection")
            }
        }
    }
}