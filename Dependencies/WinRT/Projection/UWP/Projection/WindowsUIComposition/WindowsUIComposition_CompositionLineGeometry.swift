// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents a straight line between two points.
public final class WindowsUIComposition_CompositionLineGeometry: WindowsUIComposition_CompositionGeometry, @unchecked Sendable {
    /// The end point of the line.
    public var end: WindowsFoundationNumerics_Vector2 {
        get throws {
            try _icompositionLineGeometry.get_End()
        }
    }

    /// Sets the end point of the line.
    /// - Parameter newValue: The end point of the line.
    public func end(_ value: WindowsFoundationNumerics_Vector2) throws {
        try _icompositionLineGeometry.put_End(value)
    }

    /// Gets or sets the end point of the line.
    public var end_: WindowsFoundationNumerics_Vector2 {
        get {
            try! self.end
        }
        set {
            try! self.end(newValue)
        }
    }

    /// The starting point of the line.
    public var start: WindowsFoundationNumerics_Vector2 {
        get throws {
            try _icompositionLineGeometry.get_Start()
        }
    }

    /// Sets the starting point of the line.
    /// - Parameter newValue: The starting point of the line.
    public func start(_ value: WindowsFoundationNumerics_Vector2) throws {
        try _icompositionLineGeometry.put_Start(value)
    }

    /// Gets or sets the starting point of the line.
    public var start_: WindowsFoundationNumerics_Vector2 {
        get {
            try! self.start
        }
        set {
            try! self.start(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUIComposition_ICompositionLineGeometry>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyICompositionLineGeometry: COM.COMReference<SWRT_WindowsUIComposition_ICompositionLineGeometry>.Optional = .none

    internal var _icompositionLineGeometry: COM.COMInterop<SWRT_WindowsUIComposition_ICompositionLineGeometry> {
        get throws {
            try _lazyICompositionLineGeometry.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUIComposition_ICompositionLineGeometry.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Composition.CompositionLineGeometry")
            }
        }
    }
}