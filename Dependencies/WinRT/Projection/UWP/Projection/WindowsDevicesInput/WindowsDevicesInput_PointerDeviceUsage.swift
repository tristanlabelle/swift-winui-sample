// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Identifies the Human Interface Device (HID) usage details for the input device.
public struct WindowsDevicesInput_PointerDeviceUsage: Codable, Hashable, Sendable {
    /// The Human Interface Device (HID) usage page of the pointer device. Human Interface Device (HID) usages are organized into usage pages that specify classes of related devices. For example, touch digitizers (0x0D) and generic input (0x01).
    public var usagePage: Swift.UInt32

    /// The Human Interface Device (HID) pointer device usage ID that specifies a device or property in the **UsagePage**. For example, 0x04 indicates a touch screen device and 0x47 indicates touch confidence.
    public var usage: Swift.UInt32

    /// The minimum logical value for **Usage**.
    public var minLogical: Swift.Int32

    /// The maximum logical value for **Usage**.
    public var maxLogical: Swift.Int32

    /// The minimum physical value for **Usage**.
    public var minPhysical: Swift.Int32

    /// The maximum physical value for **Usage**.
    public var maxPhysical: Swift.Int32

    /// The Human Interface Device (HID) unit of measure.
    public var unit: Swift.UInt32

    /// The multiplier used to convert the usage value reported by the device to a physical value in units of **Unit**. (Valid only for usages that indicate a static or dynamic value associated with a control, such as pressure or width and height of the touch contact.)
    public var physicalMultiplier: Swift.Float

    public init() {
        self.usagePage = 0
        self.usage = 0
        self.minLogical = 0
        self.maxLogical = 0
        self.minPhysical = 0
        self.maxPhysical = 0
        self.unit = 0
        self.physicalMultiplier = 0
    }

    public init(usagePage: Swift.UInt32, usage: Swift.UInt32, minLogical: Swift.Int32, maxLogical: Swift.Int32, minPhysical: Swift.Int32, maxPhysical: Swift.Int32, unit: Swift.UInt32, physicalMultiplier: Swift.Float) {
        self.usagePage = usagePage
        self.usage = usage
        self.minLogical = minLogical
        self.maxLogical = maxLogical
        self.minPhysical = minPhysical
        self.maxPhysical = maxPhysical
        self.unit = unit
        self.physicalMultiplier = physicalMultiplier
    }
}