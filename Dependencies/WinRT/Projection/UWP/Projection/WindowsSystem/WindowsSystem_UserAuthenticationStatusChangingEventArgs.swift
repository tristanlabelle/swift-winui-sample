// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Provides data for a user authentication status changing event.
public final class WindowsSystem_UserAuthenticationStatusChangingEventArgs: WindowsRuntime.WinRTImport<WindowsSystem_UserAuthenticationStatusChangingEventArgsBinding>, @unchecked Sendable {
    /// Requests a delay before the user's authentication status changes.
    /// - Returns: The user authentication status change deferral.
    public func getDeferral() throws -> WindowsSystem_UserAuthenticationStatusChangeDeferral {
        try COM.NullResult.unwrap(_interop.getDeferral())
    }

    /// The user's current authentication status.
    public var currentStatus: WindowsSystem_UserAuthenticationStatus {
        get throws {
            try _interop.get_CurrentStatus()
        }
    }

    /// Gets the user's current authentication status.
    public var currentStatus_: WindowsSystem_UserAuthenticationStatus {
        try! self.currentStatus
    }

    /// The user's new authentication status.
    public var newStatus: WindowsSystem_UserAuthenticationStatus {
        get throws {
            try _interop.get_NewStatus()
        }
    }

    /// Gets the user's new authentication status.
    public var newStatus_: WindowsSystem_UserAuthenticationStatus {
        try! self.newStatus
    }

    /// The user.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_interop.get_User())
        }
    }

    /// Gets the user.
    public var user_: WindowsSystem_User! {
        try! NullResult.catch(self.user)
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsSystem_IUserAuthenticationStatusChangingEventArgs>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.System.UserAuthenticationStatusChangingEventArgs")
            }
        }
    }
}