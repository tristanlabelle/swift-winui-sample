// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Specifies the values for each virtual key.
public struct WindowsSystem_VirtualKey: CStyleEnum {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// No virtual key value.
    public static let none = Self()

    /// The left mouse button.
    public static let leftButton = Self(rawValue: 1)

    /// The right mouse button.
    public static let rightButton = Self(rawValue: 2)

    /// The cancel key or button
    public static let cancel = Self(rawValue: 3)

    /// The middle mouse button.
    public static let middleButton = Self(rawValue: 4)

    /// An additional "extended" device key or button (for example, an additional mouse button).
    public static let xbutton1 = Self(rawValue: 5)

    /// An additional "extended" device key or button (for example, an additional mouse button).
    public static let xbutton2 = Self(rawValue: 6)

    /// The virtual back key or button.
    public static let back = Self(rawValue: 8)

    /// The Tab key.
    public static let tab = Self(rawValue: 9)

    /// The Clear key or button.
    public static let clear = Self(rawValue: 12)

    /// The Enter key.
    public static let enter = Self(rawValue: 13)

    /// The Shift key. This is the general Shift case, applicable to key layouts with only one Shift key or that do not need to differentiate between left Shift and right Shift keystrokes.
    public static let shift = Self(rawValue: 16)

    /// The Ctrl key. This is the general Ctrl case, applicable to key layouts with only one Ctrl key or that do not need to differentiate between left Ctrl and right Ctrl keystrokes.
    public static let control = Self(rawValue: 17)

    /// The menu key or button.
    public static let menu = Self(rawValue: 18)

    /// The Pause key or button.
    public static let pause = Self(rawValue: 19)

    /// The Caps Lock key or button.
    public static let capitalLock = Self(rawValue: 20)

    /// The Kana symbol key-shift button
    public static let kana = Self(rawValue: 21)

    /// The Hangul symbol key-shift button.
    public static let hangul = Self(rawValue: 21)

    /// The Junja symbol key-shift button.
    public static let junja = Self(rawValue: 23)

    /// The Final symbol key-shift button.
    public static let final = Self(rawValue: 24)

    /// The Hanja symbol key shift button.
    public static let hanja = Self(rawValue: 25)

    /// The Kanji symbol key-shift button.
    public static let kanji = Self(rawValue: 25)

    /// The Esc key.
    public static let escape = Self(rawValue: 27)

    /// The convert button or key.
    public static let convert = Self(rawValue: 28)

    /// The nonconvert button or key.
    public static let nonConvert = Self(rawValue: 29)

    /// The accept button or key.
    public static let accept = Self(rawValue: 30)

    /// The mode change key.
    public static let modeChange = Self(rawValue: 31)

    /// The Spacebar key or button.
    public static let space = Self(rawValue: 32)

    /// The Page Up key.
    public static let pageUp = Self(rawValue: 33)

    /// The Page Down key.
    public static let pageDown = Self(rawValue: 34)

    /// The End key.
    public static let end = Self(rawValue: 35)

    /// The Home key.
    public static let home = Self(rawValue: 36)

    /// The Left Arrow key.
    public static let left = Self(rawValue: 37)

    /// The Up Arrow key.
    public static let up = Self(rawValue: 38)

    /// The Right Arrow key.
    public static let right = Self(rawValue: 39)

    /// The Down Arrow key.
    public static let down = Self(rawValue: 40)

    /// The Select key or button.
    public static let select = Self(rawValue: 41)

    /// The Print key or button.
    public static let print = Self(rawValue: 42)

    /// The execute key or button.
    public static let execute = Self(rawValue: 43)

    /// The snapshot key or button.
    public static let snapshot = Self(rawValue: 44)

    /// The Insert key.
    public static let insert = Self(rawValue: 45)

    /// The Delete key.
    public static let delete = Self(rawValue: 46)

    /// The Help key or button.
    public static let help = Self(rawValue: 47)

    /// The number "0" key.
    public static let number0 = Self(rawValue: 48)

    /// The number "1" key.
    public static let number1 = Self(rawValue: 49)

    /// The number "2" key.
    public static let number2 = Self(rawValue: 50)

    /// The number "3" key.
    public static let number3 = Self(rawValue: 51)

    /// The number "4" key.
    public static let number4 = Self(rawValue: 52)

    /// The number "5" key.
    public static let number5 = Self(rawValue: 53)

    /// The number "6" key.
    public static let number6 = Self(rawValue: 54)

    /// The number "7" key.
    public static let number7 = Self(rawValue: 55)

    /// The number "8" key.
    public static let number8 = Self(rawValue: 56)

    /// The number "9" key.
    public static let number9 = Self(rawValue: 57)

    /// The letter "A" key.
    public static let a = Self(rawValue: 65)

    /// The letter "B" key.
    public static let b = Self(rawValue: 66)

    /// The letter "C" key.
    public static let c = Self(rawValue: 67)

    /// The letter "D" key.
    public static let d = Self(rawValue: 68)

    /// The letter "E" key.
    public static let e = Self(rawValue: 69)

    /// The letter "F" key.
    public static let f = Self(rawValue: 70)

    /// The letter "G" key.
    public static let g = Self(rawValue: 71)

    /// The letter "H" key.
    public static let h = Self(rawValue: 72)

    /// The letter "I" key.
    public static let i = Self(rawValue: 73)

    /// The letter "J" key.
    public static let j = Self(rawValue: 74)

    /// The letter "K" key.
    public static let k = Self(rawValue: 75)

    /// The letter "L" key.
    public static let l = Self(rawValue: 76)

    /// The letter "M" key.
    public static let m = Self(rawValue: 77)

    /// The letter "N" key.
    public static let n = Self(rawValue: 78)

    /// The letter "O" key.
    public static let o = Self(rawValue: 79)

    /// The letter "P" key.
    public static let p = Self(rawValue: 80)

    /// The letter "Q" key.
    public static let q = Self(rawValue: 81)

    /// The letter "R" key.
    public static let r = Self(rawValue: 82)

    /// The letter "S" key.
    public static let s = Self(rawValue: 83)

    /// The letter "T" key.
    public static let t = Self(rawValue: 84)

    /// The letter "U" key.
    public static let u = Self(rawValue: 85)

    /// The letter "V" key.
    public static let v = Self(rawValue: 86)

    /// The letter "W" key.
    public static let w = Self(rawValue: 87)

    /// The letter "X" key.
    public static let x = Self(rawValue: 88)

    /// The letter "Y" key.
    public static let y = Self(rawValue: 89)

    /// The letter "Z" key.
    public static let z = Self(rawValue: 90)

    /// The left Windows key.
    public static let leftWindows = Self(rawValue: 91)

    /// The right Windows key.
    public static let rightWindows = Self(rawValue: 92)

    /// The application key or button.
    public static let application = Self(rawValue: 93)

    /// The sleep key or button.
    public static let sleep = Self(rawValue: 95)

    /// The number "0" key as located on a numeric pad.
    public static let numberPad0 = Self(rawValue: 96)

    /// The number "1" key as located on a numeric pad.
    public static let numberPad1 = Self(rawValue: 97)

    /// The number "2" key as located on a numeric pad.
    public static let numberPad2 = Self(rawValue: 98)

    /// The number "3" key as located on a numeric pad.
    public static let numberPad3 = Self(rawValue: 99)

    /// The number "4" key as located on a numeric pad.
    public static let numberPad4 = Self(rawValue: 100)

    /// The number "5" key as located on a numeric pad.
    public static let numberPad5 = Self(rawValue: 101)

    /// The number "6" key as located on a numeric pad.
    public static let numberPad6 = Self(rawValue: 102)

    /// The number "7" key as located on a numeric pad.
    public static let numberPad7 = Self(rawValue: 103)

    /// The number "8" key as located on a numeric pad.
    public static let numberPad8 = Self(rawValue: 104)

    /// The number "9" key as located on a numeric pad.
    public static let numberPad9 = Self(rawValue: 105)

    /// The multiply (*) operation key as located on a numeric pad.
    public static let multiply = Self(rawValue: 106)

    /// The add (+) operation key as located on a numeric pad.
    public static let add = Self(rawValue: 107)

    /// The separator key as located on a numeric pad.
    public static let separator = Self(rawValue: 108)

    /// The subtract (-) operation key as located on a numeric pad.
    public static let subtract = Self(rawValue: 109)

    /// The decimal (.) key as located on a numeric pad.
    public static let decimal = Self(rawValue: 110)

    /// The divide (/) operation key as located on a numeric pad.
    public static let divide = Self(rawValue: 111)

    /// The F1 function key.
    public static let f1 = Self(rawValue: 112)

    /// The F2 function key.
    public static let f2 = Self(rawValue: 113)

    /// The F3 function key.
    public static let f3 = Self(rawValue: 114)

    /// The F4 function key.
    public static let f4 = Self(rawValue: 115)

    /// The F5 function key.
    public static let f5 = Self(rawValue: 116)

    /// The F6 function key.
    public static let f6 = Self(rawValue: 117)

    /// The F7 function key.
    public static let f7 = Self(rawValue: 118)

    /// The F8 function key.
    public static let f8 = Self(rawValue: 119)

    /// The F9 function key.
    public static let f9 = Self(rawValue: 120)

    /// The F10 function key.
    public static let f10 = Self(rawValue: 121)

    /// The F11 function key.
    public static let f11 = Self(rawValue: 122)

    /// The F12 function key.
    public static let f12 = Self(rawValue: 123)

    /// The F13 function key.
    public static let f13 = Self(rawValue: 124)

    /// The F14 function key.
    public static let f14 = Self(rawValue: 125)

    /// The F15 function key.
    public static let f15 = Self(rawValue: 126)

    /// The F16 function key.
    public static let f16 = Self(rawValue: 127)

    /// The F17 function key.
    public static let f17 = Self(rawValue: 128)

    /// The F18 function key.
    public static let f18 = Self(rawValue: 129)

    /// The F19 function key.
    public static let f19 = Self(rawValue: 130)

    /// The F20 function key.
    public static let f20 = Self(rawValue: 131)

    /// The F21 function key.
    public static let f21 = Self(rawValue: 132)

    /// The F22 function key.
    public static let f22 = Self(rawValue: 133)

    /// The F23 function key.
    public static let f23 = Self(rawValue: 134)

    /// The F24 function key.
    public static let f24 = Self(rawValue: 135)

    /// The navigation up button.
    public static let navigationView = Self(rawValue: 136)

    /// The navigation menu button.
    public static let navigationMenu = Self(rawValue: 137)

    /// The navigation up button.
    public static let navigationUp = Self(rawValue: 138)

    /// The navigation down button.
    public static let navigationDown = Self(rawValue: 139)

    /// The navigation left button.
    public static let navigationLeft = Self(rawValue: 140)

    /// The navigation right button.
    public static let navigationRight = Self(rawValue: 141)

    /// The navigation accept button.
    public static let navigationAccept = Self(rawValue: 142)

    /// The navigation cancel button.
    public static let navigationCancel = Self(rawValue: 143)

    /// The Num Lock key.
    public static let numberKeyLock = Self(rawValue: 144)

    /// The Scroll Lock (ScrLk) key.
    public static let scroll = Self(rawValue: 145)

    /// The left Shift key.
    public static let leftShift = Self(rawValue: 160)

    /// The right Shift key.
    public static let rightShift = Self(rawValue: 161)

    /// The left Ctrl key.
    public static let leftControl = Self(rawValue: 162)

    /// The right Ctrl key.
    public static let rightControl = Self(rawValue: 163)

    /// The left menu key.
    public static let leftMenu = Self(rawValue: 164)

    /// The right menu key.
    public static let rightMenu = Self(rawValue: 165)

    /// The go back key.
    public static let goBack = Self(rawValue: 166)

    /// The go forward key.
    public static let goForward = Self(rawValue: 167)

    /// The refresh key.
    public static let refresh = Self(rawValue: 168)

    /// The stop key.
    public static let stop = Self(rawValue: 169)

    /// The search key.
    public static let search = Self(rawValue: 170)

    /// The favorites key.
    public static let favorites = Self(rawValue: 171)

    /// The go home key.
    public static let goHome = Self(rawValue: 172)

    /// The gamepad A button.
    public static let gamepadA = Self(rawValue: 195)

    /// The gamepad B button.
    public static let gamepadB = Self(rawValue: 196)

    /// The gamepad X button.
    public static let gamepadX = Self(rawValue: 197)

    /// The gamepad Y button.
    public static let gamepadY = Self(rawValue: 198)

    /// The gamepad right shoulder.
    public static let gamepadRightShoulder = Self(rawValue: 199)

    /// The gamepad left shoulder.
    public static let gamepadLeftShoulder = Self(rawValue: 200)

    /// The gamepad left trigger.
    public static let gamepadLeftTrigger = Self(rawValue: 201)

    /// The gamepad right trigger.
    public static let gamepadRightTrigger = Self(rawValue: 202)

    /// The gamepad d-pad up.
    public static let gamepadDPadUp = Self(rawValue: 203)

    /// The gamepad d-pad down.
    public static let gamepadDPadDown = Self(rawValue: 204)

    /// The gamepad d-pad left.
    public static let gamepadDPadLeft = Self(rawValue: 205)

    /// The gamepad d-pad right.
    public static let gamepadDPadRight = Self(rawValue: 206)

    /// The gamepad menu button.
    public static let gamepadMenu = Self(rawValue: 207)

    /// The gamepad view button.
    public static let gamepadView = Self(rawValue: 208)

    /// The gamepad left thumbstick button.
    public static let gamepadLeftThumbstickButton = Self(rawValue: 209)

    /// The gamepad right thumbstick button.
    public static let gamepadRightThumbstickButton = Self(rawValue: 210)

    /// The gamepad left thumbstick up.
    public static let gamepadLeftThumbstickUp = Self(rawValue: 211)

    /// The gamepad left thumbstick down.
    public static let gamepadLeftThumbstickDown = Self(rawValue: 212)

    /// The gamepad left thumbstick right.
    public static let gamepadLeftThumbstickRight = Self(rawValue: 213)

    /// The gamepad left thumbstick left.
    public static let gamepadLeftThumbstickLeft = Self(rawValue: 214)

    /// The gamepad right thumbstick up.
    public static let gamepadRightThumbstickUp = Self(rawValue: 215)

    /// The gamepad right thumbstick down.
    public static let gamepadRightThumbstickDown = Self(rawValue: 216)

    /// The gamepad right thumbstick right.
    public static let gamepadRightThumbstickRight = Self(rawValue: 217)

    /// The gamepad right thumbstick left.
    public static let gamepadRightThumbstickLeft = Self(rawValue: 218)
}