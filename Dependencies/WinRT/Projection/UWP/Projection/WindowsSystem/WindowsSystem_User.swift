// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents a user.
public final class WindowsSystem_User: WindowsRuntime.WinRTImport<WindowsSystem_UserBinding>, @unchecked Sendable {
    /// Gets a property for the user. Use the KnownUserProperties class to obtain property names.
    /// - Parameter value: The property to get.
    /// - Returns: When this method completes, it returns the requested property. If the property is missing or unavailable, an empty string is returned.
    public func getPropertyAsync(_ value: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsRuntime.IInspectable?> {
        try COM.NullResult.unwrap(_interop.getPropertyAsync(value))
    }

    public func getPropertiesAsync(_ values: WindowsFoundationCollections_IVectorView<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IPropertySet?> {
        try COM.NullResult.unwrap(_interop.getPropertiesAsync(values))
    }

    /// Gets a user's picture asynchronously.
    /// - Parameter desiredSize: The desired size of the user's picture to return.
    /// - Returns: When this method completes, it returns the user's picture.
    public func getPictureAsync(_ desiredSize: WindowsSystem_UserPictureSize) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamReference?> {
        try COM.NullResult.unwrap(_interop.getPictureAsync(desiredSize))
    }

    /// The authentication status of the user.
    public var authenticationStatus: WindowsSystem_UserAuthenticationStatus {
        get throws {
            try _interop.get_AuthenticationStatus()
        }
    }

    /// Gets the authentication status of the user.
    public var authenticationStatus_: WindowsSystem_UserAuthenticationStatus {
        try! self.authenticationStatus
    }

    /// The user's non-roamable Id.
    public var nonRoamableId: Swift.String {
        get throws {
            try _interop.get_NonRoamableId()
        }
    }

    /// Gets the user's non-roamable id.
    public var nonRoamableId_: Swift.String {
        try! self.nonRoamableId
    }

    /// The user type.
    public var type: WindowsSystem_UserType {
        get throws {
            try _interop.get_Type()
        }
    }

    /// Gets the user type.
    public var type_: WindowsSystem_UserType {
        try! self.type
    }

    /// Creates a UserWatcher which enumerates users and raises events when the collection of users changes or when a userâ€™s authentication state changes.
    /// - Returns: A UserWatcher which enumerates users and raises events when the collection of users changes.
    public static func createWatcher() throws -> WindowsSystem_UserWatcher {
        try COM.NullResult.unwrap(_iuserStatics.createWatcher())
    }

    /// Finds all users asynchronously.
    /// - Returns: When this method completes successfully, it returns a list (type IVectorView ) of Users.
    public static func findAllAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?> {
        try COM.NullResult.unwrap(_iuserStatics.findAllAsync())
    }

    /// Finds all users of a given type asynchronously.
    /// - Parameter type: The type of users to find.
    /// - Returns: When this method completes successfully, it returns a list (type IVectorView ) of Users.
    public static func findAllAsync(_ type: WindowsSystem_UserType) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?> {
        try COM.NullResult.unwrap(_iuserStatics.findAllAsyncByType(type))
    }

    /// Finds all users of a given type and authentication status asynchronously.
    /// - Parameter type: The type of users to find.
    /// - Parameter status: The authentication status of users to find.
    /// - Returns: When this method completes successfully, it returns a list (type IVectorView ) of Users.
    public static func findAllAsync(_ type: WindowsSystem_UserType, _ status: WindowsSystem_UserAuthenticationStatus) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?> {
        try COM.NullResult.unwrap(_iuserStatics.findAllAsyncByTypeAndStatus(type, status))
    }

    /// Gets a user with a given Id.
    /// - Parameter nonRoamableId: The Id of the user to get.
    /// - Returns: The user with the given Id.
    public static func getFromId(_ nonRoamableId: Swift.String) throws -> WindowsSystem_User {
        try COM.NullResult.unwrap(_iuserStatics.getFromId(nonRoamableId))
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsSystem_IUser>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.System.User")
            }
        }
    }

    private static var _lazyIUserStatics: COM.COMReference<SWRT_WindowsSystem_IUserStatics>.Optional = .none

    internal static var _iuserStatics: COM.COMInterop<SWRT_WindowsSystem_IUserStatics> {
        get throws {
            try _lazyIUserStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WindowsSystem_IUserStatics.self)).cast()
            }
        }
    }
}