// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

public enum WindowsStorage_IStorageItemProperties2Binding: WindowsRuntime.InterfaceBinding {
    public typealias SwiftObject = WindowsStorage_IStorageItemProperties2
    public typealias ABIStruct = SWRT_WindowsStorage_IStorageItemProperties2

    public static let typeName = "Windows.Storage.IStorageItemProperties2"

    public static var interfaceID: COM.COMInterfaceID {
        uuidof(ABIStruct.self)
    }

    public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
        Import(_wrapping: consume reference)
    }

    private final class Import: WinRTImport<WindowsStorage_IStorageItemProperties2Binding>, WindowsStorage_IStorageItemProperties2Protocol {
        public func getScaledImageAsThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
            try COM.NullResult.unwrap(_interop.getScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions(mode))
        }

        public func getScaledImageAsThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
            try COM.NullResult.unwrap(_interop.getScaledImageAsThumbnailAsyncOverloadDefaultOptions(mode, requestedSize))
        }

        public func getScaledImageAsThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32, _ options: WindowsStorageFileProperties_ThumbnailOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
            try COM.NullResult.unwrap(_interop.getScaledImageAsThumbnailAsync(mode, requestedSize, options))
        }

        // MARK: Windows.Storage.IStorageItemProperties members

        public func getThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
            try COM.NullResult.unwrap(_istorageItemProperties.getThumbnailAsyncOverloadDefaultSizeDefaultOptions(mode))
        }

        public func getThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
            try COM.NullResult.unwrap(_istorageItemProperties.getThumbnailAsyncOverloadDefaultOptions(mode, requestedSize))
        }

        public func getThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32, _ options: WindowsStorageFileProperties_ThumbnailOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
            try COM.NullResult.unwrap(_istorageItemProperties.getThumbnailAsync(mode, requestedSize, options))
        }

        public var displayName: Swift.String {
            get throws {
                try _istorageItemProperties.get_DisplayName()
            }
        }

        public var displayType: Swift.String {
            get throws {
                try _istorageItemProperties.get_DisplayType()
            }
        }

        public var folderRelativeId: Swift.String {
            get throws {
                try _istorageItemProperties.get_FolderRelativeId()
            }
        }

        public var properties: WindowsStorageFileProperties_StorageItemContentProperties {
            get throws {
                try COM.NullResult.unwrap(_istorageItemProperties.get_Properties())
            }
        }

        // MARK: Implementation boilerplate

        private var _lazyIStorageItemProperties: COM.COMReference<SWRT_WindowsStorage_IStorageItemProperties>.Optional = .none

        internal var _istorageItemProperties: COM.COMInterop<SWRT_WindowsStorage_IStorageItemProperties> {
            get throws {
                try _lazyIStorageItemProperties.lazyInitInterop {
                    try _queryInterface(uuidof(SWRT_WindowsStorage_IStorageItemProperties.self)).cast()
                }
            }
        }
    }

    public static var virtualTablePointer: UnsafeRawPointer {
        .init(withUnsafePointer(to: &virtualTable) { $0 })
    }

    private static var virtualTable = SWRT_WindowsStorage_IStorageItemProperties2_VirtualTable(
        QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
        AddRef: { IUnknownVirtualTable.AddRef($0) },
        Release: { IUnknownVirtualTable.Release($0) },
        GetIids: { IInspectableVirtualTable.GetIids($0, $1, $2) },
        GetRuntimeClassName: { IInspectableVirtualTable.GetRuntimeClassName($0, $1) },
        GetTrustLevel: { IInspectableVirtualTable.GetTrustLevel($0, $1) },
        GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions: { this, mode, _result in _implement(this) { this in
            guard let _result else { throw COM.COMError.pointer }
            let mode_swift = WindowsStorageFileProperties_ThumbnailMode.fromABI(mode)
            let _result_swift = try COM.NullResult.`catch`(try this.getScaledImageAsThumbnailAsync(mode_swift))
            _result.pointee = try WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.toABI(_result_swift)
        } },
        GetScaledImageAsThumbnailAsyncOverloadDefaultOptions: { this, mode, requestedSize, _result in _implement(this) { this in
            guard let _result else { throw COM.COMError.pointer }
            let mode_swift = WindowsStorageFileProperties_ThumbnailMode.fromABI(mode)
            let _result_swift = try COM.NullResult.`catch`(try this.getScaledImageAsThumbnailAsync(mode_swift, requestedSize))
            _result.pointee = try WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.toABI(_result_swift)
        } },
        GetScaledImageAsThumbnailAsync: { this, mode, requestedSize, options, _result in _implement(this) { this in
            guard let _result else { throw COM.COMError.pointer }
            let mode_swift = WindowsStorageFileProperties_ThumbnailMode.fromABI(mode)
            let options_swift = WindowsStorageFileProperties_ThumbnailOptions.fromABI(options)
            let _result_swift = try COM.NullResult.`catch`(try this.getScaledImageAsThumbnailAsync(mode_swift, requestedSize, options_swift))
            _result.pointee = try WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.toABI(_result_swift)
        } }
    )
}