// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents a write transaction for a random-access stream.
public final class WindowsStorage_StorageStreamTransaction: WindowsRuntime.WinRTImport<WindowsStorage_StorageStreamTransactionBinding>, WindowsFoundation_IClosableProtocol {
    /// Save the stream to the underlying file.
    /// - Returns: No object or value is returned by this method.
    public func commitAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.commitAsync())
    }

    /// The random-access stream.
    public var stream: WindowsStorageStreams_IRandomAccessStream {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Stream())
        }
    }

    /// Gets the random-access stream used in the transaction.
    public var stream_: WindowsStorageStreams_IRandomAccessStream! {
        try! NullResult.catch(self.stream)
    }

    // MARK: Windows.Foundation.IClosable members

    /// Releases system resources that are exposed by the stream, indicating that the data request is complete.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsStorage_IStorageStreamTransaction>) {
        super.init(_wrapping: consume inner)
    }

    private var _lazyIClosable: COM.COMReference<SWRT_WindowsFoundation_IClosable>.Optional = .none

    internal var _iclosable: COM.COMInterop<SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _lazyIClosable.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsFoundation_IClosable.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.Storage.StorageStreamTransaction")
            }
        }
    }
}