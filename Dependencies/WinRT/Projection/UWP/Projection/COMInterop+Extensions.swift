// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

// MARK: Windows.ApplicationModel.Activation.IActivatedEventArgs

public func uuidof(_: SWRT_WindowsApplicationModelActivation_IActivatedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCF651713, 0xCD08, 0x4FD8, 0xB697, 0xA281B6544E2E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_IActivatedEventArgs {
    public func get_Kind() throws -> WindowsApplicationModelActivation_ActivationKind {
        var _result: SWRT_WindowsApplicationModelActivation_ActivationKind = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Kind(this, &_result))
        return WindowsApplicationModelActivation_ActivationKind.fromABI(_result)
    }

    public func get_PreviousExecutionState() throws -> WindowsApplicationModelActivation_ApplicationExecutionState {
        var _result: SWRT_WindowsApplicationModelActivation_ApplicationExecutionState = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PreviousExecutionState(this, &_result))
        return WindowsApplicationModelActivation_ApplicationExecutionState.fromABI(_result)
    }

    public func get_SplashScreen() throws -> WindowsApplicationModelActivation_SplashScreen? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelActivation_ISplashScreen>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SplashScreen(this, &_result))
        return WindowsApplicationModelActivation_SplashScreenBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.Activation.IActivatedEventArgsWithUser

public func uuidof(_: SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1CF09B9E, 0x9962, 0x4936, 0x80FF, 0xAFC8E8AE5C8C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser {
    public func get_User() throws -> WindowsSystem_User? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUser>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_User(this, &_result))
        return WindowsSystem_UserBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.Activation.IApplicationViewActivatedEventArgs

public func uuidof(_: SWRT_WindowsApplicationModelActivation_IApplicationViewActivatedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x930CEF4B, 0xB829, 0x40FC, 0x88F4, 0x8513E8A64738)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_IApplicationViewActivatedEventArgs {
    public func get_CurrentlyShownApplicationViewId() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CurrentlyShownApplicationViewId(this, &_result))
        return _result
    }
}

// MARK: Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs

public func uuidof(_: SWRT_WindowsApplicationModelActivation_ILaunchActivatedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFBC93E26, 0xA14A, 0x4B4F, 0x82B0, 0x33BED920AF52)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_ILaunchActivatedEventArgs {
    public func get_Arguments() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Arguments(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_TileId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TileId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs2

public func uuidof(_: SWRT_WindowsApplicationModelActivation_ILaunchActivatedEventArgs2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0FD37EBC, 0x9DC9, 0x46B5, 0x9ACE, 0xBD95D4565345)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_ILaunchActivatedEventArgs2 {
    public func get_TileActivatedInfo() throws -> WindowsApplicationModelActivation_TileActivatedInfo? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelActivation_ITileActivatedInfo>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TileActivatedInfo(this, &_result))
        return WindowsApplicationModelActivation_TileActivatedInfoBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs

public func uuidof(_: SWRT_WindowsApplicationModelActivation_IPrelaunchActivatedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0C44717B, 0x19F7, 0x48D6, 0xB046, 0xCF22826EAA74)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_IPrelaunchActivatedEventArgs {
    public func get_PrelaunchActivated() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PrelaunchActivated(this, &_result))
        return _result
    }
}

// MARK: Windows.ApplicationModel.Activation.ISplashScreen

public func uuidof(_: SWRT_WindowsApplicationModelActivation_ISplashScreen.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCA4D975C, 0xD4D6, 0x43F0, 0x97C0, 0x0833C6391C24)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_ISplashScreen {
    public func get_ImageLocation() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ImageLocation(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func add_Dismissed(_ handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelActivation_SplashScreen?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.SplashScreen_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.SplashScreen_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Dismissed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Dismissed(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Dismissed(this, cookie_abi))
    }
}

// MARK: Windows.ApplicationModel.Activation.ITileActivatedInfo

public func uuidof(_: SWRT_WindowsApplicationModelActivation_ITileActivatedInfo.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x80E4A3B1, 0x3980, 0x4F17, 0xB738, 0x89194E0B8F65)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_ITileActivatedInfo {
    public func get_RecentlyShownNotifications() throws -> WindowsFoundationCollections_IVectorView<WindowsUINotifications_ShownTileNotification?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsUINotifications_ShownTileNotification>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RecentlyShownNotifications(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.ShownTileNotification.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.Activation.IViewSwitcherProvider

public func uuidof(_: SWRT_WindowsApplicationModelActivation_IViewSwitcherProvider.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x33F288A6, 0x5C2C, 0x4D27, 0xBAC7, 0x7536088F1219)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelActivation_IViewSwitcherProvider {
    public func get_ViewSwitcher() throws -> WindowsUIViewManagement_ActivationViewSwitcher? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIViewManagement_IActivationViewSwitcher>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ViewSwitcher(this, &_result))
        return WindowsUIViewManagement_ActivationViewSwitcherBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataProviderHandler

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_DataProviderHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE7ECD720, 0xF2F4, 0x4A2D, 0x920E, 0x170A2F482A27)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_DataProviderHandler {
    public func invoke(_ request: WindowsApplicationModelDataTransfer_DataProviderRequest?) throws {
        var request_abi = try WindowsApplicationModelDataTransfer_DataProviderRequestBinding.toABI(request)
        defer { WindowsApplicationModelDataTransfer_DataProviderRequestBinding.release(&request_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, request_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackage

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackage.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x61EBF5C7, 0xEFEA, 0x4346, 0x9554, 0x981D7E198FFE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackage {
    public func getView() throws -> WindowsApplicationModelDataTransfer_DataPackageView? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IDataPackageView>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsApplicationModelDataTransfer_DataPackageViewBinding.fromABI(consuming: &_result)
    }

    public func get_Properties() throws -> WindowsApplicationModelDataTransfer_DataPackagePropertySet? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Properties(this, &_result))
        return WindowsApplicationModelDataTransfer_DataPackagePropertySetBinding.fromABI(consuming: &_result)
    }

    public func get_RequestedOperation() throws -> WindowsApplicationModelDataTransfer_DataPackageOperation {
        var _result: SWRT_WindowsApplicationModelDataTransfer_DataPackageOperation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RequestedOperation(this, &_result))
        return WindowsApplicationModelDataTransfer_DataPackageOperation.fromABI(_result)
    }

    public func put_RequestedOperation(_ value: WindowsApplicationModelDataTransfer_DataPackageOperation) throws {
        let value_abi = WindowsApplicationModelDataTransfer_DataPackageOperation.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RequestedOperation(this, value_abi))
    }

    public func add_OperationCompleted(_ handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelDataTransfer_DataPackage?, WindowsApplicationModelDataTransfer_OperationCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DataPackage_OperationCompletedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DataPackage_OperationCompletedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_OperationCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_OperationCompleted(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_OperationCompleted(this, token_abi))
    }

    public func add_Destroyed(_ handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelDataTransfer_DataPackage?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DataPackage_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DataPackage_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Destroyed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Destroyed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Destroyed(this, token_abi))
    }

    public func setData(_ formatId: Swift.String, _ value: WindowsRuntime.IInspectable?) throws {
        var formatId_abi = try WindowsRuntime.StringBinding.toABI(formatId)
        defer { WindowsRuntime.StringBinding.release(&formatId_abi) }
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetData(this, formatId_abi, value_abi))
    }

    public func setDataProvider(_ formatId: Swift.String, _ delayRenderer: WindowsApplicationModelDataTransfer_DataProviderHandler?) throws {
        var formatId_abi = try WindowsRuntime.StringBinding.toABI(formatId)
        defer { WindowsRuntime.StringBinding.release(&formatId_abi) }
        var delayRenderer_abi = try WindowsApplicationModelDataTransfer_DataProviderHandlerBinding.toABI(delayRenderer)
        defer { WindowsApplicationModelDataTransfer_DataProviderHandlerBinding.release(&delayRenderer_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetDataProvider(this, formatId_abi, delayRenderer_abi))
    }

    public func setText(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetText(this, value_abi))
    }

    public func setUri(_ value: WindowsFoundation_Uri?) throws {
        var value_abi = try WindowsFoundation_UriBinding.toABI(value)
        defer { WindowsFoundation_UriBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetUri(this, value_abi))
    }

    public func setHtmlFormat(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetHtmlFormat(this, value_abi))
    }

    public func get_ResourceMap() throws -> WindowsFoundationCollections_IMap<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMap_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ResourceMap(this, &_result))
        return WindowsFoundationCollections_IMapBinding.String_RandomAccessStreamReference.fromABI(consuming: &_result)
    }

    public func setRtf(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetRtf(this, value_abi))
    }

    public func setBitmap(_ value: WindowsStorageStreams_RandomAccessStreamReference?) throws {
        var value_abi = try WindowsStorageStreams_RandomAccessStreamReferenceBinding.toABI(value)
        defer { WindowsStorageStreams_RandomAccessStreamReferenceBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetBitmap(this, value_abi))
    }

    public func setStorageItemsReadOnly(_ value: WindowsFoundationCollections_IIterable<WindowsStorage_IStorageItem?>?) throws {
        var value_abi = try WindowsFoundationCollections_IIterableBinding.IStorageItem.toABI(value)
        defer { WindowsFoundationCollections_IIterableBinding.IStorageItem.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetStorageItemsReadOnly(this, value_abi))
    }

    public func setStorageItems(_ value: WindowsFoundationCollections_IIterable<WindowsStorage_IStorageItem?>?, _ readOnly: Swift.Bool) throws {
        var value_abi = try WindowsFoundationCollections_IIterableBinding.IStorageItem.toABI(value)
        defer { WindowsFoundationCollections_IIterableBinding.IStorageItem.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetStorageItems(this, value_abi, readOnly))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackage2

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackage2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x041C1FE9, 0x2409, 0x45E1, 0xA538, 0x4C53EEEE04A7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackage2 {
    public func setApplicationLink(_ value: WindowsFoundation_Uri?) throws {
        var value_abi = try WindowsFoundation_UriBinding.toABI(value)
        defer { WindowsFoundation_UriBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetApplicationLink(this, value_abi))
    }

    public func setWebLink(_ value: WindowsFoundation_Uri?) throws {
        var value_abi = try WindowsFoundation_UriBinding.toABI(value)
        defer { WindowsFoundation_UriBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetWebLink(this, value_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackage3

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackage3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x88F31F5D, 0x787B, 0x4D32, 0x965A, 0xA9838105A056)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackage3 {
    public func add_ShareCompleted(_ handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelDataTransfer_DataPackage?, WindowsApplicationModelDataTransfer_ShareCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DataPackage_ShareCompletedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DataPackage_ShareCompletedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ShareCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ShareCompleted(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ShareCompleted(this, token_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackage4

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackage4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x13A24EC8, 0x9382, 0x536F, 0x852A, 0x3045E1B29A3B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackage4 {
    public func add_ShareCanceled(_ handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelDataTransfer_DataPackage?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DataPackage_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DataPackage_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ShareCanceled(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ShareCanceled(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ShareCanceled(this, token_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCD1C93EB, 0x4C4C, 0x443A, 0xA8D3, 0xF5C241E91689)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet {
    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Title(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Title(this, value_abi))
    }

    public func get_Description() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Description(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Description(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Description(this, value_abi))
    }

    public func get_Thumbnail() throws -> WindowsStorageStreams_IRandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Thumbnail(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    public func put_Thumbnail(_ value: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        var value_abi = try WindowsStorageStreams_IRandomAccessStreamReferenceBinding.toABI(value)
        defer { WindowsStorageStreams_IRandomAccessStreamReferenceBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Thumbnail(this, value_abi))
    }

    public func get_FileTypes() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FileTypes(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_ApplicationName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ApplicationName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_ApplicationName(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ApplicationName(this, value_abi))
    }

    public func get_ApplicationListingUri() throws -> WindowsFoundation_Uri? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ApplicationListingUri(this, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }

    public func put_ApplicationListingUri(_ value: WindowsFoundation_Uri?) throws {
        var value_abi = try WindowsFoundation_UriBinding.toABI(value)
        defer { WindowsFoundation_UriBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ApplicationListingUri(this, value_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet2

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEB505D4A, 0x9800, 0x46AA, 0xB181, 0x7B6F0F2B919A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet2 {
    public func get_ContentSourceWebLink() throws -> WindowsFoundation_Uri? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentSourceWebLink(this, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }

    public func put_ContentSourceWebLink(_ value: WindowsFoundation_Uri?) throws {
        var value_abi = try WindowsFoundation_UriBinding.toABI(value)
        defer { WindowsFoundation_UriBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ContentSourceWebLink(this, value_abi))
    }

    public func get_ContentSourceApplicationLink() throws -> WindowsFoundation_Uri? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentSourceApplicationLink(this, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }

    public func put_ContentSourceApplicationLink(_ value: WindowsFoundation_Uri?) throws {
        var value_abi = try WindowsFoundation_UriBinding.toABI(value)
        defer { WindowsFoundation_UriBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ContentSourceApplicationLink(this, value_abi))
    }

    public func get_PackageFamilyName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PackageFamilyName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_PackageFamilyName(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_PackageFamilyName(this, value_abi))
    }

    public func get_Square30x30Logo() throws -> WindowsStorageStreams_IRandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Square30x30Logo(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    public func put_Square30x30Logo(_ value: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        var value_abi = try WindowsStorageStreams_IRandomAccessStreamReferenceBinding.toABI(value)
        defer { WindowsStorageStreams_IRandomAccessStreamReferenceBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Square30x30Logo(this, value_abi))
    }

    public func get_LogoBackgroundColor() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LogoBackgroundColor(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_LogoBackgroundColor(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LogoBackgroundColor(this, value_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet3

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9E87FD9B, 0x5205, 0x401B, 0x874A, 0x455653BD39E8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet3 {
    public func get_EnterpriseId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EnterpriseId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_EnterpriseId(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_EnterpriseId(this, value_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet4

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6390EBF5, 0x1739, 0x4C74, 0xB22F, 0x865FAB5E8545)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet4 {
    public func get_ContentSourceUserActivityJson() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentSourceUserActivityJson(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_ContentSourceUserActivityJson(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ContentSourceUserActivityJson(this, value_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB94CEC01, 0x0C1A, 0x4C57, 0xBE55, 0x75D01289735D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView {
    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Description() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Description(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Thumbnail() throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Thumbnail(this, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    public func get_FileTypes() throws -> WindowsFoundationCollections_IVectorView<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FileTypes(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.String.fromABI(consuming: &_result)
    }

    public func get_ApplicationName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ApplicationName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_ApplicationListingUri() throws -> WindowsFoundation_Uri? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ApplicationListingUri(this, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView2

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6054509B, 0x8EBE, 0x4FEB, 0x9C1E, 0x75E69DE54B84)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView2 {
    public func get_PackageFamilyName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PackageFamilyName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_ContentSourceWebLink() throws -> WindowsFoundation_Uri? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentSourceWebLink(this, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }

    public func get_ContentSourceApplicationLink() throws -> WindowsFoundation_Uri? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentSourceApplicationLink(this, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }

    public func get_Square30x30Logo() throws -> WindowsStorageStreams_IRandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Square30x30Logo(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    public func get_LogoBackgroundColor() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LogoBackgroundColor(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView3

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDB764CE5, 0xD174, 0x495C, 0x84FC, 0x1A51F6AB45D7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView3 {
    public func get_EnterpriseId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EnterpriseId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView4

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4474C80D, 0xD16F, 0x40AE, 0x9580, 0x6F8562B94235)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView4 {
    public func get_ContentSourceUserActivityJson() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentSourceUserActivityJson(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySetView5

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView5.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6F0A9445, 0x3760, 0x50BB, 0x8523, 0xC4202DED7D78)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView5 {
    public func get_IsFromRoamingClipboard() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsFromRoamingClipboard(this, &_result))
        return _result
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackageView

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackageView.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7B840471, 0x5900, 0x4D85, 0xA90B, 0x10CB85FE3552)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackageView {
    public func get_Properties() throws -> WindowsApplicationModelDataTransfer_DataPackagePropertySetView? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySetView>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Properties(this, &_result))
        return WindowsApplicationModelDataTransfer_DataPackagePropertySetViewBinding.fromABI(consuming: &_result)
    }

    public func get_RequestedOperation() throws -> WindowsApplicationModelDataTransfer_DataPackageOperation {
        var _result: SWRT_WindowsApplicationModelDataTransfer_DataPackageOperation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RequestedOperation(this, &_result))
        return WindowsApplicationModelDataTransfer_DataPackageOperation.fromABI(_result)
    }

    public func reportOperationCompleted(_ value: WindowsApplicationModelDataTransfer_DataPackageOperation) throws {
        let value_abi = WindowsApplicationModelDataTransfer_DataPackageOperation.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReportOperationCompleted(this, value_abi))
    }

    public func get_AvailableFormats() throws -> WindowsFoundationCollections_IVectorView<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AvailableFormats(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.String.fromABI(consuming: &_result)
    }

    public func contains(_ formatId: Swift.String) throws -> Swift.Bool {
        var formatId_abi = try WindowsRuntime.StringBinding.toABI(formatId)
        defer { WindowsRuntime.StringBinding.release(&formatId_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Contains(this, formatId_abi, &_result))
        return _result
    }

    public func getDataAsync(_ formatId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsRuntime.IInspectable?>? {
        var formatId_abi = try WindowsRuntime.StringBinding.toABI(formatId)
        defer { WindowsRuntime.StringBinding.release(&formatId_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDataAsync(this, formatId_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Object.fromABI(consuming: &_result)
    }

    public func getTextAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetTextAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.String.fromABI(consuming: &_result)
    }

    public func getCustomTextAsync(_ formatId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<Swift.String>? {
        var formatId_abi = try WindowsRuntime.StringBinding.toABI(formatId)
        defer { WindowsRuntime.StringBinding.release(&formatId_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetCustomTextAsync(this, formatId_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.String.fromABI(consuming: &_result)
    }

    public func getUriAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundation_Uri?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundation_Uri>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUriAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Uri.fromABI(consuming: &_result)
    }

    public func getHtmlFormatAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetHtmlFormatAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.String.fromABI(consuming: &_result)
    }

    public func getResourceMapAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResourceMapAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IMapView_String_RandomAccessStreamReference.fromABI(consuming: &_result)
    }

    public func getRtfAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetRtfAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.String.fromABI(consuming: &_result)
    }

    public func getBitmapAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_RandomAccessStreamReference?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetBitmapAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.RandomAccessStreamReference.fromABI(consuming: &_result)
    }

    public func getStorageItemsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetStorageItemsAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_IStorageItem.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackageView2

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackageView2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x40ECBA95, 0x2450, 0x4C1D, 0xB6B4, 0xED45463DEE9C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackageView2 {
    public func getApplicationLinkAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundation_Uri?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundation_Uri>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetApplicationLinkAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Uri.fromABI(consuming: &_result)
    }

    public func getWebLinkAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundation_Uri?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundation_Uri>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetWebLinkAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Uri.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackageView3

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackageView3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD37771A8, 0xDDAD, 0x4288, 0x8428, 0xD1CAE394128B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackageView3 {
    public func requestAccessAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RequestAccessAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.ProtectionPolicyEvaluationResult.fromABI(consuming: &_result)
    }

    public func requestAccessWithEnterpriseIdAsync(_ enterpriseId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>? {
        var enterpriseId_abi = try WindowsRuntime.StringBinding.toABI(enterpriseId)
        defer { WindowsRuntime.StringBinding.release(&enterpriseId_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RequestAccessWithEnterpriseIdAsync(this, enterpriseId_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.ProtectionPolicyEvaluationResult.fromABI(consuming: &_result)
    }

    public func unlockAndAssumeEnterpriseIdentity() throws -> WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult {
        var _result: SWRT_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.UnlockAndAssumeEnterpriseIdentity(this, &_result))
        return WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult.fromABI(_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataPackageView4

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataPackageView4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDFE96F1F, 0xE042, 0x4433, 0xA09F, 0x26D6FFDA8B85)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataPackageView4 {
    public func setAcceptedFormatId(_ formatId: Swift.String) throws {
        var formatId_abi = try WindowsRuntime.StringBinding.toABI(formatId)
        defer { WindowsRuntime.StringBinding.release(&formatId_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAcceptedFormatId(this, formatId_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataProviderDeferral

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataProviderDeferral.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC2CF2373, 0x2D26, 0x43D9, 0xB69D, 0xDCB86D03F6DA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataProviderDeferral {
    public func complete() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Complete(this))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IDataProviderRequest

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IDataProviderRequest.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEBBC7157, 0xD3C8, 0x47DA, 0xACDE, 0xF82388D5F716)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IDataProviderRequest {
    public func get_FormatId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FormatId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Deadline() throws -> WindowsFoundation_DateTime {
        var _result: SWRT_WindowsFoundation_DateTime = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Deadline(this, &_result))
        return WindowsFoundation_DateTime.fromABI(_result)
    }

    public func getDeferral() throws -> WindowsApplicationModelDataTransfer_DataProviderDeferral? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IDataProviderDeferral>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDeferral(this, &_result))
        return WindowsApplicationModelDataTransfer_DataProviderDeferralBinding.fromABI(consuming: &_result)
    }

    public func setData(_ value: WindowsRuntime.IInspectable?) throws {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetData(this, value_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IOperationCompletedEventArgs

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE7AF329D, 0x051D, 0x4FAB, 0xB1A9, 0x47FD77F70A41)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs {
    public func get_Operation() throws -> WindowsApplicationModelDataTransfer_DataPackageOperation {
        var _result: SWRT_WindowsApplicationModelDataTransfer_DataPackageOperation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Operation(this, &_result))
        return WindowsApplicationModelDataTransfer_DataPackageOperation.fromABI(_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IOperationCompletedEventArgs2

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x858FA073, 0x1E19, 0x4105, 0xB2F7, 0xC8478808D562)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs2 {
    public func get_AcceptedFormatId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AcceptedFormatId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IShareCompletedEventArgs

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IShareCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4574C442, 0xF913, 0x4F60, 0x9DF7, 0xCC4060AB1916)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IShareCompletedEventArgs {
    public func get_ShareTarget() throws -> WindowsApplicationModelDataTransfer_ShareTargetInfo? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IShareTargetInfo>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ShareTarget(this, &_result))
        return WindowsApplicationModelDataTransfer_ShareTargetInfoBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IShareProvider

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IShareProvider.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2FABE026, 0x443E, 0x4CDA, 0xAF25, 0x8D81070EFD80)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IShareProvider {
    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_DisplayIcon() throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayIcon(this, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    public func get_BackgroundColor() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BackgroundColor(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func get_Tag() throws -> WindowsRuntime.IInspectable? {
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Tag(this, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func put_Tag(_ value: WindowsRuntime.IInspectable?) throws {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Tag(this, value_abi))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IShareProviderFactory

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IShareProviderFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x172A174C, 0xE79E, 0x4F6D, 0xB07D, 0x128F469E0296)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IShareProviderFactory {
    public func create(_ title: Swift.String, _ displayIcon: WindowsStorageStreams_RandomAccessStreamReference?, _ backgroundColor: WindowsUI_Color, _ handler: WindowsApplicationModelDataTransfer_ShareProviderHandler?) throws -> COM.COMReference<SWRT_WindowsApplicationModelDataTransfer_IShareProvider> {
        var title_abi = try WindowsRuntime.StringBinding.toABI(title)
        defer { WindowsRuntime.StringBinding.release(&title_abi) }
        var displayIcon_abi = try WindowsStorageStreams_RandomAccessStreamReferenceBinding.toABI(displayIcon)
        defer { WindowsStorageStreams_RandomAccessStreamReferenceBinding.release(&displayIcon_abi) }
        let backgroundColor_abi = WindowsUI_Color.toABI(backgroundColor)
        var handler_abi = try WindowsApplicationModelDataTransfer_ShareProviderHandlerBinding.toABI(handler)
        defer { WindowsApplicationModelDataTransfer_ShareProviderHandlerBinding.release(&handler_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IShareProvider>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Create(this, title_abi, displayIcon_abi, backgroundColor_abi, handler_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IShareProviderOperation

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IShareProviderOperation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x19CEF937, 0xD435, 0x4179, 0xB6AF, 0x14E0492B69F6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IShareProviderOperation {
    public func get_Data() throws -> WindowsApplicationModelDataTransfer_DataPackageView? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IDataPackageView>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Data(this, &_result))
        return WindowsApplicationModelDataTransfer_DataPackageViewBinding.fromABI(consuming: &_result)
    }

    public func get_Provider() throws -> WindowsApplicationModelDataTransfer_ShareProvider? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IShareProvider>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Provider(this, &_result))
        return WindowsApplicationModelDataTransfer_ShareProviderBinding.fromABI(consuming: &_result)
    }

    public func reportCompleted() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReportCompleted(this))
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IShareTargetInfo

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_IShareTargetInfo.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x385BE607, 0xC6E8, 0x4114, 0xB294, 0x28F3BB6F9904)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_IShareTargetInfo {
    public func get_AppUserModelId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AppUserModelId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_ShareProvider() throws -> WindowsApplicationModelDataTransfer_ShareProvider? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsApplicationModelDataTransfer_IShareProvider>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ShareProvider(this, &_result))
        return WindowsApplicationModelDataTransfer_ShareProviderBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.ApplicationModel.DataTransfer.IShareProviderHandler

public func uuidof(_: SWRT_WindowsApplicationModelDataTransfer_ShareProviderHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE7F9D9BA, 0xE1BA, 0x4E4D, 0xBD65, 0xD43845D3212F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsApplicationModelDataTransfer_ShareProviderHandler {
    public func invoke(_ operation: WindowsApplicationModelDataTransfer_ShareProviderOperation?) throws {
        var operation_abi = try WindowsApplicationModelDataTransfer_ShareProviderOperationBinding.toABI(operation)
        defer { WindowsApplicationModelDataTransfer_ShareProviderOperationBinding.release(&operation_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, operation_abi))
    }
}

// MARK: Windows.Devices.Input.IPointerDevice

public func uuidof(_: SWRT_WindowsDevicesInput_IPointerDevice.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x93C9BAFC, 0xEBCB, 0x467E, 0x82C6, 0x276FEAE36B5A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsDevicesInput_IPointerDevice {
    public func get_PointerDeviceType() throws -> WindowsDevicesInput_PointerDeviceType {
        var _result: SWRT_WindowsDevicesInput_PointerDeviceType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerDeviceType(this, &_result))
        return WindowsDevicesInput_PointerDeviceType.fromABI(_result)
    }

    public func get_IsIntegrated() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsIntegrated(this, &_result))
        return _result
    }

    public func get_MaxContacts() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxContacts(this, &_result))
        return _result
    }

    public func get_PhysicalDeviceRect() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PhysicalDeviceRect(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func get_ScreenRect() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ScreenRect(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func get_SupportedUsages() throws -> WindowsFoundationCollections_IVectorView<WindowsDevicesInput_PointerDeviceUsage>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesInput_PointerDeviceUsage>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SupportedUsages(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.PointerDeviceUsage.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Devices.Input.IPointerDevice2

public func uuidof(_: SWRT_WindowsDevicesInput_IPointerDevice2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF8A6D2A0, 0xC484, 0x489F, 0xAE3E, 0x30D2EE1FFD3E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsDevicesInput_IPointerDevice2 {
    public func get_MaxPointersWithZDistance() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxPointersWithZDistance(this, &_result))
        return _result
    }
}

// MARK: Windows.Devices.Input.IPointerDeviceStatics

public func uuidof(_: SWRT_WindowsDevicesInput_IPointerDeviceStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD8B89AA1, 0xD1C6, 0x416E, 0xBD8D, 0x5790914DC563)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsDevicesInput_IPointerDeviceStatics {
    public func getPointerDevice(_ pointerId: Swift.UInt32) throws -> WindowsDevicesInput_PointerDevice? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsDevicesInput_IPointerDevice>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPointerDevice(this, pointerId, &_result))
        return WindowsDevicesInput_PointerDeviceBinding.fromABI(consuming: &_result)
    }

    public func getPointerDevices() throws -> WindowsFoundationCollections_IVectorView<WindowsDevicesInput_PointerDevice?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesInput_PointerDevice>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPointerDevices(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.PointerDevice.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncActionCompletedHandler

public func uuidof(_: SWRT_WindowsFoundation_AsyncActionCompletedHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA4ED5C81, 0x76C9, 0x40BD, 0x8BE6, 0xB1D90FB20AE7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncActionCompletedHandler {
    public func invoke(_ asyncInfo: WindowsFoundation_IAsyncAction?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncActionBinding.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncActionBinding.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.FileProperties.ImageProperties>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_ImageProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC63729BC, 0xE4C3, 0x564C, 0xB137, 0x2CB4F5966A83)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_ImageProperties {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_ImageProperties?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.ImageProperties.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.ImageProperties.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.StorageFile>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE521C894, 0x2C26, 0x5946, 0x9E61, 0x2B5E188D01ED)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageFile {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.StorageFile.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.StorageFile.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IRandomAccessStream>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStream.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x398C4183, 0x793D, 0x5B00, 0x819B, 0x4AEF92485E94)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStream {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStream?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IRandomAccessStream.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IRandomAccessStream.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.IStorageItem>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x92C3102F, 0xA327, 0x5318, 0xA6C1, 0x76F6B2A0ABFB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_IStorageItem {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IStorageItem.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IStorageItem.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IRandomAccessStreamWithContentType>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStreamWithContentType.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3DDDECF4, 0x1D39, 0x58E8, 0x83B1, 0xDBED541C7F35)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStreamWithContentType {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamWithContentType?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IRandomAccessStreamWithContentType.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IRandomAccessStreamWithContentType.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<String>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB79A741F, 0x7FB5, 0x50AE, 0x9E99, 0x911201EC3D41)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_String {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<Swift.String>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.String.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.String.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Boolean>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_Bool.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC1D3D1A2, 0xAE17, 0x5A5F, 0xB5A2, 0xBDCC8844889A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_Bool {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<Swift.Bool>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.Boolean.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.Boolean.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageFolder>>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xED2D1D9B, 0x26EC, 0x5BE7, 0xA8A3, 0x56458933D25F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFolder.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFolder.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IVectorView<Windows.System.User>>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsSystem_User.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x09870533, 0xF7CB, 0x569C, 0xB797, 0xDCB48DEBD709)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsSystem_User {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IVectorView_User.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IVectorView_User.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Uri>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundation_Uri.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAD46F1CC, 0x2BB0, 0x585C, 0x9885, 0x03C2780D4D58)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundation_Uri {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundation_Uri?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.Uri.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.Uri.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IInputStream>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IInputStream.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD0BD0125, 0x9049, 0x57A3, 0xBD66, 0xE2525D98C814)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IInputStream {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IInputStream?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IInputStream.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IInputStream.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IMap<String, Object>>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IMap_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7344F356, 0x8399, 0x5756, 0xA2F8, 0xABD50C4146FF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IMap_String_IInspectable {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?>?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IMap_String_Object.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IMap_String_Object.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9343B6E7, 0xE3D2, 0x5E4A, 0xAB2D, 0x2BCE4919A6A4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_UInt32 {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<Swift.UInt32>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.UInt32.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.UInt32.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IPropertySet>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IPropertySet.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5075A55F, 0x68BA, 0x56F2, 0x97E6, 0x9B1CBFA2C5F2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IPropertySet {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IPropertySet?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IPropertySet.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IPropertySet.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageLibraryChange>>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAB9CEA41, 0x6DF8, 0x535D, 0x8171, 0x46AFF187158F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageLibraryChange?>?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageLibraryChange.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageLibraryChange.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IRandomAccessStreamReference>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60847289, 0xEA0B, 0x5DF6, 0x89DF, 0xF2C62CBA9693)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStreamReference {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamReference?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IRandomAccessStreamReference.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IRandomAccessStreamReference.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.FileProperties.VideoProperties>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_VideoProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x43401D34, 0x61AB, 0x5CF2, 0x921F, 0x55B616631D1D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_VideoProperties {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_VideoProperties?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.VideoProperties.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.VideoProperties.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.FileProperties.StorageItemThumbnail>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_StorageItemThumbnail.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6D0036F2, 0xA8A8, 0x505D, 0xB042, 0xD087DC1FC1B7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_StorageItemThumbnail {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Search.IndexedState>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageSearch_IndexedState.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB67A3CBA, 0xF5F7, 0x5E51, 0x968A, 0x385126D1F918)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageSearch_IndexedState {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageSearch_IndexedState>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IndexedState.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IndexedState.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Graphics.Imaging.SoftwareBitmap>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsGraphicsImaging_SoftwareBitmap.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB699B653, 0x33ED, 0x5E2D, 0xA75F, 0x02BF90E32619)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsGraphicsImaging_SoftwareBitmap {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsGraphicsImaging_SoftwareBitmap?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.SoftwareBitmap.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.SoftwareBitmap.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.RandomAccessStreamReference>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3D203732, 0xDED7, 0x5D32, 0x87E6, 0xC179781F791F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_RandomAccessStreamReference {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageStreams_RandomAccessStreamReference?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.RandomAccessStreamReference.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.RandomAccessStreamReference.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.FileProperties.MusicProperties>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_MusicProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD84E1312, 0xD661, 0x5B7F, 0x9566, 0x7421BDEDC1EA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_MusicProperties {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_MusicProperties?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.MusicProperties.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.MusicProperties.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IMapView<String, Windows.Storage.Streams.RandomAccessStreamReference>>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD4CB6B80, 0x821A, 0x5A7B, 0x898D, 0xD58917B31A36)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IMapView_String_RandomAccessStreamReference.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IMapView_String_RandomAccessStreamReference.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.FileProperties.BasicProperties>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_BasicProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC8659AAE, 0x4926, 0x52AD, 0x8F60, 0xD89FE5A8DF5F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_BasicProperties {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_BasicProperties?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.BasicProperties.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.BasicProperties.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2833BA54, 0xA4E1, 0x5C2D, 0x8A7A, 0x136E8510C78B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.ProtectionPolicyEvaluationResult.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.ProtectionPolicyEvaluationResult.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.StorageFolder>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC211026E, 0x9E63, 0x5452, 0xBA54, 0x3A07D6A96874)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageFolder {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.StorageFolder.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.StorageFolder.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Object>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3F08262E, 0xA2E1, 0x5134, 0x9297, 0xE9211F481A2D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_IInspectable {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsRuntime.IInspectable?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.Object.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.Object.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IVectorView<Windows.Storage.IStorageItem>>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x51436E75, 0xACE1, 0x5A68, 0xB260, 0xF843B846F0DB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IVectorView_IStorageItem.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IVectorView_IStorageItem.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.StorageStreamTransaction>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageStreamTransaction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD11739E6, 0x2995, 0x5D33, 0xBFFF, 0x51B6041F68C1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageStreamTransaction {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorage_StorageStreamTransaction?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.StorageStreamTransaction.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.StorageStreamTransaction.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.FileProperties.DocumentProperties>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_DocumentProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4452ED4C, 0x642B, 0x501B, 0x9617, 0x7D68B4AC3C66)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_DocumentProperties {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_DocumentProperties?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.DocumentProperties.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.DocumentProperties.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationCompletedHandler<Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageFile>>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCB4206C5, 0x0988, 0x5104, 0xAFA9, 0x253C298F86FD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFile.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFile.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationProgressHandler<UInt32, UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationProgressHandler_UInt32_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEA0FE405, 0xD432, 0x5AC7, 0x9EF8, 0x5A65E1F97D7E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationProgressHandler_UInt32_UInt32 {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperationWithProgress<Swift.UInt32, Swift.UInt32>?, _ progressInfo: Swift.UInt32) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationWithProgressBinding.UInt32_UInt32.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationWithProgressBinding.UInt32_UInt32.release(&asyncInfo_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, progressInfo))
    }
}

// MARK: Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer, UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationProgressHandler_WindowsStorageStreams_IBuffer_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBF666554, 0x7605, 0x5D9A, 0xB14E, 0x18D8C8472AFE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationProgressHandler_WindowsStorageStreams_IBuffer_UInt32 {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IBuffer?, Swift.UInt32>?, _ progressInfo: Swift.UInt32) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationWithProgressBinding.IBuffer_UInt32.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationWithProgressBinding.IBuffer_UInt32.release(&asyncInfo_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, progressInfo))
    }
}

// MARK: Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer, UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_WindowsStorageStreams_IBuffer_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x06386A7A, 0xE009, 0x5B0B, 0xAB68, 0xA8E48B516647)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_WindowsStorageStreams_IBuffer_UInt32 {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IBuffer?, Swift.UInt32>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationWithProgressBinding.IBuffer_UInt32.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationWithProgressBinding.IBuffer_UInt32.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.AsyncOperationWithProgressCompletedHandler<UInt32, UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_UInt32_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1E466DC5, 0x840F, 0x54F9, 0xB877, 0x5E3A9F4B6C74)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_UInt32_UInt32 {
    internal func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperationWithProgress<Swift.UInt32, Swift.UInt32>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
        var asyncInfo_abi = try WindowsFoundation_IAsyncOperationWithProgressBinding.UInt32_UInt32.toABI(asyncInfo)
        defer { WindowsFoundation_IAsyncOperationWithProgressBinding.UInt32_UInt32.release(&asyncInfo_abi) }
        let asyncStatus_abi = WindowsFoundation_AsyncStatus.toABI(asyncStatus)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, asyncInfo_abi, asyncStatus_abi))
    }
}

// MARK: Windows.Foundation.IDeferralCompletedHandler

public func uuidof(_: SWRT_WindowsFoundation_DeferralCompletedHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xED32A372, 0xF3C8, 0x4FAA, 0x9CFB, 0x470148DA3888)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_DeferralCompletedHandler {
    public func invoke() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this))
    }
}

// MARK: Windows.Foundation.IAsyncAction

public func uuidof(_: SWRT_WindowsFoundation_IAsyncAction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5A648006, 0x843A, 0x4DA9, 0x865B, 0x9D26E5DFAD7B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncAction {
    public func put_Completed(_ handler: WindowsFoundation_AsyncActionCompletedHandler?) throws {
        var handler_abi = try WindowsFoundation_AsyncActionCompletedHandlerBinding.toABI(handler)
        defer { WindowsFoundation_AsyncActionCompletedHandlerBinding.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    public func get_Completed() throws -> WindowsFoundation_AsyncActionCompletedHandler? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncActionCompletedHandler>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncActionCompletedHandlerBinding.fromABI(consuming: &_result)
    }

    public func getResults() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this))
    }
}

// MARK: Windows.Foundation.IAsyncInfo

public func uuidof(_: SWRT_WindowsFoundation_IAsyncInfo.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x00000036, 0x0000, 0x0000, 0xC000, 0x000000000046)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncInfo {
    public func get_Id() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Id(this, &_result))
        return _result
    }

    public func get_Status() throws -> WindowsFoundation_AsyncStatus {
        var _result: SWRT_WindowsFoundation_AsyncStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Status(this, &_result))
        return WindowsFoundation_AsyncStatus.fromABI(_result)
    }

    public func get_ErrorCode() throws -> COM.HResult {
        var _result: SWRT_HResult = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ErrorCode(this, &_result))
        return COM.HResultBinding.fromABI(_result)
    }

    public func cancel() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Cancel(this))
    }

    public func close() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Close(this))
    }
}

// MARK: Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer, UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperationWithProgress_WindowsStorageStreams_IBuffer_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD26B2819, 0x897F, 0x5C7D, 0x84D6, 0x56D796561431)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperationWithProgress_WindowsStorageStreams_IBuffer_UInt32 {
    internal func put_Progress(_ handler: WindowsFoundation_AsyncOperationProgressHandler<WindowsStorageStreams_IBuffer?, Swift.UInt32>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationProgressHandlerBinding.IBuffer_UInt32.toABI(handler)
        defer { WindowsFoundation_AsyncOperationProgressHandlerBinding.IBuffer_UInt32.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Progress(this, handler_abi))
    }

    internal func get_Progress() throws -> WindowsFoundation_AsyncOperationProgressHandler<WindowsStorageStreams_IBuffer?, Swift.UInt32>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationProgressHandler_WindowsStorageStreams_IBuffer_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Progress(this, &_result))
        return WindowsFoundation_AsyncOperationProgressHandlerBinding.IBuffer_UInt32.fromABI(consuming: &_result)
    }

    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationWithProgressCompletedHandler<WindowsStorageStreams_IBuffer?, Swift.UInt32>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding.IBuffer_UInt32.toABI(handler)
        defer { WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding.IBuffer_UInt32.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationWithProgressCompletedHandler<WindowsStorageStreams_IBuffer?, Swift.UInt32>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_WindowsStorageStreams_IBuffer_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding.IBuffer_UInt32.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageStreams_IBuffer? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IBuffer>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageStreams_IBufferBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperationWithProgress<UInt32, UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperationWithProgress_UInt32_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xECCB574A, 0xC684, 0x5572, 0xA679, 0x6B0842CFB57F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperationWithProgress_UInt32_UInt32 {
    internal func put_Progress(_ handler: WindowsFoundation_AsyncOperationProgressHandler<Swift.UInt32, Swift.UInt32>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationProgressHandlerBinding.UInt32_UInt32.toABI(handler)
        defer { WindowsFoundation_AsyncOperationProgressHandlerBinding.UInt32_UInt32.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Progress(this, handler_abi))
    }

    internal func get_Progress() throws -> WindowsFoundation_AsyncOperationProgressHandler<Swift.UInt32, Swift.UInt32>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationProgressHandler_UInt32_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Progress(this, &_result))
        return WindowsFoundation_AsyncOperationProgressHandlerBinding.UInt32_UInt32.fromABI(consuming: &_result)
    }

    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationWithProgressCompletedHandler<Swift.UInt32, Swift.UInt32>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding.UInt32_UInt32.toABI(handler)
        defer { WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding.UInt32_UInt32.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationWithProgressCompletedHandler<Swift.UInt32, Swift.UInt32>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_UInt32_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding.UInt32_UInt32.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStreamReference>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x65178D50, 0xE6A2, 0x5D16, 0xB244, 0x65E9725E5A0C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStreamReference {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IRandomAccessStreamReference?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStreamReference.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStreamReference.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IRandomAccessStreamReference?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStreamReference.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageStreams_IRandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.System.User>>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsSystem_User.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE44EA1DF, 0xBB85, 0x5A8C, 0xBDDC, 0xC8E960C355C9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsSystem_User {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_User.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_User.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsSystem_User>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_User.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IVectorView<WindowsSystem_User?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsSystem_User>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.User.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Graphics.Imaging.SoftwareBitmap>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsGraphicsImaging_SoftwareBitmap.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC4A10980, 0x714B, 0x5501, 0x8DA2, 0xDBDACCE70F73)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsGraphicsImaging_SoftwareBitmap {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsGraphicsImaging_SoftwareBitmap?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.SoftwareBitmap.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.SoftwareBitmap.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsGraphicsImaging_SoftwareBitmap?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsGraphicsImaging_SoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.SoftwareBitmap.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsGraphicsImaging_SoftwareBitmap? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsGraphicsImaging_SoftwareBitmapBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.MusicProperties>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_MusicProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0D023B76, 0x20A7, 0x56F3, 0x84AB, 0xCE31E6544B71)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_MusicProperties {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_MusicProperties?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.MusicProperties.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.MusicProperties.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_MusicProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_MusicProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.MusicProperties.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageFileProperties_MusicProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageFileProperties_IMusicProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageFileProperties_MusicPropertiesBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.StorageStreamTransaction>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageStreamTransaction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0D81405A, 0x9BD3, 0x5E87, 0x82F4, 0x9B4128A887EB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageStreamTransaction {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_StorageStreamTransaction?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageStreamTransaction.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageStreamTransaction.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_StorageStreamTransaction?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageStreamTransaction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageStreamTransaction.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorage_StorageStreamTransaction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageStreamTransaction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorage_StorageStreamTransactionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.StorageItemThumbnail>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x11C7CC5E, 0xC04E, 0x50E7, 0xA65E, 0x6F6903690C16)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_StorageItemThumbnail?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageItemThumbnail.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageItemThumbnail.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_StorageItemThumbnail?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_StorageItemThumbnail>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageItemThumbnail.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageFileProperties_StorageItemThumbnail? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamWithContentType>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageFileProperties_StorageItemThumbnailBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageFile>>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x03362E33, 0xE413, 0x5F29, 0x97D0, 0x48A4780935F9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageFile.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageFile.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageFile.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.StorageFile.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5E52F8CE, 0xACED, 0x5A42, 0x95B4, 0xF674DD84885E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_StorageFile?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageFile.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageFile.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_StorageFile?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageFile.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorage_StorageFile? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorage_StorageFileBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.RandomAccessStreamReference>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD90442CA, 0x543C, 0x504B, 0x9EB9, 0x294BCAD8A283)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_RandomAccessStreamReference {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_RandomAccessStreamReference?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.RandomAccessStreamReference.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.RandomAccessStreamReference.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_RandomAccessStreamReference?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.RandomAccessStreamReference.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.Search.IndexedState>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageSearch_IndexedState.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x88694B1F, 0xF380, 0x574D, 0x8A05, 0x4F67BD52CD11)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageSearch_IndexedState {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageSearch_IndexedState>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IndexedState.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IndexedState.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageSearch_IndexedState>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageSearch_IndexedState>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IndexedState.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageSearch_IndexedState {
        var _result: SWRT_WindowsStorageSearch_IndexedState = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageSearch_IndexedState.fromABI(_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageLibraryChange>>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x66E11B8A, 0x9003, 0x52C9, 0x84A8, 0xAE5CCEBE8CF9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageLibraryChange?>?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageLibraryChange.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageLibraryChange.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageLibraryChange?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageLibraryChange.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IVectorView<WindowsStorage_StorageLibraryChange?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.StorageLibraryChange.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStream.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x430ECECE, 0x1418, 0x5D19, 0x81B2, 0x5DDB381603CC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStream {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IRandomAccessStream?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStream.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStream.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IRandomAccessStream?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStream.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageStreams_IRandomAccessStream? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundation_Uri.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x641CB9DD, 0xA28D, 0x59E2, 0xB8DB, 0xA227EDA6CF2E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundation_Uri {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundation_Uri?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.Uri.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.Uri.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundation_Uri?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundation_Uri>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.Uri.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundation_Uri? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.BasicProperties>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_BasicProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5186131A, 0x4467, 0x504B, 0x977A, 0x0785A8230485)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_BasicProperties {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_BasicProperties?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.BasicProperties.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.BasicProperties.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_BasicProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_BasicProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.BasicProperties.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageFileProperties_BasicProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageFileProperties_IBasicProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageFileProperties_BasicPropertiesBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IPropertySet>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IPropertySet.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x490B0686, 0xAFD7, 0x5037, 0x9647, 0xD8FE248F182C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IPropertySet {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IPropertySet?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IPropertySet.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IPropertySet.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IPropertySet?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IPropertySet.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IPropertySet? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IPropertySetBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IMapView<String, Windows.Storage.Streams.RandomAccessStreamReference>>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFC012D44, 0x2DCF, 0x5162, 0xBE9A, 0x7668675AA590)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IMapView_String_RandomAccessStreamReference.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IMapView_String_RandomAccessStreamReference.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IMapView_String_RandomAccessStreamReference.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_RandomAccessStreamReference.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFolder>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6BE9E7D7, 0xE83A, 0x5CBC, 0x802C, 0x1768960B52C3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_StorageFolder?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageFolder.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageFolder.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_StorageFolder?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.StorageFolder.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorage_StorageFolder? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorage_StorageFolderBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStreamWithContentType>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStreamWithContentType.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC4A57C5E, 0x32B0, 0x55B3, 0xAD13, 0xCE1C23041ED6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStreamWithContentType {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IRandomAccessStreamWithContentType?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStreamWithContentType.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStreamWithContentType.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IRandomAccessStreamWithContentType?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IRandomAccessStreamWithContentType>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IRandomAccessStreamWithContentType.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageStreams_IRandomAccessStreamWithContentType? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamWithContentType>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamWithContentTypeBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IMap<String, Object>>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IMap_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x127E39C7, 0x07C1, 0x58E5, 0xB48E, 0x3A4729839FEC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IMap_String_IInspectable {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?>?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IMap_String_Object.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IMap_String_Object.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IMap_String_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IMap_String_Object.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMap_String_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IMapBinding.String_Object.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.VideoProperties>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_VideoProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x447D4590, 0xD3F9, 0x58BF, 0xAC58, 0x6F9A50839EFE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_VideoProperties {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_VideoProperties?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.VideoProperties.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.VideoProperties.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_VideoProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_VideoProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.VideoProperties.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageFileProperties_VideoProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageFileProperties_IVideoProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageFileProperties_VideoPropertiesBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.DocumentProperties>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_DocumentProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6C86E97C, 0x5699, 0x5700, 0x8D35, 0xD350AD3E4DF2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_DocumentProperties {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_DocumentProperties?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.DocumentProperties.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.DocumentProperties.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_DocumentProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_DocumentProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.DocumentProperties.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageFileProperties_DocumentProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageFileProperties_IDocumentProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageFileProperties_DocumentPropertiesBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Object>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xABF53C57, 0xEE50, 0x5342, 0xB52A, 0x26E3B8CC024F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_IInspectable {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsRuntime.IInspectable?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.Object.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.Object.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsRuntime.IInspectable?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.Object.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsRuntime.IInspectable? {
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Storage.IStorageItem>>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4B1C0FD7, 0x7A01, 0x5E7A, 0xA6FE, 0xBE4500283F23)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_IStorageItem.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_IStorageItem.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_IStorageItem.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.IStorageItem.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Boolean>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_Bool.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCDB5EFB3, 0x5788, 0x509D, 0x9BE1, 0x71CCB8A3362A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_Bool {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<Swift.Bool>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.Boolean.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.Boolean.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<Swift.Bool>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_Bool>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.Boolean.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.IAsyncOperation<String>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3E1FE603, 0xF897, 0x5263, 0xB328, 0x0806426B8A79)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_String {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<Swift.String>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.String.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.String.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.String.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IInputStream>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IInputStream.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA8FE0732, 0x556D, 0x5841, 0xB7EE, 0xB3450FB52666)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IInputStream {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IInputStream?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IInputStream.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IInputStream.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageStreams_IInputStream?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageStreams_IInputStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IInputStream.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageStreams_IInputStream? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IInputStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageStreams_IInputStreamBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.IStorageItem>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5FC9C137, 0xEBB7, 0x5E6C, 0x9CBA, 0x686F2EC2B0BB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_IStorageItem {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_IStorageItem?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IStorageItem.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IStorageItem.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorage_IStorageItem?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IStorageItem.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorage_IStorageItem? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorage_IStorageItemBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageFolder>>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCA40B21B, 0xAEB1, 0x5A61, 0x9E08, 0x3BD5D9594023)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageFolder.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageFolder.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.IVectorView_StorageFolder.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.StorageFolder.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE8D81715, 0xC56C, 0x5A6B, 0xB738, 0x5DF6C2775B7B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.ProtectionPolicyEvaluationResult.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.ProtectionPolicyEvaluationResult.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.ProtectionPolicyEvaluationResult.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult {
        var _result: SWRT_WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsSecurityEnterpriseData_ProtectionPolicyEvaluationResult.fromABI(_result)
    }
}

// MARK: Windows.Foundation.IAsyncOperation<UInt32>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_UInt32.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEF60385F, 0xBE78, 0x584B, 0xAAEF, 0x7829ADA2B0DE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_UInt32 {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<Swift.UInt32>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.UInt32.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.UInt32.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<Swift.UInt32>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.UInt32.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.ImageProperties>

internal func uuidof(_: SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_ImageProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFCD07511, 0xE7F8, 0x5BDA, 0x8C04, 0x795A639DAE8F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_ImageProperties {
    internal func put_Completed(_ handler: WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_ImageProperties?>?) throws {
        var handler_abi = try WindowsFoundation_AsyncOperationCompletedHandlerBinding.ImageProperties.toABI(handler)
        defer { WindowsFoundation_AsyncOperationCompletedHandlerBinding.ImageProperties.release(&handler_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Completed(this, handler_abi))
    }

    internal func get_Completed() throws -> WindowsFoundation_AsyncOperationCompletedHandler<WindowsStorageFileProperties_ImageProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_AsyncOperationCompletedHandler_WindowsStorageFileProperties_ImageProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Completed(this, &_result))
        return WindowsFoundation_AsyncOperationCompletedHandlerBinding.ImageProperties.fromABI(consuming: &_result)
    }

    internal func getResults() throws -> WindowsStorageFileProperties_ImageProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageFileProperties_IImageProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetResults(this, &_result))
        return WindowsStorageFileProperties_ImagePropertiesBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IClosable

public func uuidof(_: SWRT_WindowsFoundation_IClosable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x30D5A829, 0x7FA4, 0x4026, 0x83BB, 0xD75BAE4EA99E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IClosable {
    public func close() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Close(this))
    }
}

// MARK: Windows.Foundation.IDeferral

public func uuidof(_: SWRT_WindowsFoundation_IDeferral.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD6269732, 0x3B7F, 0x46A7, 0xB40B, 0x4FDCA2A2C693)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IDeferral {
    public func complete() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Complete(this))
    }
}

// MARK: Windows.Foundation.IDeferralFactory

public func uuidof(_: SWRT_WindowsFoundation_IDeferralFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x65A1ECC5, 0x3FB5, 0x4832, 0x8CA9, 0xF061B281D13A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IDeferralFactory {
    public func create(_ handler: WindowsFoundation_DeferralCompletedHandler?) throws -> COM.COMReference<SWRT_WindowsFoundation_IDeferral> {
        var handler_abi = try WindowsFoundation_DeferralCompletedHandlerBinding.toABI(handler)
        defer { WindowsFoundation_DeferralCompletedHandlerBinding.release(&handler_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IDeferral>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Create(this, handler_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.Foundation.IMemoryBuffer

public func uuidof(_: SWRT_WindowsFoundation_IMemoryBuffer.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFBC4DD2A, 0x245B, 0x11E4, 0xAF98, 0x689423260CF8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IMemoryBuffer {
    public func createReference() throws -> WindowsFoundation_IMemoryBufferReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IMemoryBufferReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateReference(this, &_result))
        return WindowsFoundation_IMemoryBufferReferenceBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IMemoryBufferReference

public func uuidof(_: SWRT_WindowsFoundation_IMemoryBufferReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFBC4DD29, 0x245B, 0x11E4, 0xAF98, 0x689423260CF8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IMemoryBufferReference {
    public func get_Capacity() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Capacity(this, &_result))
        return _result
    }

    public func add_Closed(_ handler: WindowsFoundation_TypedEventHandler<WindowsFoundation_IMemoryBufferReference?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.IMemoryBufferReference_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.IMemoryBufferReference_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Closed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Closed(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Closed(this, cookie_abi))
    }
}

// MARK: Windows.Foundation.IPropertyValue

public func uuidof(_: SWRT_WindowsFoundation_IPropertyValue.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4BD682DD, 0x7554, 0x40E9, 0x9A9B, 0x82654EDE7E62)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IPropertyValue {
    public func get_Type() throws -> WindowsFoundation_PropertyType {
        var _result: SWRT_WindowsFoundation_PropertyType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Type(this, &_result))
        return WindowsFoundation_PropertyType.fromABI(_result)
    }

    public func get_IsNumericScalar() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsNumericScalar(this, &_result))
        return _result
    }

    public func getUInt8() throws -> Swift.UInt8 {
        var _result: Swift.UInt8 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt8(this, &_result))
        return _result
    }

    public func getInt16() throws -> Swift.Int16 {
        var _result: Swift.Int16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt16(this, &_result))
        return _result
    }

    public func getUInt16() throws -> Swift.UInt16 {
        var _result: Swift.UInt16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt16(this, &_result))
        return _result
    }

    public func getInt32() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt32(this, &_result))
        return _result
    }

    public func getUInt32() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt32(this, &_result))
        return _result
    }

    public func getInt64() throws -> Swift.Int64 {
        var _result: Swift.Int64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt64(this, &_result))
        return _result
    }

    public func getUInt64() throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt64(this, &_result))
        return _result
    }

    public func getSingle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSingle(this, &_result))
        return _result
    }

    public func getDouble() throws -> Swift.Double {
        var _result: Swift.Double = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDouble(this, &_result))
        return _result
    }

    public func getChar16() throws -> WindowsRuntime.Char16 {
        var _result: Swift.UInt16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetChar16(this, &_result))
        return WindowsRuntime.Char16Binding.fromABI(_result)
    }

    public func getBoolean() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetBoolean(this, &_result))
        return _result
    }

    public func getString() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetString(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func getGuid() throws -> COM.GUID {
        var _result: SWRT_Guid = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetGuid(this, &_result))
        return WindowsRuntime.GuidBinding.fromABI(_result)
    }

    public func getDateTime() throws -> WindowsFoundation_DateTime {
        var _result: SWRT_WindowsFoundation_DateTime = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDateTime(this, &_result))
        return WindowsFoundation_DateTime.fromABI(_result)
    }

    public func getTimeSpan() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetTimeSpan(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func getPoint() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPoint(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func getSize() throws -> WindowsFoundation_Size {
        var _result: SWRT_WindowsFoundation_Size = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSize(this, &_result))
        return WindowsFoundation_Size.fromABI(_result)
    }

    public func getRect() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetRect(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func getUInt8Array(_ value: inout [Swift.UInt8]) throws {
        var value_abi: COM.COMArray<Swift.UInt8> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt8Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt8Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt8Binding>.fromABI(consuming: &value_abi)
    }

    public func getInt16Array(_ value: inout [Swift.Int16]) throws {
        var value_abi: COM.COMArray<Swift.Int16> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Int16Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt16Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Int16Binding>.fromABI(consuming: &value_abi)
    }

    public func getUInt16Array(_ value: inout [Swift.UInt16]) throws {
        var value_abi: COM.COMArray<Swift.UInt16> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt16Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt16Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt16Binding>.fromABI(consuming: &value_abi)
    }

    public func getInt32Array(_ value: inout [Swift.Int32]) throws {
        var value_abi: COM.COMArray<Swift.Int32> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Int32Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt32Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Int32Binding>.fromABI(consuming: &value_abi)
    }

    public func getUInt32Array(_ value: inout [Swift.UInt32]) throws {
        var value_abi: COM.COMArray<Swift.UInt32> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt32Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt32Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt32Binding>.fromABI(consuming: &value_abi)
    }

    public func getInt64Array(_ value: inout [Swift.Int64]) throws {
        var value_abi: COM.COMArray<Swift.Int64> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Int64Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt64Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Int64Binding>.fromABI(consuming: &value_abi)
    }

    public func getUInt64Array(_ value: inout [Swift.UInt64]) throws {
        var value_abi: COM.COMArray<Swift.UInt64> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt64Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt64Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt64Binding>.fromABI(consuming: &value_abi)
    }

    public func getSingleArray(_ value: inout [Swift.Float]) throws {
        var value_abi: COM.COMArray<Swift.Float> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSingleArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.fromABI(consuming: &value_abi)
    }

    public func getDoubleArray(_ value: inout [Swift.Double]) throws {
        var value_abi: COM.COMArray<Swift.Double> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.DoubleBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDoubleArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.DoubleBinding>.fromABI(consuming: &value_abi)
    }

    public func getChar16Array(_ value: inout [WindowsRuntime.Char16]) throws {
        var value_abi: COM.COMArray<Swift.UInt16> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Char16Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetChar16Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Char16Binding>.fromABI(consuming: &value_abi)
    }

    public func getBooleanArray(_ value: inout [Swift.Bool]) throws {
        var value_abi: COM.COMArray<Swift.Bool> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.BooleanBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetBooleanArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.BooleanBinding>.fromABI(consuming: &value_abi)
    }

    public func getStringArray(_ value: inout [Swift.String]) throws {
        var value_abi: COM.COMArray<SWRT_HString?> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetStringArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.fromABI(consuming: &value_abi)
    }

    public func getInspectableArray(_ value: inout [WindowsRuntime.IInspectable?]) throws {
        var value_abi: COM.COMArray<WindowsRuntime.IInspectablePointer?> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.IInspectableBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInspectableArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.IInspectableBinding>.fromABI(consuming: &value_abi)
    }

    public func getGuidArray(_ value: inout [COM.GUID]) throws {
        var value_abi: COM.COMArray<SWRT_Guid> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.GuidBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetGuidArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.GuidBinding>.fromABI(consuming: &value_abi)
    }

    public func getDateTimeArray(_ value: inout [WindowsFoundation_DateTime]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_DateTime> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_DateTime>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDateTimeArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_DateTime>.fromABI(consuming: &value_abi)
    }

    public func getTimeSpanArray(_ value: inout [WindowsFoundation_TimeSpan]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_TimeSpan> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_TimeSpan>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetTimeSpanArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_TimeSpan>.fromABI(consuming: &value_abi)
    }

    public func getPointArray(_ value: inout [WindowsFoundation_Point]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_Point> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPointArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.fromABI(consuming: &value_abi)
    }

    public func getSizeArray(_ value: inout [WindowsFoundation_Size]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_Size> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Size>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSizeArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_Size>.fromABI(consuming: &value_abi)
    }

    public func getRectArray(_ value: inout [WindowsFoundation_Rect]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_Rect> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Rect>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetRectArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_Rect>.fromABI(consuming: &value_abi)
    }
}

// MARK: Windows.Foundation.IStringable

public func uuidof(_: SWRT_WindowsFoundation_IStringable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x96369F54, 0x8EB6, 0x48F0, 0xABCE, 0xC1B211E627C3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IStringable {
    public func toString() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ToString(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IUriEscapeStatics

public func uuidof(_: SWRT_WindowsFoundation_IUriEscapeStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC1D432BA, 0xC824, 0x4452, 0xA7FD, 0x512BC3BBE9A1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IUriEscapeStatics {
    public func unescapeComponent(_ toUnescape: Swift.String) throws -> Swift.String {
        var toUnescape_abi = try WindowsRuntime.StringBinding.toABI(toUnescape)
        defer { WindowsRuntime.StringBinding.release(&toUnescape_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.UnescapeComponent(this, toUnescape_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func escapeComponent(_ toEscape: Swift.String) throws -> Swift.String {
        var toEscape_abi = try WindowsRuntime.StringBinding.toABI(toEscape)
        defer { WindowsRuntime.StringBinding.release(&toEscape_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.EscapeComponent(this, toEscape_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IUriRuntimeClass

public func uuidof(_: SWRT_WindowsFoundation_IUriRuntimeClass.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9E365E57, 0x48B2, 0x4160, 0x956F, 0xC7385120BBFC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IUriRuntimeClass {
    public func get_AbsoluteUri() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AbsoluteUri(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_DisplayUri() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayUri(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Domain() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Domain(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Extension() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Extension(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Fragment() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Fragment(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Host() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Host(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Password() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Password(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Path() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Path(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Query() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Query(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_QueryParsed() throws -> WindowsFoundation_WwwFormUrlDecoder? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_QueryParsed(this, &_result))
        return WindowsFoundation_WwwFormUrlDecoderBinding.fromABI(consuming: &_result)
    }

    public func get_RawUri() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RawUri(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_SchemeName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SchemeName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_UserName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_UserName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Port() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Port(this, &_result))
        return _result
    }

    public func get_Suspicious() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Suspicious(this, &_result))
        return _result
    }

    public func equals(_ pUri: WindowsFoundation_Uri?) throws -> Swift.Bool {
        var pUri_abi = try WindowsFoundation_UriBinding.toABI(pUri)
        defer { WindowsFoundation_UriBinding.release(&pUri_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Equals(this, pUri_abi, &_result))
        return _result
    }

    public func combineUri(_ relativeUri: Swift.String) throws -> WindowsFoundation_Uri? {
        var relativeUri_abi = try WindowsRuntime.StringBinding.toABI(relativeUri)
        defer { WindowsRuntime.StringBinding.release(&relativeUri_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CombineUri(this, relativeUri_abi, &_result))
        return WindowsFoundation_UriBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IUriRuntimeClassFactory

public func uuidof(_: SWRT_WindowsFoundation_IUriRuntimeClassFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x44A9796F, 0x723E, 0x4FDF, 0xA218, 0x033E75B0C084)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IUriRuntimeClassFactory {
    public func createUri(_ uri: Swift.String) throws -> COM.COMReference<SWRT_WindowsFoundation_IUriRuntimeClass> {
        var uri_abi = try WindowsRuntime.StringBinding.toABI(uri)
        defer { WindowsRuntime.StringBinding.release(&uri_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateUri(this, uri_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }

    public func createWithRelativeUri(_ baseUri: Swift.String, _ relativeUri: Swift.String) throws -> COM.COMReference<SWRT_WindowsFoundation_IUriRuntimeClass> {
        var baseUri_abi = try WindowsRuntime.StringBinding.toABI(baseUri)
        defer { WindowsRuntime.StringBinding.release(&baseUri_abi) }
        var relativeUri_abi = try WindowsRuntime.StringBinding.toABI(relativeUri)
        defer { WindowsRuntime.StringBinding.release(&relativeUri_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IUriRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWithRelativeUri(this, baseUri_abi, relativeUri_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.Foundation.IUriRuntimeClassWithAbsoluteCanonicalUri

public func uuidof(_: SWRT_WindowsFoundation_IUriRuntimeClassWithAbsoluteCanonicalUri.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x758D9661, 0x221C, 0x480F, 0xA339, 0x50656673F46F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IUriRuntimeClassWithAbsoluteCanonicalUri {
    public func get_AbsoluteCanonicalUri() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AbsoluteCanonicalUri(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_DisplayIri() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayIri(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IWwwFormUrlDecoderEntry

public func uuidof(_: SWRT_WindowsFoundation_IWwwFormUrlDecoderEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x125E7431, 0xF678, 0x4E8E, 0xB670, 0x20A9B06C512D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IWwwFormUrlDecoderEntry {
    public func get_Name() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Name(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Value() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IWwwFormUrlDecoderRuntimeClass

public func uuidof(_: SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClass.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD45A0451, 0xF225, 0x4542, 0x9296, 0x0E1DF5D254DF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClass {
    public func getFirstValueByName(_ name: Swift.String) throws -> Swift.String {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFirstValueByName(this, name_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.IWwwFormUrlDecoderRuntimeClassFactory

public func uuidof(_: SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClassFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5B8C6B3D, 0x24AE, 0x41B5, 0xA1BF, 0xF0C3D544845B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClassFactory {
    public func createWwwFormUrlDecoder(_ query: Swift.String) throws -> COM.COMReference<SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClass> {
        var query_abi = try WindowsRuntime.StringBinding.toABI(query)
        defer { WindowsRuntime.StringBinding.release(&query_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWwwFormUrlDecoder(this, query_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.Storage.Search.IStorageQueryResultBase, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsStorageSearch_IStorageQueryResultBase_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4BA22861, 0x00C4, 0x597F, 0xB6BF, 0x3AF516F3B870)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsStorageSearch_IStorageQueryResultBase_IInspectable {
    internal func invoke(_ sender: WindowsStorageSearch_IStorageQueryResultBase?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsStorageSearch_IStorageQueryResultBaseBinding.toABI(sender)
        defer { WindowsStorageSearch_IStorageQueryResultBaseBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.AutomationProviderRequestedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_AutomationProviderRequestedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x54DB5C04, 0x81F7, 0x5F46, 0x9FB8, 0xE49BEEC70A24)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_AutomationProviderRequestedEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_AutomationProviderRequestedEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_AutomationProviderRequestedEventArgsBinding.toABI(args)
        defer { WindowsUICore_AutomationProviderRequestedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage, Windows.ApplicationModel.DataTransfer.ShareCompletedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelDataTransfer_DataPackage_WindowsApplicationModelDataTransfer_ShareCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF8F7E24A, 0x56FE, 0x58DF, 0xBC15, 0x2365AEC03966)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelDataTransfer_DataPackage_WindowsApplicationModelDataTransfer_ShareCompletedEventArgs {
    internal func invoke(_ sender: WindowsApplicationModelDataTransfer_DataPackage?, _ args: WindowsApplicationModelDataTransfer_ShareCompletedEventArgs?) throws {
        var sender_abi = try WindowsApplicationModelDataTransfer_DataPackageBinding.toABI(sender)
        defer { WindowsApplicationModelDataTransfer_DataPackageBinding.release(&sender_abi) }
        var args_abi = try WindowsApplicationModelDataTransfer_ShareCompletedEventArgsBinding.toABI(args)
        defer { WindowsApplicationModelDataTransfer_ShareCompletedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6368AE3D, 0x52D4, 0x5290, 0xB936, 0x717A9ACF5BEA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_IInspectable {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.KeyEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_KeyEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA3EC0774, 0x55AC, 0x5D61, 0x8232, 0xB35C5D35C93C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_KeyEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_KeyEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_KeyEventArgsBinding.toABI(args)
        defer { WindowsUICore_KeyEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.TouchHitTestingEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_TouchHitTestingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x197654C9, 0x0C47, 0x502B, 0x9AA1, 0x0DEB03ED9702)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_TouchHitTestingEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_TouchHitTestingEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_TouchHitTestingEventArgsBinding.toABI(args)
        defer { WindowsUICore_TouchHitTestingEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.WindowSizeChangedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_WindowSizeChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x318DBB67, 0x4089, 0x5690, 0x9040, 0x1D454FB2F686)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_WindowSizeChangedEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_WindowSizeChangedEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_WindowSizeChangedEventArgsBinding.toABI(args)
        defer { WindowsUICore_WindowSizeChangedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.System.DispatcherQueueTimer, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_DispatcherQueueTimer_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8B5644C8, 0x8B57, 0x50CE, 0x8933, 0x7AB2CC5A14EF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_DispatcherQueueTimer_IInspectable {
    internal func invoke(_ sender: WindowsSystem_DispatcherQueueTimer?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsSystem_DispatcherQueueTimerBinding.toABI(sender)
        defer { WindowsSystem_DispatcherQueueTimerBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelDataTransfer_DataPackage_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC156B0C3, 0x1CBC, 0x5CA4, 0x901C, 0x62C5A8CA5CB5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelDataTransfer_DataPackage_IInspectable {
    internal func invoke(_ sender: WindowsApplicationModelDataTransfer_DataPackage?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsApplicationModelDataTransfer_DataPackageBinding.toABI(sender)
        defer { WindowsApplicationModelDataTransfer_DataPackageBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.CoreWindowEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_CoreWindowEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD08E4F66, 0x3457, 0x57F2, 0xBA0C, 0xCB347133BD15)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_CoreWindowEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_CoreWindowEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_CoreWindowEventArgsBinding.toABI(args)
        defer { WindowsUICore_CoreWindowEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreDispatcher, Windows.UI.Core.AcceleratorKeyEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreDispatcher_WindowsUICore_AcceleratorKeyEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x136DFF0D, 0xF7E8, 0x5153, 0xB31C, 0x86390C701880)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreDispatcher_WindowsUICore_AcceleratorKeyEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreDispatcher?, _ args: WindowsUICore_AcceleratorKeyEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreDispatcherBinding.toABI(sender)
        defer { WindowsUICore_CoreDispatcherBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_AcceleratorKeyEventArgsBinding.toABI(args)
        defer { WindowsUICore_AcceleratorKeyEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.System.DispatcherQueue, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_DispatcherQueue_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFE79F855, 0x2F40, 0x5B88, 0xA0C3, 0x4C042A05DD05)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_DispatcherQueue_IInspectable {
    internal func invoke(_ sender: WindowsSystem_DispatcherQueue?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsSystem_DispatcherQueueBinding.toABI(sender)
        defer { WindowsSystem_DispatcherQueueBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.ClosestInteractiveBoundsRequestedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_ClosestInteractiveBoundsRequestedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x21A652D2, 0xBFE2, 0x5B2E, 0xA2AB, 0xCA45253BE8B0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_ClosestInteractiveBoundsRequestedEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_ClosestInteractiveBoundsRequestedEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_ClosestInteractiveBoundsRequestedEventArgsBinding.toABI(args)
        defer { WindowsUICore_ClosestInteractiveBoundsRequestedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.System.UserWatcher, Windows.System.UserAuthenticationStatusChangingEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_UserWatcher_WindowsSystem_UserAuthenticationStatusChangingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9EC3D9D5, 0xB413, 0x51DF, 0x8C64, 0x640E3356E351)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_UserWatcher_WindowsSystem_UserAuthenticationStatusChangingEventArgs {
    internal func invoke(_ sender: WindowsSystem_UserWatcher?, _ args: WindowsSystem_UserAuthenticationStatusChangingEventArgs?) throws {
        var sender_abi = try WindowsSystem_UserWatcherBinding.toABI(sender)
        defer { WindowsSystem_UserWatcherBinding.release(&sender_abi) }
        var args_abi = try WindowsSystem_UserAuthenticationStatusChangingEventArgsBinding.toABI(args)
        defer { WindowsSystem_UserAuthenticationStatusChangingEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.VisibilityChangedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_VisibilityChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x14B7F692, 0x5583, 0x52A1, 0xAA42, 0xFC1843C0F748)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_VisibilityChangedEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_VisibilityChangedEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_VisibilityChangedEventArgsBinding.toABI(args)
        defer { WindowsUICore_VisibilityChangedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Activation.SplashScreen, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelActivation_SplashScreen_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7725B2A5, 0x287D, 0x5ED2, 0xA789, 0x2A6A2673C7FE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelActivation_SplashScreen_IInspectable {
    internal func invoke(_ sender: WindowsApplicationModelActivation_SplashScreen?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsApplicationModelActivation_SplashScreenBinding.toABI(sender)
        defer { WindowsApplicationModelActivation_SplashScreenBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.System.DispatcherQueue, Windows.System.DispatcherQueueShutdownStartingEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_DispatcherQueue_WindowsSystem_DispatcherQueueShutdownStartingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB58B5E24, 0xE1C6, 0x528E, 0x9D99, 0x07EC8829DEA5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_DispatcherQueue_WindowsSystem_DispatcherQueueShutdownStartingEventArgs {
    internal func invoke(_ sender: WindowsSystem_DispatcherQueue?, _ args: WindowsSystem_DispatcherQueueShutdownStartingEventArgs?) throws {
        var sender_abi = try WindowsSystem_DispatcherQueueBinding.toABI(sender)
        defer { WindowsSystem_DispatcherQueueBinding.release(&sender_abi) }
        var args_abi = try WindowsSystem_DispatcherQueueShutdownStartingEventArgsBinding.toABI(args)
        defer { WindowsSystem_DispatcherQueueShutdownStartingEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.System.UserWatcher, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_UserWatcher_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF155E0FF, 0xDBB5, 0x5C34, 0xAC0C, 0x7E291E3300AB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_UserWatcher_IInspectable {
    internal func invoke(_ sender: WindowsSystem_UserWatcher?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsSystem_UserWatcherBinding.toABI(sender)
        defer { WindowsSystem_UserWatcherBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.System.UserWatcher, Windows.System.UserChangedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_UserWatcher_WindowsSystem_UserChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEB9D0454, 0x25DB, 0x5620, 0x98B8, 0xBE4C5D0DBC67)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsSystem_UserWatcher_WindowsSystem_UserChangedEventArgs {
    internal func invoke(_ sender: WindowsSystem_UserWatcher?, _ args: WindowsSystem_UserChangedEventArgs?) throws {
        var sender_abi = try WindowsSystem_UserWatcherBinding.toABI(sender)
        defer { WindowsSystem_UserWatcherBinding.release(&sender_abi) }
        var args_abi = try WindowsSystem_UserChangedEventArgsBinding.toABI(args)
        defer { WindowsSystem_UserChangedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.CharacterReceivedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_CharacterReceivedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x73F846A8, 0x0AF6, 0x5872, 0x8FB8, 0xAE2F56D8553E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_CharacterReceivedEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_CharacterReceivedEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_CharacterReceivedEventArgsBinding.toABI(args)
        defer { WindowsUICore_CharacterReceivedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.PointerEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_PointerEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x420E1BB6, 0xE99D, 0x5E64, 0x8E25, 0x07467E3CAE9E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_PointerEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_PointerEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_PointerEventArgsBinding.toABI(args)
        defer { WindowsUICore_PointerEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Object, Windows.UI.Composition.CompositionBatchCompletedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_IInspectable_WindowsUIComposition_CompositionBatchCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9DF03456, 0x3383, 0x508B, 0x9C75, 0xEE840A7E1A39)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_IInspectable_WindowsUIComposition_CompositionBatchCompletedEventArgs {
    internal func invoke(_ sender: WindowsRuntime.IInspectable?, _ args: WindowsUIComposition_CompositionBatchCompletedEventArgs?) throws {
        var sender_abi = try WindowsRuntime.IInspectableBinding.toABI(sender)
        defer { WindowsRuntime.IInspectableBinding.release(&sender_abi) }
        var args_abi = try WindowsUIComposition_CompositionBatchCompletedEventArgsBinding.toABI(args)
        defer { WindowsUIComposition_CompositionBatchCompletedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.ICorePointerRedirector, Windows.UI.Core.PointerEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_ICorePointerRedirector_WindowsUICore_PointerEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x29742D27, 0x177D, 0x54C3, 0xB974, 0x616FC45A2B0C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_ICorePointerRedirector_WindowsUICore_PointerEventArgs {
    internal func invoke(_ sender: WindowsUICore_ICorePointerRedirector?, _ args: WindowsUICore_PointerEventArgs?) throws {
        var sender_abi = try WindowsUICore_ICorePointerRedirectorBinding.toABI(sender)
        defer { WindowsUICore_ICorePointerRedirectorBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_PointerEventArgsBinding.toABI(args)
        defer { WindowsUICore_PointerEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.Foundation.IMemoryBufferReference, Object>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsFoundation_IMemoryBufferReference_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF4637D4A, 0x0760, 0x5431, 0xBFC0, 0x24EB1D4F6C4F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsFoundation_IMemoryBufferReference_IInspectable {
    internal func invoke(_ sender: WindowsFoundation_IMemoryBufferReference?, _ args: WindowsRuntime.IInspectable?) throws {
        var sender_abi = try WindowsFoundation_IMemoryBufferReferenceBinding.toABI(sender)
        defer { WindowsFoundation_IMemoryBufferReferenceBinding.release(&sender_abi) }
        var args_abi = try WindowsRuntime.IInspectableBinding.toABI(args)
        defer { WindowsRuntime.IInspectableBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.WindowActivatedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_WindowActivatedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x26A73B35, 0xA7F9, 0x52DB, 0x88D6, 0x15726DEB2523)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_WindowActivatedEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_WindowActivatedEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_WindowActivatedEventArgsBinding.toABI(args)
        defer { WindowsUICore_WindowActivatedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DataPackage, Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelDataTransfer_DataPackage_WindowsApplicationModelDataTransfer_OperationCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDD48AF6C, 0xEF9A, 0x59CB, 0xB326, 0x57D9E2411F21)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsApplicationModelDataTransfer_DataPackage_WindowsApplicationModelDataTransfer_OperationCompletedEventArgs {
    internal func invoke(_ sender: WindowsApplicationModelDataTransfer_DataPackage?, _ args: WindowsApplicationModelDataTransfer_OperationCompletedEventArgs?) throws {
        var sender_abi = try WindowsApplicationModelDataTransfer_DataPackageBinding.toABI(sender)
        defer { WindowsApplicationModelDataTransfer_DataPackageBinding.release(&sender_abi) }
        var args_abi = try WindowsApplicationModelDataTransfer_OperationCompletedEventArgsBinding.toABI(args)
        defer { WindowsApplicationModelDataTransfer_OperationCompletedEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow, Windows.UI.Core.InputEnabledEventArgs>

internal func uuidof(_: SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_InputEnabledEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE230A64A, 0x506A, 0x59C3, 0xBB61, 0x5559FF995663)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_TypedEventHandler_WindowsUICore_CoreWindow_WindowsUICore_InputEnabledEventArgs {
    internal func invoke(_ sender: WindowsUICore_CoreWindow?, _ args: WindowsUICore_InputEnabledEventArgs?) throws {
        var sender_abi = try WindowsUICore_CoreWindowBinding.toABI(sender)
        defer { WindowsUICore_CoreWindowBinding.release(&sender_abi) }
        var args_abi = try WindowsUICore_InputEnabledEventArgsBinding.toABI(args)
        defer { WindowsUICore_InputEnabledEventArgsBinding.release(&args_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, args_abi))
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, String>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE9BDAAF0, 0xCBF6, 0x5C72, 0xBE90, 0x29CBF3A1319B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_String {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IKeyValuePair_String_String.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Windows.Foundation.Collections.IVectorView<Windows.Data.Text.TextSegment>>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF819A276, 0xB3F5, 0x54D4, 0xB8FD, 0xC9ADB7F700E3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IKeyValuePair_String_IVectorView_TextSegment.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Windows.Storage.Streams.RandomAccessStreamReference>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC9729BA7, 0x5E20, 0x569D, 0xA3D1, 0x97A4E653E5BB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IKeyValuePair_String_RandomAccessStreamReference.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1135ADF5, 0xDB12, 0x55E8, 0xAE0F, 0xBD8D914BD399)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionShape {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIComposition_CompositionShape?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionShape.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0F2CFAC1, 0xCDBC, 0x5C4E, 0xA7D2, 0xA3914FB63426)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionColorGradientStop {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIComposition_CompositionColorGradientStop?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionColorGradientStop.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Storage.StorageFile>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_StorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9AC00304, 0x83EA, 0x5688, 0x87B6, 0xAE38AAB65D0B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_StorageFile {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsStorage_StorageFile?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.StorageFile.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Input.PointerPoint>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUIInput_PointerPoint.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF6F2CBA6, 0x7076, 0x5B59, 0x9631, 0xF6AC32B57695)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUIInput_PointerPoint {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIInput_PointerPoint?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUIInput_PointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.PointerPoint.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Composition.Visual>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_Visual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4EED7DCE, 0xE4AC, 0x5891, 0x9B52, 0x799D70DF47FE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_Visual {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIComposition_Visual?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_Visual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.Visual.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Devices.Input.PointerDevice>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesInput_PointerDevice.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAD26662C, 0x845B, 0x5C6D, 0xAEAA, 0x406F48C21AE9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesInput_PointerDevice {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsDevicesInput_PointerDevice?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsDevicesInput_PointerDevice>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.PointerDevice.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Notifications.ShownTileNotification>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUINotifications_ShownTileNotification.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1863BAEE, 0x44F1, 0x5E51, 0xBCDF, 0xA3CDAB826A15)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUINotifications_ShownTileNotification {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUINotifications_ShownTileNotification?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUINotifications_ShownTileNotification>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.ShownTileNotification.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Devices.Input.PointerDeviceUsage>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesInput_PointerDeviceUsage.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x592D6618, 0xEAAB, 0x5A79, 0xA47A, 0xC7FC0B749A4E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesInput_PointerDeviceUsage {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsDevicesInput_PointerDeviceUsage>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsDevicesInput_PointerDeviceUsage>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.PointerDeviceUsage.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Storage.StorageFolder>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_StorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4669BEFC, 0xAE5C, 0x52B1, 0x8A97, 0x5466CE61E94E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_StorageFolder {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsStorage_StorageFolder?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.StorageFolder.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Storage.Search.SortEntry>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsStorageSearch_SortEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x35AFF6F9, 0xEF75, 0x5280, 0xBB84, 0xA2BF8317CF35)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsStorageSearch_SortEntry {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsStorageSearch_SortEntry>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsStorageSearch_SortEntry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.SortEntry.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.System.User>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsSystem_User.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD1BACD1F, 0x0376, 0x5823, 0x8C29, 0x1D45B9F4C191)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsSystem_User {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsSystem_User?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsSystem_User>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.User.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Windows.UI.Composition.ICompositionAnimationBase>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC739C420, 0x64B2, 0x53F2, 0x89B9, 0x05906ABA7CB0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsUIComposition_ICompositionAnimationBase?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IKeyValuePair_String_ICompositionAnimationBase.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Data.Text.TextSegment>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5498F4F3, 0xCEE4, 0x5B72, 0x9729, 0x815C4AD7B9DC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsDataText_TextSegment {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsDataText_TextSegment>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.TextSegment.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.System.UserWatcherUpdateKind>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsSystem_UserWatcherUpdateKind.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x89342B56, 0xEB84, 0x54E7, 0x98C1, 0xBAEE448BDCED)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsSystem_UserWatcherUpdateKind {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsSystem_UserWatcherUpdateKind>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsSystem_UserWatcherUpdateKind>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.UserWatcherUpdateKind.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB01BEE51, 0x063A, 0x5FDA, 0xBD72, 0xD76637BB8CB8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_Float {
    internal func first() throws -> WindowsFoundationCollections_IIterator<Swift.Float>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_Float>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.Single.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Composition.CompositionProjectedShadowReceiver>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionProjectedShadowReceiver.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE2775A28, 0xEC48, 0x5CB8, 0xB352, 0x76F7F981D7A4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionProjectedShadowReceiver {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIComposition_CompositionProjectedShadowReceiver?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionProjectedShadowReceiver>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionProjectedShadowReceiver.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE2FCC7C1, 0x3BFC, 0x5A0B, 0xB2B0, 0x72E769D1CB7E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_String {
    internal func first() throws -> WindowsFoundationCollections_IIterator<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.String.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.IWwwFormUrlDecoderEntry>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundation_IWwwFormUrlDecoderEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x876BE83B, 0x7218, 0x5BFB, 0xA169, 0x83152EF7E146)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundation_IWwwFormUrlDecoderEntry {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundation_IWwwFormUrlDecoderEntry?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundation_IWwwFormUrlDecoderEntry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IWwwFormUrlDecoderEntry.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Storage.IStorageItem>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBB8B8418, 0x65D1, 0x544B, 0xB083, 0x6D172F568C73)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_IStorageItem {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsStorage_IStorageItem?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IStorageItem.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Storage.StorageLibraryChange>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_StorageLibraryChange.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x87C15DFC, 0x0C5E, 0x518B, 0x9206, 0x97D3D9823C61)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsStorage_StorageLibraryChange {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsStorage_StorageLibraryChange?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageLibraryChange>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.StorageLibraryChange.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Object>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFE2F3D47, 0x5D47, 0x5499, 0x8374, 0x430C7CDA0204)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_IInspectable {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.IKeyValuePair_String_Object.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Composition.CompositionAnimation>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0CB59942, 0xC6F3, 0x585F, 0x9A92, 0xB47E8DD38EBF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionAnimation {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIComposition_CompositionAnimation?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionAnimation.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterable<Windows.UI.Composition.CompositionProjectedShadowCaster>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionProjectedShadowCaster.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB8301B02, 0x429B, 0x5D71, 0xAB0C, 0x8D1141B12AC3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterable_WindowsUIComposition_CompositionProjectedShadowCaster {
    internal func first() throws -> WindowsFoundationCollections_IIterator<WindowsUIComposition_CompositionProjectedShadowCaster?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionProjectedShadowCaster>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.First(this, &_result))
        return WindowsFoundationCollections_IIteratorBinding.CompositionProjectedShadowCaster.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.System.User>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsSystem_User.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x326FE162, 0x582B, 0x5659, 0xB8A4, 0x68FF0F525745)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsSystem_User {
    internal func get_Current() throws -> WindowsSystem_User? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUser>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsSystem_UserBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsSystem_User?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsSystem_UserBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsSystem_UserBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Storage.Search.SortEntry>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsStorageSearch_SortEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x520434A2, 0xACF7, 0x58C9, 0xB47A, 0x2741F2FAC2C2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsStorageSearch_SortEntry {
    internal func get_Current() throws -> WindowsStorageSearch_SortEntry {
        var _result: SWRT_WindowsStorageSearch_SortEntry = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsStorageSearch_SortEntry.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsStorageSearch_SortEntry]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.IWwwFormUrlDecoderEntry>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundation_IWwwFormUrlDecoderEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x32E54295, 0x373C, 0x50CB, 0x80A1, 0x468A990CA780)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundation_IWwwFormUrlDecoderEntry {
    internal func get_Current() throws -> WindowsFoundation_IWwwFormUrlDecoderEntry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IWwwFormUrlDecoderEntry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundation_IWwwFormUrlDecoderEntryBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundation_IWwwFormUrlDecoderEntry?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundation_IWwwFormUrlDecoderEntryBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_IWwwFormUrlDecoderEntryBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Storage.StorageFolder>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5AAC96FB, 0xB3B9, 0x5A7F, 0xA920, 0x4B5A8DF81168)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageFolder {
    internal func get_Current() throws -> WindowsStorage_StorageFolder? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsStorage_StorageFolderBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsStorage_StorageFolder?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_StorageFolderBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_StorageFolderBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Data.Text.TextSegment>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x645A39B4, 0xF001, 0x5272, 0x9015, 0xFB4A327179AE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsDataText_TextSegment {
    internal func get_Current() throws -> WindowsDataText_TextSegment {
        var _result: SWRT_WindowsDataText_TextSegment = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsDataText_TextSegment.fromABI(_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsDataText_TextSegment]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsDataText_TextSegment>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsDataText_TextSegment>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Devices.Input.PointerDevice>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsDevicesInput_PointerDevice.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDE94641C, 0x7960, 0x5FCD, 0xABE8, 0xD6BA609EF7D3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsDevicesInput_PointerDevice {
    internal func get_Current() throws -> WindowsDevicesInput_PointerDevice? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsDevicesInput_IPointerDevice>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsDevicesInput_PointerDeviceBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsDevicesInput_PointerDevice?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x746A0F51, 0x47F4, 0x5395, 0x8EDD, 0x8AE1E93A8183)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionColorGradientStop {
    internal func get_Current() throws -> WindowsUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUIComposition_CompositionColorGradientStop?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, Windows.Storage.Streams.RandomAccessStreamReference>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9419AF53, 0xACB8, 0x5328, 0x8853, 0x70BA87EB6AD5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference {
    internal func get_Current() throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_RandomAccessStreamReference.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_RandomAccessStreamReference>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_RandomAccessStreamReference>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Notifications.ShownTileNotification>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUINotifications_ShownTileNotification.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x04D8D70B, 0x7C15, 0x5F60, 0x9894, 0xB21366B427C2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUINotifications_ShownTileNotification {
    internal func get_Current() throws -> WindowsUINotifications_ShownTileNotification? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUINotifications_IShownTileNotification>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUINotifications_ShownTileNotificationBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUINotifications_ShownTileNotification?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUINotifications_ShownTileNotificationBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUINotifications_ShownTileNotificationBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x42614E61, 0xB0AA, 0x5E72, 0x9354, 0x2771DB20B7A8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_Float {
    internal func get_Current() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return _result
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [Swift.Float]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, String>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x05EB86F1, 0x7140, 0x5517, 0xB88D, 0xCBAEBE57E6B1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_String {
    internal func get_Current() throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_String.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_String>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_String>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, Windows.Foundation.Collections.IVectorView<Windows.Data.Text.TextSegment>>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x00078AA3, 0x8676, 0x5F06, 0xADF5, 0xFFE5D661D670)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment {
    internal func get_Current() throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_IVectorView_TextSegment.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?>?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_IVectorView_TextSegment>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_IVectorView_TextSegment>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Devices.Input.PointerDeviceUsage>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsDevicesInput_PointerDeviceUsage.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9AB2160D, 0x11EF, 0x5ECA, 0x8DD9, 0x3E13AA4E5F99)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsDevicesInput_PointerDeviceUsage {
    internal func get_Current() throws -> WindowsDevicesInput_PointerDeviceUsage {
        var _result: SWRT_WindowsDevicesInput_PointerDeviceUsage = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsDevicesInput_PointerDeviceUsage.fromABI(_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsDevicesInput_PointerDeviceUsage]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceUsage>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceUsage>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8C304EBB, 0x6615, 0x50A4, 0x8829, 0x879ECD443236)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_String {
    internal func get_Current() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [Swift.String]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, Windows.UI.Composition.ICompositionAnimationBase>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x85924E77, 0xFC46, 0x5A0D, 0xBDAF, 0x463C4F86C172)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase {
    internal func get_Current() throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsUIComposition_ICompositionAnimationBase?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_ICompositionAnimationBase.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsUIComposition_ICompositionAnimationBase?>?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_ICompositionAnimationBase>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_ICompositionAnimationBase>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Input.PointerPoint>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUIInput_PointerPoint.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x721FE01C, 0x5AD4, 0x5262, 0xB078, 0x3AB345105DB8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUIInput_PointerPoint {
    internal func get_Current() throws -> WindowsUIInput_PointerPoint? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUIInput_PointerPointBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUIInput_PointerPoint?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Composition.CompositionProjectedShadowCaster>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionProjectedShadowCaster.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6563B1B1, 0x4B53, 0x53DF, 0xA0C0, 0xD3CA1DBBFE59)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionProjectedShadowCaster {
    internal func get_Current() throws -> WindowsUIComposition_CompositionProjectedShadowCaster? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionProjectedShadowCaster>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUIComposition_CompositionProjectedShadowCasterBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUIComposition_CompositionProjectedShadowCaster?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionProjectedShadowCasterBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionProjectedShadowCasterBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Composition.CompositionProjectedShadowReceiver>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionProjectedShadowReceiver.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD2452315, 0x9A6E, 0x5033, 0x9E8F, 0xC25941ADBE71)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionProjectedShadowReceiver {
    internal func get_Current() throws -> WindowsUIComposition_CompositionProjectedShadowReceiver? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUIComposition_CompositionProjectedShadowReceiverBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUIComposition_CompositionProjectedShadowReceiver?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionProjectedShadowReceiverBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionProjectedShadowReceiverBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, Object>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5DB5FA32, 0x707C, 0x5849, 0xA06B, 0x91C8EB9D10E8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsFoundationCollections_IKeyValuePair_String_IInspectable {
    internal func get_Current() throws -> WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IKeyValuePair_String_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsFoundationCollections_IKeyValuePairBinding.String_Object.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_Object>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundationCollections_IKeyValuePairBinding.String_Object>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Composition.CompositionAnimation>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x98EFBE55, 0x0A66, 0x556A, 0x9ADC, 0x4AB59C696846)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionAnimation {
    internal func get_Current() throws -> WindowsUIComposition_CompositionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUIComposition_CompositionAnimationBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUIComposition_CompositionAnimation?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionAnimationBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionAnimationBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Storage.StorageLibraryChange>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageLibraryChange.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC48A1103, 0x56E6, 0x5398, 0x84FE, 0x92EDAD7FC111)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageLibraryChange {
    internal func get_Current() throws -> WindowsStorage_StorageLibraryChange? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageLibraryChange>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsStorage_StorageLibraryChangeBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsStorage_StorageLibraryChange?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_StorageLibraryChangeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_StorageLibraryChangeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.System.UserWatcherUpdateKind>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsSystem_UserWatcherUpdateKind.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x99011E6C, 0x3047, 0x5BCA, 0xB932, 0xE1D1EB8A937F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsSystem_UserWatcherUpdateKind {
    internal func get_Current() throws -> WindowsSystem_UserWatcherUpdateKind {
        var _result: SWRT_WindowsSystem_UserWatcherUpdateKind = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsSystem_UserWatcherUpdateKind.fromABI(_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsSystem_UserWatcherUpdateKind]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsSystem_UserWatcherUpdateKind>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsSystem_UserWatcherUpdateKind>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Storage.IStorageItem>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x05B487C2, 0x3830, 0x5D3C, 0x98DA, 0x25FA11542DBD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_IStorageItem {
    internal func get_Current() throws -> WindowsStorage_IStorageItem? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsStorage_IStorageItemBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsStorage_IStorageItem?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_IStorageItemBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_IStorageItemBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFF8D5B3B, 0xAB18, 0x5307, 0x9FFE, 0xE3B5D63452A4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_CompositionShape {
    internal func get_Current() throws -> WindowsUIComposition_CompositionShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUIComposition_CompositionShapeBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUIComposition_CompositionShape?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.UI.Composition.Visual>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_Visual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xECA15496, 0xDCAA, 0x5095, 0xA898, 0xF8602A40E10A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsUIComposition_Visual {
    internal func get_Current() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsUIComposition_Visual?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_VisualBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_VisualBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IIterator<Windows.Storage.StorageFile>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x43E29F53, 0x0298, 0x55AA, 0xA6C8, 0x4EDD323D9598)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IIterator_WindowsStorage_StorageFile {
    internal func get_Current() throws -> WindowsStorage_StorageFile? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Current(this, &_result))
        return WindowsStorage_StorageFileBinding.fromABI(consuming: &_result)
    }

    internal func get_HasCurrent() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasCurrent(this, &_result))
        return _result
    }

    internal func moveNext() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveNext(this, &_result))
        return _result
    }

    internal func getMany(_ items: [WindowsStorage_StorageFile?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_StorageFileBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_StorageFileBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, Windows.Foundation.Collections.IVectorView<Windows.Data.Text.TextSegment>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x77B4DAF4, 0x4F4F, 0x5568, 0x90EE, 0x1A32CF0CAAEA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.TextSegment.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, Windows.Storage.Streams.RandomAccessStreamReference>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE5195792, 0xAEAB, 0x56E8, 0xBD30, 0x1372C4340BF6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsStorageStreams_RandomAccessStreamReference {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, Windows.UI.Composition.ICompositionAnimationBase>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3B9A274F, 0x891D, 0x5208, 0x96BB, 0xE3F40C809E9B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_WindowsUIComposition_ICompositionAnimationBase {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> WindowsUIComposition_ICompositionAnimationBase? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return WindowsUIComposition_ICompositionAnimationBaseBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, Object>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x09335560, 0x6C6B, 0x5A26, 0x9348, 0x97B781132B20)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_IInspectable {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> WindowsRuntime.IInspectable? {
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IKeyValuePair<String, String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IKeyValuePair_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60310303, 0x49C5, 0x52E6, 0xABC6, 0xA9B36ECCC716)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IKeyValuePair_String_String {
    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Value() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Value(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IMapChangedEventArgs<String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapChangedEventArgs_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60141EFB, 0xF2F9, 0x5377, 0x96FD, 0xF8C60D9558B5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapChangedEventArgs_String {
    internal func get_CollectionChange() throws -> WindowsFoundationCollections_CollectionChange {
        var _result: SWRT_WindowsFoundationCollections_CollectionChange = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CollectionChange(this, &_result))
        return WindowsFoundationCollections_CollectionChange.fromABI(_result)
    }

    internal func get_Key() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Key(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Foundation.Collections.IMapView<String, Windows.Foundation.Collections.IVectorView<Windows.Data.Text.TextSegment>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapView_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x91D443D6, 0x3777, 0x5102, 0xB0BC, 0x3D4183A26FF9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapView_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment {
    internal func lookup(_ key: Swift.String) throws -> WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.TextSegment.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?>?) throws {
        var first_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_IVectorView_TextSegment.release(&first_abi) }
        var second_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_IVectorView_TextSegment.release(&second_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Split(this, &first_abi, &second_abi))
        first = WindowsFoundationCollections_IMapViewBinding.String_IVectorView_TextSegment.fromABI(consuming: &first_abi)
        second = WindowsFoundationCollections_IMapViewBinding.String_IVectorView_TextSegment.fromABI(consuming: &second_abi)
    }
}

// MARK: Windows.Foundation.Collections.IMapView<String, Object>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapView_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBB78502A, 0xF79D, 0x54FA, 0x92C9, 0x90C5039FDF7E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapView_String_IInspectable {
    internal func lookup(_ key: Swift.String) throws -> WindowsRuntime.IInspectable? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsRuntime.IInspectable?>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsRuntime.IInspectable?>?) throws {
        var first_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_IInspectable>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_Object.release(&first_abi) }
        var second_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_IInspectable>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_Object.release(&second_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Split(this, &first_abi, &second_abi))
        first = WindowsFoundationCollections_IMapViewBinding.String_Object.fromABI(consuming: &first_abi)
        second = WindowsFoundationCollections_IMapViewBinding.String_Object.fromABI(consuming: &second_abi)
    }
}

// MARK: Windows.Foundation.Collections.IMapView<String, Windows.UI.Composition.ICompositionAnimationBase>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapView_String_WindowsUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB65E6ECE, 0xD9AF, 0x5D4A, 0xABAA, 0xC08E34A5F815)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapView_String_WindowsUIComposition_ICompositionAnimationBase {
    internal func lookup(_ key: Swift.String) throws -> WindowsUIComposition_ICompositionAnimationBase? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsUIComposition_ICompositionAnimationBaseBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsUIComposition_ICompositionAnimationBase?>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsUIComposition_ICompositionAnimationBase?>?) throws {
        var first_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsUIComposition_ICompositionAnimationBase>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.release(&first_abi) }
        var second_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsUIComposition_ICompositionAnimationBase>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.release(&second_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Split(this, &first_abi, &second_abi))
        first = WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.fromABI(consuming: &first_abi)
        second = WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.fromABI(consuming: &second_abi)
    }
}

// MARK: Windows.Foundation.Collections.IMapView<String, Windows.Storage.Streams.RandomAccessStreamReference>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0A4CE7A5, 0xDFE0, 0x5796, 0xA438, 0xEFFDFAA31F1B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference {
    internal func lookup(_ key: Swift.String) throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>?) throws {
        var first_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_RandomAccessStreamReference.release(&first_abi) }
        var second_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_RandomAccessStreamReference.release(&second_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Split(this, &first_abi, &second_abi))
        first = WindowsFoundationCollections_IMapViewBinding.String_RandomAccessStreamReference.fromABI(consuming: &first_abi)
        second = WindowsFoundationCollections_IMapViewBinding.String_RandomAccessStreamReference.fromABI(consuming: &second_abi)
    }
}

// MARK: Windows.Foundation.Collections.IMapView<String, String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMapView_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAC7F26F2, 0xFEB7, 0x5B2A, 0x8AC4, 0x345BC62CAEDE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMapView_String_String {
    internal func lookup(_ key: Swift.String) throws -> Swift.String {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, Swift.String>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, Swift.String>?) throws {
        var first_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_String>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_String.release(&first_abi) }
        var second_abi: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_String>? = nil
        defer { WindowsFoundationCollections_IMapViewBinding.String_String.release(&second_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Split(this, &first_abi, &second_abi))
        first = WindowsFoundationCollections_IMapViewBinding.String_String.fromABI(consuming: &first_abi)
        second = WindowsFoundationCollections_IMapViewBinding.String_String.fromABI(consuming: &second_abi)
    }
}

// MARK: Windows.Foundation.Collections.IMap<String, String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMap_String_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF6D1F700, 0x49C2, 0x52AE, 0x8154, 0x826F9908773C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMap_String_String {
    internal func lookup(_ key: Swift.String) throws -> Swift.String {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_String.fromABI(consuming: &_result)
    }

    internal func insert(_ key: Swift.String, _ value: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Insert(this, key_abi, value_abi, &_result))
        return _result
    }

    internal func remove(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, key_abi))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }
}

// MARK: Windows.Foundation.Collections.IMap<String, Windows.Storage.Streams.RandomAccessStreamReference>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMap_String_WindowsStorageStreams_RandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE5D2CCFC, 0x825A, 0x5A8E, 0x82AA, 0x095ED5DBD5D1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMap_String_WindowsStorageStreams_RandomAccessStreamReference {
    internal func lookup(_ key: Swift.String) throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, WindowsStorageStreams_RandomAccessStreamReference?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsStorageStreams_RandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_RandomAccessStreamReference.fromABI(consuming: &_result)
    }

    internal func insert(_ key: Swift.String, _ value: WindowsStorageStreams_RandomAccessStreamReference?) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var value_abi = try WindowsStorageStreams_RandomAccessStreamReferenceBinding.toABI(value)
        defer { WindowsStorageStreams_RandomAccessStreamReferenceBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Insert(this, key_abi, value_abi, &_result))
        return _result
    }

    internal func remove(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, key_abi))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }
}

// MARK: Windows.Foundation.Collections.IMap<String, Object>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMap_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1B0D3570, 0x0877, 0x5EC2, 0x8A2C, 0x3B9539506ACA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMap_String_IInspectable {
    internal func lookup(_ key: Swift.String) throws -> WindowsRuntime.IInspectable? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, WindowsRuntime.IInspectable?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_Object.fromABI(consuming: &_result)
    }

    internal func insert(_ key: Swift.String, _ value: WindowsRuntime.IInspectable?) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Insert(this, key_abi, value_abi, &_result))
        return _result
    }

    internal func remove(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, key_abi))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }
}

// MARK: Windows.Foundation.Collections.IMap<String, Windows.Foundation.Collections.IVectorView<Windows.Data.Text.TextSegment>>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMap_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA31B6540, 0xB2B1, 0x536D, 0x818F, 0x8ADE7051C3B3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMap_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment {
    internal func lookup(_ key: Swift.String) throws -> WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.TextSegment.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_IVectorView_TextSegment.fromABI(consuming: &_result)
    }

    internal func insert(_ key: Swift.String, _ value: WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var value_abi = try WindowsFoundationCollections_IVectorViewBinding.TextSegment.toABI(value)
        defer { WindowsFoundationCollections_IVectorViewBinding.TextSegment.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Insert(this, key_abi, value_abi, &_result))
        return _result
    }

    internal func remove(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, key_abi))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }
}

// MARK: Windows.Foundation.Collections.IMap<String, Windows.UI.Composition.ICompositionAnimationBase>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IMap_String_WindowsUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4BA9AA1D, 0x57AC, 0x54DE, 0xA807, 0xB52E689BFC04)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IMap_String_WindowsUIComposition_ICompositionAnimationBase {
    internal func lookup(_ key: Swift.String) throws -> WindowsUIComposition_ICompositionAnimationBase? {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Lookup(this, key_abi, &_result))
        return WindowsUIComposition_ICompositionAnimationBaseBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasKey(this, key_abi, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, WindowsUIComposition_ICompositionAnimationBase?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMapView_String_WindowsUIComposition_ICompositionAnimationBase>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IMapViewBinding.String_ICompositionAnimationBase.fromABI(consuming: &_result)
    }

    internal func insert(_ key: Swift.String, _ value: WindowsUIComposition_ICompositionAnimationBase?) throws -> Swift.Bool {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var value_abi = try WindowsUIComposition_ICompositionAnimationBaseBinding.toABI(value)
        defer { WindowsUIComposition_ICompositionAnimationBaseBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Insert(this, key_abi, value_abi, &_result))
        return _result
    }

    internal func remove(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, key_abi))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }
}

// MARK: Windows.Foundation.Collections.IObservableMap<String, Object>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IObservableMap_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x236AAC9D, 0xFB12, 0x5C4D, 0xA41C, 0x9E445FB4D7EC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IObservableMap_String_IInspectable {
    internal func add_MapChanged(_ vhnd: WindowsFoundationCollections_MapChangedEventHandler<Swift.String, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var vhnd_abi = try WindowsFoundationCollections_MapChangedEventHandlerBinding.String_Object.toABI(vhnd)
        defer { WindowsFoundationCollections_MapChangedEventHandlerBinding.String_Object.release(&vhnd_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_MapChanged(this, vhnd_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    internal func remove_MapChanged(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_MapChanged(this, token_abi))
    }
}

// MARK: Windows.Foundation.Collections.IPropertySet

public func uuidof(_: SWRT_WindowsFoundationCollections_IPropertySet.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8A43ED9F, 0xF4E6, 0x4421, 0xACF9, 0x1DAB2986820C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IPropertySet {
}

// MARK: Windows.Foundation.Collections.IVectorChangedEventArgs

public func uuidof(_: SWRT_WindowsFoundationCollections_IVectorChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x575933DF, 0x34FE, 0x4480, 0xAF15, 0x07691F3D5D9B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorChangedEventArgs {
    public func get_CollectionChange() throws -> WindowsFoundationCollections_CollectionChange {
        var _result: SWRT_WindowsFoundationCollections_CollectionChange = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CollectionChange(this, &_result))
        return WindowsFoundationCollections_CollectionChange.fromABI(_result)
    }

    public func get_Index() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Index(this, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageFolder>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE20DEBC6, 0xDC4E, 0x542E, 0xA2E7, 0xA24D19C8DD62)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsStorage_StorageFolder? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsStorage_StorageFolderBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsStorage_StorageFolder?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsStorage_StorageFolderBinding.toABI(value)
        defer { WindowsStorage_StorageFolderBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsStorage_StorageFolder?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_StorageFolderBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_StorageFolderBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageFile>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x80646519, 0x5E2A, 0x595D, 0xA8CD, 0x2A24B4067F1B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsStorage_StorageFile? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsStorage_StorageFileBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsStorage_StorageFile?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsStorage_StorageFileBinding.toABI(value)
        defer { WindowsStorage_StorageFileBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsStorage_StorageFile?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_StorageFileBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_StorageFileBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.UI.Input.PointerPoint>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsUIInput_PointerPoint.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF0F57411, 0x7786, 0x5174, 0x8752, 0x4C5E834B6DA2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsUIInput_PointerPoint {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsUIInput_PointerPoint? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsUIInput_PointerPointBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsUIInput_PointerPoint?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsUIInput_PointerPointBinding.toABI(value)
        defer { WindowsUIInput_PointerPointBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsUIInput_PointerPoint?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageLibraryChange>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0D3879E2, 0x5C7E, 0x5B6C, 0x954D, 0x10C6DA95FBFF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsStorage_StorageLibraryChange? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageLibraryChange>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsStorage_StorageLibraryChangeBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsStorage_StorageLibraryChange?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsStorage_StorageLibraryChangeBinding.toABI(value)
        defer { WindowsStorage_StorageLibraryChangeBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsStorage_StorageLibraryChange?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_StorageLibraryChangeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_StorageLibraryChangeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Devices.Input.PointerDeviceUsage>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesInput_PointerDeviceUsage.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8E5A2C7E, 0x3830, 0x50D5, 0x92BA, 0x3163C89CBBD0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesInput_PointerDeviceUsage {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsDevicesInput_PointerDeviceUsage {
        var _result: SWRT_WindowsDevicesInput_PointerDeviceUsage = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsDevicesInput_PointerDeviceUsage.fromABI(_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsDevicesInput_PointerDeviceUsage, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        let value_abi = WindowsDevicesInput_PointerDeviceUsage.toABI(value)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsDevicesInput_PointerDeviceUsage]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceUsage>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceUsage>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Storage.Search.SortEntry>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsStorageSearch_SortEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x823C7604, 0xB37B, 0x5465, 0xA169, 0x29497893CDB9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsStorageSearch_SortEntry {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsStorageSearch_SortEntry {
        var _result: SWRT_WindowsStorageSearch_SortEntry = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsStorageSearch_SortEntry.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsStorageSearch_SortEntry, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsStorageSearch_SortEntry.toABI(value)
        defer { WindowsStorageSearch_SortEntry.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsStorageSearch_SortEntry]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7BCA64FD, 0x150C, 0x5D50, 0xB56B, 0x9F4F474C5930)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_Float {
    internal func getAt(_ index: Swift.UInt32) throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return _result
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: Swift.Float, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.Float]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Devices.Input.PointerDevice>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesInput_PointerDevice.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCF5674F1, 0x9808, 0x5A2B, 0x80B8, 0x5684ED0EA816)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesInput_PointerDevice {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsDevicesInput_PointerDevice? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsDevicesInput_IPointerDevice>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsDevicesInput_PointerDeviceBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsDevicesInput_PointerDevice?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsDevicesInput_PointerDeviceBinding.toABI(value)
        defer { WindowsDevicesInput_PointerDeviceBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsDevicesInput_PointerDevice?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsDevicesInput_PointerDeviceBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Storage.IStorageItem>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x85575A41, 0x06CB, 0x58D0, 0xB98A, 0x7C8F06E6E9D7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsStorage_IStorageItem? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsStorage_IStorageItemBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsStorage_IStorageItem?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsStorage_IStorageItemBinding.toABI(value)
        defer { WindowsStorage_IStorageItemBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsStorage_IStorageItem?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorage_IStorageItemBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorage_IStorageItemBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE7E27EF4, 0x4EC6, 0x5B8A, 0xA858, 0x561B9534A885)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsUIComposition_CompositionShape {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsUIComposition_CompositionShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsUIComposition_CompositionShapeBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsUIComposition_CompositionShape?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsUIComposition_CompositionShapeBinding.toABI(value)
        defer { WindowsUIComposition_CompositionShapeBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsUIComposition_CompositionShape?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Foundation.IWwwFormUrlDecoderEntry>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsFoundation_IWwwFormUrlDecoderEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB1F00D3B, 0x1F06, 0x5117, 0x93EA, 0x2A0D79116701)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsFoundation_IWwwFormUrlDecoderEntry {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsFoundation_IWwwFormUrlDecoderEntry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IWwwFormUrlDecoderEntry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsFoundation_IWwwFormUrlDecoderEntryBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsFoundation_IWwwFormUrlDecoderEntry?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsFoundation_IWwwFormUrlDecoderEntryBinding.toABI(value)
        defer { WindowsFoundation_IWwwFormUrlDecoderEntryBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsFoundation_IWwwFormUrlDecoderEntry?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsFoundation_IWwwFormUrlDecoderEntryBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_IWwwFormUrlDecoderEntryBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x801D95C7, 0x7CE2, 0x55D7, 0xA62F, 0x2FF94C544034)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsUIComposition_CompositionColorGradientStop {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsUIComposition_CompositionColorGradientStop?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { WindowsUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsUIComposition_CompositionColorGradientStop?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2F13C006, 0xA03A, 0x5F69, 0xB090, 0x75A43E33423E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_String {
    internal func getAt(_ index: Swift.UInt32) throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: Swift.String, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.String]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.System.UserWatcherUpdateKind>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsSystem_UserWatcherUpdateKind.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x92B358CD, 0xC1CA, 0x5552, 0x9E2E, 0x67E2D6EAD4D1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsSystem_UserWatcherUpdateKind {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsSystem_UserWatcherUpdateKind {
        var _result: SWRT_WindowsSystem_UserWatcherUpdateKind = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsSystem_UserWatcherUpdateKind.fromABI(_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsSystem_UserWatcherUpdateKind, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        let value_abi = WindowsSystem_UserWatcherUpdateKind.toABI(value)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsSystem_UserWatcherUpdateKind]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsSystem_UserWatcherUpdateKind>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsSystem_UserWatcherUpdateKind>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.UI.Notifications.ShownTileNotification>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsUINotifications_ShownTileNotification.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2B23BAA9, 0x1D54, 0x5440, 0xBD32, 0x86ED70F15C9E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsUINotifications_ShownTileNotification {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsUINotifications_ShownTileNotification? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUINotifications_IShownTileNotification>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsUINotifications_ShownTileNotificationBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsUINotifications_ShownTileNotification?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsUINotifications_ShownTileNotificationBinding.toABI(value)
        defer { WindowsUINotifications_ShownTileNotificationBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsUINotifications_ShownTileNotification?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUINotifications_ShownTileNotificationBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUINotifications_ShownTileNotificationBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.System.User>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsSystem_User.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8CBD762A, 0x1222, 0x5EE5, 0xB745, 0x489E7A42C6EC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsSystem_User {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsSystem_User? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUser>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsSystem_UserBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsSystem_User?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsSystem_UserBinding.toABI(value)
        defer { WindowsSystem_UserBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsSystem_User?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsSystem_UserBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsSystem_UserBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVectorView<Windows.Data.Text.TextSegment>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2F245F9D, 0xEB5F, 0x5641, 0x9DCC, 0x6AB1946CC7E6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsDataText_TextSegment {
        var _result: SWRT_WindowsDataText_TextSegment = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsDataText_TextSegment.fromABI(_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func indexOf(_ value: WindowsDataText_TextSegment, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        let value_abi = WindowsDataText_TextSegment.toABI(value)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsDataText_TextSegment]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsDataText_TextSegment>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsDataText_TextSegment>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }
}

// MARK: Windows.Foundation.Collections.IVector<Windows.UI.Composition.CompositionColorGradientStop>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_WindowsUIComposition_CompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBF2E107E, 0xF3DB, 0x56CD, 0x91ED, 0xC1129406D552)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_WindowsUIComposition_CompositionColorGradientStop {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<WindowsUIComposition_CompositionColorGradientStop?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsUIComposition_CompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.CompositionColorGradientStop.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: WindowsUIComposition_CompositionColorGradientStop?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { WindowsUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: WindowsUIComposition_CompositionColorGradientStop?) throws {
        var value_abi = try WindowsUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { WindowsUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value_abi))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: WindowsUIComposition_CompositionColorGradientStop?) throws {
        var value_abi = try WindowsUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { WindowsUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value_abi))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: WindowsUIComposition_CompositionColorGradientStop?) throws {
        var value_abi = try WindowsUIComposition_CompositionColorGradientStopBinding.toABI(value)
        defer { WindowsUIComposition_CompositionColorGradientStopBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value_abi))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsUIComposition_CompositionColorGradientStop?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [WindowsUIComposition_CompositionColorGradientStop?]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionColorGradientStopBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IVector<String>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_String.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x98B9ACC1, 0x4B56, 0x532E, 0xAC73, 0x03D5291CCA90)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_String {
    internal func getAt(_ index: Swift.UInt32) throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.String.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: Swift.String, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value_abi))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value_abi))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value_abi))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.String]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [Swift.String]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IVector<Windows.Storage.Search.SortEntry>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_WindowsStorageSearch_SortEntry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD8EA401B, 0x47B3, 0x5254, 0x84F4, 0xEEA10C4CF068)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_WindowsStorageSearch_SortEntry {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsStorageSearch_SortEntry {
        var _result: SWRT_WindowsStorageSearch_SortEntry = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsStorageSearch_SortEntry.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<WindowsStorageSearch_SortEntry>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsStorageSearch_SortEntry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.SortEntry.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: WindowsStorageSearch_SortEntry, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsStorageSearch_SortEntry.toABI(value)
        defer { WindowsStorageSearch_SortEntry.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: WindowsStorageSearch_SortEntry) throws {
        var value_abi = try WindowsStorageSearch_SortEntry.toABI(value)
        defer { WindowsStorageSearch_SortEntry.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value_abi))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: WindowsStorageSearch_SortEntry) throws {
        var value_abi = try WindowsStorageSearch_SortEntry.toABI(value)
        defer { WindowsStorageSearch_SortEntry.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value_abi))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: WindowsStorageSearch_SortEntry) throws {
        var value_abi = try WindowsStorageSearch_SortEntry.toABI(value)
        defer { WindowsStorageSearch_SortEntry.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value_abi))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsStorageSearch_SortEntry]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [WindowsStorageSearch_SortEntry]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsStorageSearch_SortEntry>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IVector<Windows.UI.Composition.CompositionShape>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_WindowsUIComposition_CompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x42D4219A, 0xBE1B, 0x5091, 0x8F1E, 0x90270840FC2D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_WindowsUIComposition_CompositionShape {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsUIComposition_CompositionShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsUIComposition_CompositionShapeBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<WindowsUIComposition_CompositionShape?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.CompositionShape.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: WindowsUIComposition_CompositionShape?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsUIComposition_CompositionShapeBinding.toABI(value)
        defer { WindowsUIComposition_CompositionShapeBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: WindowsUIComposition_CompositionShape?) throws {
        var value_abi = try WindowsUIComposition_CompositionShapeBinding.toABI(value)
        defer { WindowsUIComposition_CompositionShapeBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value_abi))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: WindowsUIComposition_CompositionShape?) throws {
        var value_abi = try WindowsUIComposition_CompositionShapeBinding.toABI(value)
        defer { WindowsUIComposition_CompositionShapeBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value_abi))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: WindowsUIComposition_CompositionShape?) throws {
        var value_abi = try WindowsUIComposition_CompositionShapeBinding.toABI(value)
        defer { WindowsUIComposition_CompositionShapeBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value_abi))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsUIComposition_CompositionShape?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [WindowsUIComposition_CompositionShape?]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIComposition_CompositionShapeBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IVector<Windows.UI.Input.PointerPoint>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_WindowsUIInput_PointerPoint.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDFA655CF, 0xFDE7, 0x5048, 0xB4BF, 0xC909231B7EDB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_WindowsUIInput_PointerPoint {
    internal func getAt(_ index: Swift.UInt32) throws -> WindowsUIInput_PointerPoint? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return WindowsUIInput_PointerPointBinding.fromABI(consuming: &_result)
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<WindowsUIInput_PointerPoint?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsUIInput_PointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.PointerPoint.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: WindowsUIInput_PointerPoint?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var value_abi = try WindowsUIInput_PointerPointBinding.toABI(value)
        defer { WindowsUIInput_PointerPointBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value_abi, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: WindowsUIInput_PointerPoint?) throws {
        var value_abi = try WindowsUIInput_PointerPointBinding.toABI(value)
        defer { WindowsUIInput_PointerPointBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value_abi))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: WindowsUIInput_PointerPoint?) throws {
        var value_abi = try WindowsUIInput_PointerPointBinding.toABI(value)
        defer { WindowsUIInput_PointerPointBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value_abi))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: WindowsUIInput_PointerPoint?) throws {
        var value_abi = try WindowsUIInput_PointerPointBinding.toABI(value)
        defer { WindowsUIInput_PointerPointBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value_abi))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsUIInput_PointerPoint?]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [WindowsUIInput_PointerPoint?]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsUIInput_PointerPointBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.IVector<Single>

internal func uuidof(_: SWRT_WindowsFoundationCollections_IVector_Float.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x61CF693F, 0xDB4C, 0x579F, 0xB905, 0x5DD3D23CFD4D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_IVector_Float {
    internal func getAt(_ index: Swift.UInt32) throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAt(this, index, &_result))
        return _result
    }

    internal func get_Size() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    internal func getView() throws -> WindowsFoundationCollections_IVectorView<Swift.Float>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_Float>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetView(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.Single.fromABI(consuming: &_result)
    }

    internal func indexOf(_ value: Swift.Float, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IndexOf(this, value, &index, &_result))
        return _result
    }

    internal func setAt(_ index: Swift.UInt32, _ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetAt(this, index, value))
    }

    internal func insertAt(_ index: Swift.UInt32, _ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAt(this, index, value))
    }

    internal func removeAt(_ index: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAt(this, index))
    }

    internal func append(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Append(this, value))
    }

    internal func removeAtEnd() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAtEnd(this))
    }

    internal func clear() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Clear(this))
    }

    internal func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.Float]) throws -> Swift.UInt32 {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMany(this, startIndex, items_abi.count, items_abi.pointer, &_result))
        return _result
    }

    internal func replaceAll(_ items: [Swift.Float]) throws {
        var items_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.toABI(items)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&items_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceAll(this, items_abi.count, items_abi.pointer))
    }
}

// MARK: Windows.Foundation.Collections.MapChangedEventHandler<String, Object>

internal func uuidof(_: SWRT_WindowsFoundationCollections_MapChangedEventHandler_String_IInspectable.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x24F981E5, 0xDDCA, 0x538D, 0xAADA, 0xA59906084CF1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundationCollections_MapChangedEventHandler_String_IInspectable {
    internal func invoke(_ sender: WindowsFoundationCollections_IObservableMap<Swift.String, WindowsRuntime.IInspectable?>?, _ event: WindowsFoundationCollections_IMapChangedEventArgs<Swift.String>?) throws {
        var sender_abi = try WindowsFoundationCollections_IObservableMapBinding.String_Object.toABI(sender)
        defer { WindowsFoundationCollections_IObservableMapBinding.String_Object.release(&sender_abi) }
        var event_abi = try WindowsFoundationCollections_IMapChangedEventArgsBinding.String.toABI(event)
        defer { WindowsFoundationCollections_IMapChangedEventArgsBinding.String.release(&event_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, sender_abi, event_abi))
    }
}

// MARK: Windows.Graphics.IGeometrySource2D

public func uuidof(_: SWRT_WindowsGraphics_IGeometrySource2D.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCAFF7902, 0x670C, 0x4181, 0xA624, 0xDA977203B845)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphics_IGeometrySource2D {
}

// MARK: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface

public func uuidof(_: SWRT_WindowsGraphicsDirectXDirect3D11_IDirect3DSurface.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0BF4A146, 0x13C1, 0x4694, 0xBEE3, 0x7ABF15EAF586)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphicsDirectXDirect3D11_IDirect3DSurface {
    public func get_Description() throws -> WindowsGraphicsDirectXDirect3D11_Direct3DSurfaceDescription {
        var _result: SWRT_WindowsGraphicsDirectXDirect3D11_Direct3DSurfaceDescription = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Description(this, &_result))
        return WindowsGraphicsDirectXDirect3D11_Direct3DSurfaceDescription.fromABI(_result)
    }
}

// MARK: Windows.Graphics.Effects.IGraphicsEffect

public func uuidof(_: SWRT_WindowsGraphicsEffects_IGraphicsEffect.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCB51C0CE, 0x8FE6, 0x4636, 0xB202, 0x861FAA07D8F3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphicsEffects_IGraphicsEffect {
    public func get_Name() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Name(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Name(_ name: Swift.String) throws {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Name(this, name_abi))
    }
}

// MARK: Windows.Graphics.Effects.IGraphicsEffectSource

public func uuidof(_: SWRT_WindowsGraphicsEffects_IGraphicsEffectSource.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2D8F9DDC, 0x4339, 0x4EB9, 0x9216, 0xF9DEB75658A2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphicsEffects_IGraphicsEffectSource {
}

// MARK: Windows.Graphics.Imaging.IBitmapBuffer

public func uuidof(_: SWRT_WindowsGraphicsImaging_IBitmapBuffer.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA53E04C4, 0x399C, 0x438C, 0xB28F, 0xA63A6B83D1A1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphicsImaging_IBitmapBuffer {
    public func getPlaneCount() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPlaneCount(this, &_result))
        return _result
    }

    public func getPlaneDescription(_ index: Swift.Int32) throws -> WindowsGraphicsImaging_BitmapPlaneDescription {
        var _result: SWRT_WindowsGraphicsImaging_BitmapPlaneDescription = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPlaneDescription(this, index, &_result))
        return WindowsGraphicsImaging_BitmapPlaneDescription.fromABI(_result)
    }
}

// MARK: Windows.Graphics.Imaging.ISoftwareBitmap

public func uuidof(_: SWRT_WindowsGraphicsImaging_ISoftwareBitmap.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x689E0708, 0x7EEF, 0x483F, 0x963F, 0xDA938818E073)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphicsImaging_ISoftwareBitmap {
    public func get_BitmapPixelFormat() throws -> WindowsGraphicsImaging_BitmapPixelFormat {
        var _result: SWRT_WindowsGraphicsImaging_BitmapPixelFormat = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BitmapPixelFormat(this, &_result))
        return WindowsGraphicsImaging_BitmapPixelFormat.fromABI(_result)
    }

    public func get_BitmapAlphaMode() throws -> WindowsGraphicsImaging_BitmapAlphaMode {
        var _result: SWRT_WindowsGraphicsImaging_BitmapAlphaMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BitmapAlphaMode(this, &_result))
        return WindowsGraphicsImaging_BitmapAlphaMode.fromABI(_result)
    }

    public func get_PixelWidth() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PixelWidth(this, &_result))
        return _result
    }

    public func get_PixelHeight() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PixelHeight(this, &_result))
        return _result
    }

    public func get_IsReadOnly() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsReadOnly(this, &_result))
        return _result
    }

    public func put_DpiX(_ value: Swift.Double) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DpiX(this, value))
    }

    public func get_DpiX() throws -> Swift.Double {
        var _result: Swift.Double = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DpiX(this, &_result))
        return _result
    }

    public func put_DpiY(_ value: Swift.Double) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DpiY(this, value))
    }

    public func get_DpiY() throws -> Swift.Double {
        var _result: Swift.Double = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DpiY(this, &_result))
        return _result
    }

    public func lockBuffer(_ mode: WindowsGraphicsImaging_BitmapBufferAccessMode) throws -> WindowsGraphicsImaging_BitmapBuffer? {
        let mode_abi = WindowsGraphicsImaging_BitmapBufferAccessMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_IBitmapBuffer>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.LockBuffer(this, mode_abi, &_result))
        return WindowsGraphicsImaging_BitmapBufferBinding.fromABI(consuming: &_result)
    }

    public func copyTo(_ bitmap: WindowsGraphicsImaging_SoftwareBitmap?) throws {
        var bitmap_abi = try WindowsGraphicsImaging_SoftwareBitmapBinding.toABI(bitmap)
        defer { WindowsGraphicsImaging_SoftwareBitmapBinding.release(&bitmap_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CopyTo(this, bitmap_abi))
    }

    public func copyFromBuffer(_ buffer: WindowsStorageStreams_IBuffer?) throws {
        var buffer_abi = try WindowsStorageStreams_IBufferBinding.toABI(buffer)
        defer { WindowsStorageStreams_IBufferBinding.release(&buffer_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CopyFromBuffer(this, buffer_abi))
    }

    public func copyToBuffer(_ buffer: WindowsStorageStreams_IBuffer?) throws {
        var buffer_abi = try WindowsStorageStreams_IBufferBinding.toABI(buffer)
        defer { WindowsStorageStreams_IBufferBinding.release(&buffer_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CopyToBuffer(this, buffer_abi))
    }

    public func getReadOnlyView() throws -> WindowsGraphicsImaging_SoftwareBitmap? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetReadOnlyView(this, &_result))
        return WindowsGraphicsImaging_SoftwareBitmapBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Graphics.Imaging.ISoftwareBitmapFactory

public func uuidof(_: SWRT_WindowsGraphicsImaging_ISoftwareBitmapFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC99FEB69, 0x2D62, 0x4D47, 0xA6B3, 0x4FDB6A07FDF8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphicsImaging_ISoftwareBitmapFactory {
    public func create(_ format: WindowsGraphicsImaging_BitmapPixelFormat, _ width: Swift.Int32, _ height: Swift.Int32) throws -> COM.COMReference<SWRT_WindowsGraphicsImaging_ISoftwareBitmap> {
        let format_abi = WindowsGraphicsImaging_BitmapPixelFormat.toABI(format)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Create(this, format_abi, width, height, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }

    public func createWithAlpha(_ format: WindowsGraphicsImaging_BitmapPixelFormat, _ width: Swift.Int32, _ height: Swift.Int32, _ alpha: WindowsGraphicsImaging_BitmapAlphaMode) throws -> COM.COMReference<SWRT_WindowsGraphicsImaging_ISoftwareBitmap> {
        let format_abi = WindowsGraphicsImaging_BitmapPixelFormat.toABI(format)
        let alpha_abi = WindowsGraphicsImaging_BitmapAlphaMode.toABI(alpha)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWithAlpha(this, format_abi, width, height, alpha_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.Graphics.Imaging.ISoftwareBitmapStatics

public func uuidof(_: SWRT_WindowsGraphicsImaging_ISoftwareBitmapStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDF0385DB, 0x672F, 0x4A9D, 0x806E, 0xC2442F343E86)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsGraphicsImaging_ISoftwareBitmapStatics {
    public func copy(_ source: WindowsGraphicsImaging_SoftwareBitmap?) throws -> WindowsGraphicsImaging_SoftwareBitmap? {
        var source_abi = try WindowsGraphicsImaging_SoftwareBitmapBinding.toABI(source)
        defer { WindowsGraphicsImaging_SoftwareBitmapBinding.release(&source_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Copy(this, source_abi, &_result))
        return WindowsGraphicsImaging_SoftwareBitmapBinding.fromABI(consuming: &_result)
    }

    public func convert(_ source: WindowsGraphicsImaging_SoftwareBitmap?, _ format: WindowsGraphicsImaging_BitmapPixelFormat) throws -> WindowsGraphicsImaging_SoftwareBitmap? {
        var source_abi = try WindowsGraphicsImaging_SoftwareBitmapBinding.toABI(source)
        defer { WindowsGraphicsImaging_SoftwareBitmapBinding.release(&source_abi) }
        let format_abi = WindowsGraphicsImaging_BitmapPixelFormat.toABI(format)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Convert(this, source_abi, format_abi, &_result))
        return WindowsGraphicsImaging_SoftwareBitmapBinding.fromABI(consuming: &_result)
    }

    public func convertWithAlpha(_ source: WindowsGraphicsImaging_SoftwareBitmap?, _ format: WindowsGraphicsImaging_BitmapPixelFormat, _ alpha: WindowsGraphicsImaging_BitmapAlphaMode) throws -> WindowsGraphicsImaging_SoftwareBitmap? {
        var source_abi = try WindowsGraphicsImaging_SoftwareBitmapBinding.toABI(source)
        defer { WindowsGraphicsImaging_SoftwareBitmapBinding.release(&source_abi) }
        let format_abi = WindowsGraphicsImaging_BitmapPixelFormat.toABI(format)
        let alpha_abi = WindowsGraphicsImaging_BitmapAlphaMode.toABI(alpha)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ConvertWithAlpha(this, source_abi, format_abi, alpha_abi, &_result))
        return WindowsGraphicsImaging_SoftwareBitmapBinding.fromABI(consuming: &_result)
    }

    public func createCopyFromBuffer(_ source: WindowsStorageStreams_IBuffer?, _ format: WindowsGraphicsImaging_BitmapPixelFormat, _ width: Swift.Int32, _ height: Swift.Int32) throws -> WindowsGraphicsImaging_SoftwareBitmap? {
        var source_abi = try WindowsStorageStreams_IBufferBinding.toABI(source)
        defer { WindowsStorageStreams_IBufferBinding.release(&source_abi) }
        let format_abi = WindowsGraphicsImaging_BitmapPixelFormat.toABI(format)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCopyFromBuffer(this, source_abi, format_abi, width, height, &_result))
        return WindowsGraphicsImaging_SoftwareBitmapBinding.fromABI(consuming: &_result)
    }

    public func createCopyWithAlphaFromBuffer(_ source: WindowsStorageStreams_IBuffer?, _ format: WindowsGraphicsImaging_BitmapPixelFormat, _ width: Swift.Int32, _ height: Swift.Int32, _ alpha: WindowsGraphicsImaging_BitmapAlphaMode) throws -> WindowsGraphicsImaging_SoftwareBitmap? {
        var source_abi = try WindowsStorageStreams_IBufferBinding.toABI(source)
        defer { WindowsStorageStreams_IBufferBinding.release(&source_abi) }
        let format_abi = WindowsGraphicsImaging_BitmapPixelFormat.toABI(format)
        let alpha_abi = WindowsGraphicsImaging_BitmapAlphaMode.toABI(alpha)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsGraphicsImaging_ISoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCopyWithAlphaFromBuffer(this, source_abi, format_abi, width, height, alpha_abi, &_result))
        return WindowsGraphicsImaging_SoftwareBitmapBinding.fromABI(consuming: &_result)
    }

    public func createCopyFromSurfaceAsync(_ surface: WindowsGraphicsDirectXDirect3D11_IDirect3DSurface?) throws -> WindowsFoundation_IAsyncOperation<WindowsGraphicsImaging_SoftwareBitmap?>? {
        var surface_abi = try WindowsGraphicsDirectXDirect3D11_IDirect3DSurfaceBinding.toABI(surface)
        defer { WindowsGraphicsDirectXDirect3D11_IDirect3DSurfaceBinding.release(&surface_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsGraphicsImaging_SoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCopyFromSurfaceAsync(this, surface_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.SoftwareBitmap.fromABI(consuming: &_result)
    }

    public func createCopyWithAlphaFromSurfaceAsync(_ surface: WindowsGraphicsDirectXDirect3D11_IDirect3DSurface?, _ alpha: WindowsGraphicsImaging_BitmapAlphaMode) throws -> WindowsFoundation_IAsyncOperation<WindowsGraphicsImaging_SoftwareBitmap?>? {
        var surface_abi = try WindowsGraphicsDirectXDirect3D11_IDirect3DSurfaceBinding.toABI(surface)
        defer { WindowsGraphicsDirectXDirect3D11_IDirect3DSurfaceBinding.release(&surface_abi) }
        let alpha_abi = WindowsGraphicsImaging_BitmapAlphaMode.toABI(alpha)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsGraphicsImaging_SoftwareBitmap>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCopyWithAlphaFromSurfaceAsync(this, surface_abi, alpha_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.SoftwareBitmap.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFile

public func uuidof(_: SWRT_WindowsStorage_IStorageFile.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFA3F6186, 0x4214, 0x428C, 0xA64C, 0x14C9AC7315EA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFile {
    public func get_FileType() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FileType(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_ContentType() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentType(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func openAsync(_ accessMode: WindowsStorage_FileAccessMode) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStream?>? {
        let accessMode_abi = WindowsStorage_FileAccessMode.toABI(accessMode)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.OpenAsync(this, accessMode_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IRandomAccessStream.fromABI(consuming: &_result)
    }

    public func openTransactedWriteAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageStreamTransaction?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageStreamTransaction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.OpenTransactedWriteAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageStreamTransaction.fromABI(consuming: &_result)
    }

    public func copyOverloadDefaultNameAndOptions(_ destinationFolder: WindowsStorage_IStorageFolder?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var destinationFolder_abi = try WindowsStorage_IStorageFolderBinding.toABI(destinationFolder)
        defer { WindowsStorage_IStorageFolderBinding.release(&destinationFolder_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CopyOverloadDefaultNameAndOptions(this, destinationFolder_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func copyOverloadDefaultOptions(_ destinationFolder: WindowsStorage_IStorageFolder?, _ desiredNewName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var destinationFolder_abi = try WindowsStorage_IStorageFolderBinding.toABI(destinationFolder)
        defer { WindowsStorage_IStorageFolderBinding.release(&destinationFolder_abi) }
        var desiredNewName_abi = try WindowsRuntime.StringBinding.toABI(desiredNewName)
        defer { WindowsRuntime.StringBinding.release(&desiredNewName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CopyOverloadDefaultOptions(this, destinationFolder_abi, desiredNewName_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func copyOverload(_ destinationFolder: WindowsStorage_IStorageFolder?, _ desiredNewName: Swift.String, _ option: WindowsStorage_NameCollisionOption) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var destinationFolder_abi = try WindowsStorage_IStorageFolderBinding.toABI(destinationFolder)
        defer { WindowsStorage_IStorageFolderBinding.release(&destinationFolder_abi) }
        var desiredNewName_abi = try WindowsRuntime.StringBinding.toABI(desiredNewName)
        defer { WindowsRuntime.StringBinding.release(&desiredNewName_abi) }
        let option_abi = WindowsStorage_NameCollisionOption.toABI(option)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CopyOverload(this, destinationFolder_abi, desiredNewName_abi, option_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func copyAndReplaceAsync(_ fileToReplace: WindowsStorage_IStorageFile?) throws -> WindowsFoundation_IAsyncAction? {
        var fileToReplace_abi = try WindowsStorage_IStorageFileBinding.toABI(fileToReplace)
        defer { WindowsStorage_IStorageFileBinding.release(&fileToReplace_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CopyAndReplaceAsync(this, fileToReplace_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func moveOverloadDefaultNameAndOptions(_ destinationFolder: WindowsStorage_IStorageFolder?) throws -> WindowsFoundation_IAsyncAction? {
        var destinationFolder_abi = try WindowsStorage_IStorageFolderBinding.toABI(destinationFolder)
        defer { WindowsStorage_IStorageFolderBinding.release(&destinationFolder_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveOverloadDefaultNameAndOptions(this, destinationFolder_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func moveOverloadDefaultOptions(_ destinationFolder: WindowsStorage_IStorageFolder?, _ desiredNewName: Swift.String) throws -> WindowsFoundation_IAsyncAction? {
        var destinationFolder_abi = try WindowsStorage_IStorageFolderBinding.toABI(destinationFolder)
        defer { WindowsStorage_IStorageFolderBinding.release(&destinationFolder_abi) }
        var desiredNewName_abi = try WindowsRuntime.StringBinding.toABI(desiredNewName)
        defer { WindowsRuntime.StringBinding.release(&desiredNewName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveOverloadDefaultOptions(this, destinationFolder_abi, desiredNewName_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func moveOverload(_ destinationFolder: WindowsStorage_IStorageFolder?, _ desiredNewName: Swift.String, _ option: WindowsStorage_NameCollisionOption) throws -> WindowsFoundation_IAsyncAction? {
        var destinationFolder_abi = try WindowsStorage_IStorageFolderBinding.toABI(destinationFolder)
        defer { WindowsStorage_IStorageFolderBinding.release(&destinationFolder_abi) }
        var desiredNewName_abi = try WindowsRuntime.StringBinding.toABI(desiredNewName)
        defer { WindowsRuntime.StringBinding.release(&desiredNewName_abi) }
        let option_abi = WindowsStorage_NameCollisionOption.toABI(option)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveOverload(this, destinationFolder_abi, desiredNewName_abi, option_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func moveAndReplaceAsync(_ fileToReplace: WindowsStorage_IStorageFile?) throws -> WindowsFoundation_IAsyncAction? {
        var fileToReplace_abi = try WindowsStorage_IStorageFileBinding.toABI(fileToReplace)
        defer { WindowsStorage_IStorageFileBinding.release(&fileToReplace_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.MoveAndReplaceAsync(this, fileToReplace_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFile2

public func uuidof(_: SWRT_WindowsStorage_IStorageFile2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x954E4BCF, 0x0A77, 0x42FB, 0xB777, 0xC2ED58A52E44)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFile2 {
    public func openWithOptionsAsync(_ accessMode: WindowsStorage_FileAccessMode, _ options: WindowsStorage_StorageOpenOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStream?>? {
        let accessMode_abi = WindowsStorage_FileAccessMode.toABI(accessMode)
        let options_abi = WindowsStorage_StorageOpenOptions.toABI(options)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.OpenWithOptionsAsync(this, accessMode_abi, options_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IRandomAccessStream.fromABI(consuming: &_result)
    }

    public func openTransactedWriteWithOptionsAsync(_ options: WindowsStorage_StorageOpenOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageStreamTransaction?>? {
        let options_abi = WindowsStorage_StorageOpenOptions.toABI(options)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageStreamTransaction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.OpenTransactedWriteWithOptionsAsync(this, options_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageStreamTransaction.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFilePropertiesWithAvailability

public func uuidof(_: SWRT_WindowsStorage_IStorageFilePropertiesWithAvailability.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAFCBBE9B, 0x582B, 0x4133, 0x9648, 0xE44CA46EE491)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFilePropertiesWithAvailability {
    public func get_IsAvailable() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsAvailable(this, &_result))
        return _result
    }
}

// MARK: Windows.Storage.IStorageFileStatics

public func uuidof(_: SWRT_WindowsStorage_IStorageFileStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5984C710, 0xDAF2, 0x43C8, 0x8BB4, 0xA4D3EACFD03F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFileStatics {
    public func getFileFromPathAsync(_ path: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var path_abi = try WindowsRuntime.StringBinding.toABI(path)
        defer { WindowsRuntime.StringBinding.release(&path_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFileFromPathAsync(this, path_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func getFileFromApplicationUriAsync(_ uri: WindowsFoundation_Uri?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var uri_abi = try WindowsFoundation_UriBinding.toABI(uri)
        defer { WindowsFoundation_UriBinding.release(&uri_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFileFromApplicationUriAsync(this, uri_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func createStreamedFileAsync(_ displayNameWithExtension: Swift.String, _ dataRequested: WindowsStorage_StreamedFileDataRequestedHandler?, _ thumbnail: WindowsStorageStreams_IRandomAccessStreamReference?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var displayNameWithExtension_abi = try WindowsRuntime.StringBinding.toABI(displayNameWithExtension)
        defer { WindowsRuntime.StringBinding.release(&displayNameWithExtension_abi) }
        var dataRequested_abi = try WindowsStorage_StreamedFileDataRequestedHandlerBinding.toABI(dataRequested)
        defer { WindowsStorage_StreamedFileDataRequestedHandlerBinding.release(&dataRequested_abi) }
        var thumbnail_abi = try WindowsStorageStreams_IRandomAccessStreamReferenceBinding.toABI(thumbnail)
        defer { WindowsStorageStreams_IRandomAccessStreamReferenceBinding.release(&thumbnail_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStreamedFileAsync(this, displayNameWithExtension_abi, dataRequested_abi, thumbnail_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func replaceWithStreamedFileAsync(_ fileToReplace: WindowsStorage_IStorageFile?, _ dataRequested: WindowsStorage_StreamedFileDataRequestedHandler?, _ thumbnail: WindowsStorageStreams_IRandomAccessStreamReference?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var fileToReplace_abi = try WindowsStorage_IStorageFileBinding.toABI(fileToReplace)
        defer { WindowsStorage_IStorageFileBinding.release(&fileToReplace_abi) }
        var dataRequested_abi = try WindowsStorage_StreamedFileDataRequestedHandlerBinding.toABI(dataRequested)
        defer { WindowsStorage_StreamedFileDataRequestedHandlerBinding.release(&dataRequested_abi) }
        var thumbnail_abi = try WindowsStorageStreams_IRandomAccessStreamReferenceBinding.toABI(thumbnail)
        defer { WindowsStorageStreams_IRandomAccessStreamReferenceBinding.release(&thumbnail_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceWithStreamedFileAsync(this, fileToReplace_abi, dataRequested_abi, thumbnail_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func createStreamedFileFromUriAsync(_ displayNameWithExtension: Swift.String, _ uri: WindowsFoundation_Uri?, _ thumbnail: WindowsStorageStreams_IRandomAccessStreamReference?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var displayNameWithExtension_abi = try WindowsRuntime.StringBinding.toABI(displayNameWithExtension)
        defer { WindowsRuntime.StringBinding.release(&displayNameWithExtension_abi) }
        var uri_abi = try WindowsFoundation_UriBinding.toABI(uri)
        defer { WindowsFoundation_UriBinding.release(&uri_abi) }
        var thumbnail_abi = try WindowsStorageStreams_IRandomAccessStreamReferenceBinding.toABI(thumbnail)
        defer { WindowsStorageStreams_IRandomAccessStreamReferenceBinding.release(&thumbnail_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStreamedFileFromUriAsync(this, displayNameWithExtension_abi, uri_abi, thumbnail_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func replaceWithStreamedFileFromUriAsync(_ fileToReplace: WindowsStorage_IStorageFile?, _ uri: WindowsFoundation_Uri?, _ thumbnail: WindowsStorageStreams_IRandomAccessStreamReference?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var fileToReplace_abi = try WindowsStorage_IStorageFileBinding.toABI(fileToReplace)
        defer { WindowsStorage_IStorageFileBinding.release(&fileToReplace_abi) }
        var uri_abi = try WindowsFoundation_UriBinding.toABI(uri)
        defer { WindowsFoundation_UriBinding.release(&uri_abi) }
        var thumbnail_abi = try WindowsStorageStreams_IRandomAccessStreamReferenceBinding.toABI(thumbnail)
        defer { WindowsStorageStreams_IRandomAccessStreamReferenceBinding.release(&thumbnail_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReplaceWithStreamedFileFromUriAsync(this, fileToReplace_abi, uri_abi, thumbnail_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFileStatics2

public func uuidof(_: SWRT_WindowsStorage_IStorageFileStatics2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5C76A781, 0x212E, 0x4AF9, 0x8F04, 0x740CAE108974)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFileStatics2 {
    public func getFileFromPathForUserAsync(_ user: WindowsSystem_User?, _ path: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var user_abi = try WindowsSystem_UserBinding.toABI(user)
        defer { WindowsSystem_UserBinding.release(&user_abi) }
        var path_abi = try WindowsRuntime.StringBinding.toABI(path)
        defer { WindowsRuntime.StringBinding.release(&path_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFileFromPathForUserAsync(this, user_abi, path_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFolder

public func uuidof(_: SWRT_WindowsStorage_IStorageFolder.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x72D1CB78, 0xB3EF, 0x4F75, 0xA80B, 0x6FD9DAE2944B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFolder {
    public func createFileAsyncOverloadDefaultOptions(_ desiredName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var desiredName_abi = try WindowsRuntime.StringBinding.toABI(desiredName)
        defer { WindowsRuntime.StringBinding.release(&desiredName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFileAsyncOverloadDefaultOptions(this, desiredName_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func createFileAsync(_ desiredName: Swift.String, _ options: WindowsStorage_CreationCollisionOption) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var desiredName_abi = try WindowsRuntime.StringBinding.toABI(desiredName)
        defer { WindowsRuntime.StringBinding.release(&desiredName_abi) }
        let options_abi = WindowsStorage_CreationCollisionOption.toABI(options)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFileAsync(this, desiredName_abi, options_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func createFolderAsyncOverloadDefaultOptions(_ desiredName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?>? {
        var desiredName_abi = try WindowsRuntime.StringBinding.toABI(desiredName)
        defer { WindowsRuntime.StringBinding.release(&desiredName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFolderAsyncOverloadDefaultOptions(this, desiredName_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFolder.fromABI(consuming: &_result)
    }

    public func createFolderAsync(_ desiredName: Swift.String, _ options: WindowsStorage_CreationCollisionOption) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?>? {
        var desiredName_abi = try WindowsRuntime.StringBinding.toABI(desiredName)
        defer { WindowsRuntime.StringBinding.release(&desiredName_abi) }
        let options_abi = WindowsStorage_CreationCollisionOption.toABI(options)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFolderAsync(this, desiredName_abi, options_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFolder.fromABI(consuming: &_result)
    }

    public func getFileAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?>? {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFileAsync(this, name_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFile.fromABI(consuming: &_result)
    }

    public func getFolderAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?>? {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFolderAsync(this, name_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFolder.fromABI(consuming: &_result)
    }

    public func getItemAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?>? {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetItemAsync(this, name_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IStorageItem.fromABI(consuming: &_result)
    }

    public func getFilesAsyncOverloadDefaultOptionsStartAndCount() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFilesAsyncOverloadDefaultOptionsStartAndCount(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFile.fromABI(consuming: &_result)
    }

    public func getFoldersAsyncOverloadDefaultOptionsStartAndCount() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFoldersAsyncOverloadDefaultOptionsStartAndCount(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFolder.fromABI(consuming: &_result)
    }

    public func getItemsAsyncOverloadDefaultStartAndCount() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetItemsAsyncOverloadDefaultStartAndCount(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_IStorageItem.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFolder2

public func uuidof(_: SWRT_WindowsStorage_IStorageFolder2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE827E8B9, 0x08D9, 0x4A8E, 0xA0AC, 0xFE5ED3CBBBD3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFolder2 {
    public func tryGetItemAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?>? {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetItemAsync(this, name_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IStorageItem.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFolder3

public func uuidof(_: SWRT_WindowsStorage_IStorageFolder3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9F617899, 0xBDE1, 0x4124, 0xAEB3, 0xB06AD96F98D4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFolder3 {
    public func tryGetChangeTracker() throws -> WindowsStorage_StorageLibraryChangeTracker? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageLibraryChangeTracker>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetChangeTracker(this, &_result))
        return WindowsStorage_StorageLibraryChangeTrackerBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFolderStatics

public func uuidof(_: SWRT_WindowsStorage_IStorageFolderStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x08F327FF, 0x85D5, 0x48B9, 0xAEE9, 0x28511E339F9F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFolderStatics {
    public func getFolderFromPathAsync(_ path: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?>? {
        var path_abi = try WindowsRuntime.StringBinding.toABI(path)
        defer { WindowsRuntime.StringBinding.release(&path_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFolderFromPathAsync(this, path_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFolder.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageFolderStatics2

public func uuidof(_: SWRT_WindowsStorage_IStorageFolderStatics2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB4656DC3, 0x71D2, 0x467D, 0x8B29, 0x371F0F62BF6F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageFolderStatics2 {
    public func getFolderFromPathForUserAsync(_ user: WindowsSystem_User?, _ path: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?>? {
        var user_abi = try WindowsSystem_UserBinding.toABI(user)
        defer { WindowsSystem_UserBinding.release(&user_abi) }
        var path_abi = try WindowsRuntime.StringBinding.toABI(path)
        defer { WindowsRuntime.StringBinding.release(&path_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFolderFromPathForUserAsync(this, user_abi, path_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFolder.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageItem

public func uuidof(_: SWRT_WindowsStorage_IStorageItem.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4207A996, 0xCA2F, 0x42F7, 0xBDE8, 0x8B10457A7F30)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageItem {
    public func renameAsyncOverloadDefaultOptions(_ desiredName: Swift.String) throws -> WindowsFoundation_IAsyncAction? {
        var desiredName_abi = try WindowsRuntime.StringBinding.toABI(desiredName)
        defer { WindowsRuntime.StringBinding.release(&desiredName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RenameAsyncOverloadDefaultOptions(this, desiredName_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func renameAsync(_ desiredName: Swift.String, _ option: WindowsStorage_NameCollisionOption) throws -> WindowsFoundation_IAsyncAction? {
        var desiredName_abi = try WindowsRuntime.StringBinding.toABI(desiredName)
        defer { WindowsRuntime.StringBinding.release(&desiredName_abi) }
        let option_abi = WindowsStorage_NameCollisionOption.toABI(option)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RenameAsync(this, desiredName_abi, option_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func deleteAsyncOverloadDefaultOptions() throws -> WindowsFoundation_IAsyncAction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.DeleteAsyncOverloadDefaultOptions(this, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func deleteAsync(_ option: WindowsStorage_StorageDeleteOption) throws -> WindowsFoundation_IAsyncAction? {
        let option_abi = WindowsStorage_StorageDeleteOption.toABI(option)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.DeleteAsync(this, option_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func getBasicPropertiesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_BasicProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_BasicProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetBasicPropertiesAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.BasicProperties.fromABI(consuming: &_result)
    }

    public func get_Name() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Name(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Path() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Path(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Attributes() throws -> WindowsStorage_FileAttributes {
        var _result: SWRT_WindowsStorage_FileAttributes = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Attributes(this, &_result))
        return WindowsStorage_FileAttributes.fromABI(_result)
    }

    public func get_DateCreated() throws -> WindowsFoundation_DateTime {
        var _result: SWRT_WindowsFoundation_DateTime = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DateCreated(this, &_result))
        return WindowsFoundation_DateTime.fromABI(_result)
    }

    public func isOfType(_ type: WindowsStorage_StorageItemTypes) throws -> Swift.Bool {
        let type_abi = WindowsStorage_StorageItemTypes.toABI(type)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsOfType(this, type_abi, &_result))
        return _result
    }
}

// MARK: Windows.Storage.IStorageItem2

public func uuidof(_: SWRT_WindowsStorage_IStorageItem2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x53F926D2, 0x083C, 0x4283, 0xB45B, 0x81C007237E44)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageItem2 {
    public func getParentAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetParentAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageFolder.fromABI(consuming: &_result)
    }

    public func isEqual(_ item: WindowsStorage_IStorageItem?) throws -> Swift.Bool {
        var item_abi = try WindowsStorage_IStorageItemBinding.toABI(item)
        defer { WindowsStorage_IStorageItemBinding.release(&item_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsEqual(this, item_abi, &_result))
        return _result
    }
}

// MARK: Windows.Storage.IStorageItemProperties

public func uuidof(_: SWRT_WindowsStorage_IStorageItemProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x86664478, 0x8029, 0x46FE, 0xA789, 0x1C2F3E2FFB5C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageItemProperties {
    public func getThumbnailAsyncOverloadDefaultSizeDefaultOptions(_ mode: WindowsStorageFileProperties_ThumbnailMode) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?>? {
        let mode_abi = WindowsStorageFileProperties_ThumbnailMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetThumbnailAsyncOverloadDefaultSizeDefaultOptions(this, mode_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.fromABI(consuming: &_result)
    }

    public func getThumbnailAsyncOverloadDefaultOptions(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?>? {
        let mode_abi = WindowsStorageFileProperties_ThumbnailMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetThumbnailAsyncOverloadDefaultOptions(this, mode_abi, requestedSize, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.fromABI(consuming: &_result)
    }

    public func getThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32, _ options: WindowsStorageFileProperties_ThumbnailOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?>? {
        let mode_abi = WindowsStorageFileProperties_ThumbnailMode.toABI(mode)
        let options_abi = WindowsStorageFileProperties_ThumbnailOptions.toABI(options)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetThumbnailAsync(this, mode_abi, requestedSize, options_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.fromABI(consuming: &_result)
    }

    public func get_DisplayName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_DisplayType() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayType(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_FolderRelativeId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FolderRelativeId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_Properties() throws -> WindowsStorageFileProperties_StorageItemContentProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageFileProperties_IStorageItemContentProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Properties(this, &_result))
        return WindowsStorageFileProperties_StorageItemContentPropertiesBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageItemProperties2

public func uuidof(_: SWRT_WindowsStorage_IStorageItemProperties2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8E86A951, 0x04B9, 0x4BD2, 0x929D, 0xFEF3F71621D0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageItemProperties2 {
    public func getScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions(_ mode: WindowsStorageFileProperties_ThumbnailMode) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?>? {
        let mode_abi = WindowsStorageFileProperties_ThumbnailMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions(this, mode_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.fromABI(consuming: &_result)
    }

    public func getScaledImageAsThumbnailAsyncOverloadDefaultOptions(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?>? {
        let mode_abi = WindowsStorageFileProperties_ThumbnailMode.toABI(mode)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetScaledImageAsThumbnailAsyncOverloadDefaultOptions(this, mode_abi, requestedSize, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.fromABI(consuming: &_result)
    }

    public func getScaledImageAsThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32, _ options: WindowsStorageFileProperties_ThumbnailOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?>? {
        let mode_abi = WindowsStorageFileProperties_ThumbnailMode.toABI(mode)
        let options_abi = WindowsStorageFileProperties_ThumbnailOptions.toABI(options)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_StorageItemThumbnail>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetScaledImageAsThumbnailAsync(this, mode_abi, requestedSize, options_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.StorageItemThumbnail.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageItemPropertiesWithProvider

public func uuidof(_: SWRT_WindowsStorage_IStorageItemPropertiesWithProvider.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x861BF39B, 0x6368, 0x4DEE, 0xB40E, 0x74684A5CE714)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageItemPropertiesWithProvider {
    public func get_Provider() throws -> WindowsStorage_StorageProvider? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageProvider>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Provider(this, &_result))
        return WindowsStorage_StorageProviderBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageLibraryChange

public func uuidof(_: SWRT_WindowsStorage_IStorageLibraryChange.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x00980B23, 0x2BE2, 0x4909, 0xAA48, 0x159F5203A51E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageLibraryChange {
    public func get_ChangeType() throws -> WindowsStorage_StorageLibraryChangeType {
        var _result: SWRT_WindowsStorage_StorageLibraryChangeType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ChangeType(this, &_result))
        return WindowsStorage_StorageLibraryChangeType.fromABI(_result)
    }

    public func get_Path() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Path(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_PreviousPath() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PreviousPath(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func isOfType(_ type: WindowsStorage_StorageItemTypes) throws -> Swift.Bool {
        let type_abi = WindowsStorage_StorageItemTypes.toABI(type)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsOfType(this, type_abi, &_result))
        return _result
    }

    public func getStorageItemAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetStorageItemAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IStorageItem.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageLibraryChangeReader

public func uuidof(_: SWRT_WindowsStorage_IStorageLibraryChangeReader.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF205BC83, 0xFCA2, 0x41F9, 0x8954, 0xEE2E991EB96F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageLibraryChangeReader {
    public func readBatchAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageLibraryChange?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageLibraryChange>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReadBatchAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageLibraryChange.fromABI(consuming: &_result)
    }

    public func acceptChangesAsync() throws -> WindowsFoundation_IAsyncAction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.AcceptChangesAsync(this, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageLibraryChangeTracker

public func uuidof(_: SWRT_WindowsStorage_IStorageLibraryChangeTracker.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9E157316, 0x6073, 0x44F6, 0x9681, 0x7492D1286C90)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageLibraryChangeTracker {
    public func getChangeReader() throws -> WindowsStorage_StorageLibraryChangeReader? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageLibraryChangeReader>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetChangeReader(this, &_result))
        return WindowsStorage_StorageLibraryChangeReaderBinding.fromABI(consuming: &_result)
    }

    public func enable() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Enable(this))
    }

    public func reset() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Reset(this))
    }
}

// MARK: Windows.Storage.IStorageProvider

public func uuidof(_: SWRT_WindowsStorage_IStorageProvider.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE705EED4, 0xD478, 0x47D6, 0xBA46, 0x1A8EBE114A20)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageProvider {
    public func get_Id() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Id(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_DisplayName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DisplayName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageProvider2

public func uuidof(_: SWRT_WindowsStorage_IStorageProvider2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x010D1917, 0x3404, 0x414B, 0x9FD7, 0xCD44472EAA39)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageProvider2 {
    public func isPropertySupportedForPartialFileAsync(_ propertyCanonicalName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool>? {
        var propertyCanonicalName_abi = try WindowsRuntime.StringBinding.toABI(propertyCanonicalName)
        defer { WindowsRuntime.StringBinding.release(&propertyCanonicalName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_Bool>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsPropertySupportedForPartialFileAsync(this, propertyCanonicalName_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Boolean.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStorageStreamTransaction

public func uuidof(_: SWRT_WindowsStorage_IStorageStreamTransaction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF67CF363, 0xA53D, 0x4D94, 0xAE2C, 0x67232D93ACDD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStorageStreamTransaction {
    public func get_Stream() throws -> WindowsStorageStreams_IRandomAccessStream? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Stream(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamBinding.fromABI(consuming: &_result)
    }

    public func commitAsync() throws -> WindowsFoundation_IAsyncAction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CommitAsync(this, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.IStreamedFileDataRequest

public func uuidof(_: SWRT_WindowsStorage_IStreamedFileDataRequest.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1673FCCE, 0xDABD, 0x4D50, 0xBEEE, 0x180B8A8191B6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_IStreamedFileDataRequest {
    public func failAndClose(_ failureMode: WindowsStorage_StreamedFileFailureMode) throws {
        let failureMode_abi = WindowsStorage_StreamedFileFailureMode.toABI(failureMode)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FailAndClose(this, failureMode_abi))
    }
}

// MARK: Windows.Storage.IStreamedFileDataRequestedHandler

public func uuidof(_: SWRT_WindowsStorage_StreamedFileDataRequestedHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFEF6A824, 0x2FE1, 0x4D07, 0xA35B, 0xB77C50B5F4CC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorage_StreamedFileDataRequestedHandler {
    public func invoke(_ stream: WindowsStorage_StreamedFileDataRequest?) throws {
        var stream_abi = try WindowsStorage_StreamedFileDataRequestBinding.toABI(stream)
        defer { WindowsStorage_StreamedFileDataRequestBinding.release(&stream_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, stream_abi))
    }
}

// MARK: Windows.Storage.FileProperties.IBasicProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IBasicProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD05D55DB, 0x785E, 0x4A66, 0xBE02, 0x9BEEC58AEA81)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IBasicProperties {
    public func get_Size() throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    public func get_DateModified() throws -> WindowsFoundation_DateTime {
        var _result: SWRT_WindowsFoundation_DateTime = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DateModified(this, &_result))
        return WindowsFoundation_DateTime.fromABI(_result)
    }

    public func get_ItemDate() throws -> WindowsFoundation_DateTime {
        var _result: SWRT_WindowsFoundation_DateTime = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ItemDate(this, &_result))
        return WindowsFoundation_DateTime.fromABI(_result)
    }
}

// MARK: Windows.Storage.FileProperties.IDocumentProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IDocumentProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7EAB19BC, 0x1821, 0x4923, 0xB4A9, 0x0AEA404D0070)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IDocumentProperties {
    public func get_Author() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Author(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Title(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Title(this, value_abi))
    }

    public func get_Keywords() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Keywords(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Comment() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Comment(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Comment(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Comment(this, value_abi))
    }
}

// MARK: Windows.Storage.FileProperties.IImageProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IImageProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x523C9424, 0xFCFF, 0x4275, 0xAFEE, 0xECDB9AB47973)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IImageProperties {
    public func get_Rating() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Rating(this, &_result))
        return _result
    }

    public func put_Rating(_ value: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Rating(this, value))
    }

    public func get_Keywords() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Keywords(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_DateTaken() throws -> WindowsFoundation_DateTime {
        var _result: SWRT_WindowsFoundation_DateTime = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DateTaken(this, &_result))
        return WindowsFoundation_DateTime.fromABI(_result)
    }

    public func put_DateTaken(_ value: WindowsFoundation_DateTime) throws {
        let value_abi = WindowsFoundation_DateTime.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DateTaken(this, value_abi))
    }

    public func get_Width() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Width(this, &_result))
        return _result
    }

    public func get_Height() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Height(this, &_result))
        return _result
    }

    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Title(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Title(this, value_abi))
    }

    public func get_Latitude() throws -> Swift.Double? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Latitude(this, &_result))
        return WindowsRuntime.DoubleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func get_Longitude() throws -> Swift.Double? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Longitude(this, &_result))
        return WindowsRuntime.DoubleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func get_CameraManufacturer() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CameraManufacturer(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_CameraManufacturer(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CameraManufacturer(this, value_abi))
    }

    public func get_CameraModel() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CameraModel(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_CameraModel(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CameraModel(this, value_abi))
    }

    public func get_Orientation() throws -> WindowsStorageFileProperties_PhotoOrientation {
        var _result: SWRT_WindowsStorageFileProperties_PhotoOrientation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orientation(this, &_result))
        return WindowsStorageFileProperties_PhotoOrientation.fromABI(_result)
    }

    public func get_PeopleNames() throws -> WindowsFoundationCollections_IVectorView<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PeopleNames(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.String.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.FileProperties.IMusicProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IMusicProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBC8AAB62, 0x66EC, 0x419A, 0xBC5D, 0xCA65A4CB46DA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IMusicProperties {
    public func get_Album() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Album(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Album(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Album(this, value_abi))
    }

    public func get_Artist() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Artist(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Artist(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Artist(this, value_abi))
    }

    public func get_Genre() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Genre(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_TrackNumber() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TrackNumber(this, &_result))
        return _result
    }

    public func put_TrackNumber(_ value: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TrackNumber(this, value))
    }

    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Title(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Title(this, value_abi))
    }

    public func get_Rating() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Rating(this, &_result))
        return _result
    }

    public func put_Rating(_ value: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Rating(this, value))
    }

    public func get_Duration() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Duration(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func get_Bitrate() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Bitrate(this, &_result))
        return _result
    }

    public func get_AlbumArtist() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AlbumArtist(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_AlbumArtist(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AlbumArtist(this, value_abi))
    }

    public func get_Composers() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Composers(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Conductors() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Conductors(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Subtitle() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Subtitle(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Subtitle(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Subtitle(this, value_abi))
    }

    public func get_Producers() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Producers(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Publisher() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Publisher(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Publisher(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Publisher(this, value_abi))
    }

    public func get_Writers() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Writers(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Year() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Year(this, &_result))
        return _result
    }

    public func put_Year(_ value: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Year(this, value))
    }
}

// MARK: Windows.Storage.FileProperties.IStorageItemContentProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IStorageItemContentProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x05294BAD, 0xBC38, 0x48BF, 0x85D7, 0x770E0E2AE0BA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IStorageItemContentProperties {
    public func getMusicPropertiesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_MusicProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_MusicProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMusicPropertiesAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.MusicProperties.fromABI(consuming: &_result)
    }

    public func getVideoPropertiesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_VideoProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_VideoProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetVideoPropertiesAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.VideoProperties.fromABI(consuming: &_result)
    }

    public func getImagePropertiesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_ImageProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_ImageProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetImagePropertiesAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.ImageProperties.fromABI(consuming: &_result)
    }

    public func getDocumentPropertiesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_DocumentProperties?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageFileProperties_DocumentProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDocumentPropertiesAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.DocumentProperties.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.FileProperties.IStorageItemExtraProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC54361B2, 0x54CD, 0x432B, 0xBDBC, 0x4B19C4B470D7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties {
    public func retrievePropertiesAsync(_ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?>?>? {
        var propertiesToRetrieve_abi = try WindowsFoundationCollections_IIterableBinding.String.toABI(propertiesToRetrieve)
        defer { WindowsFoundationCollections_IIterableBinding.String.release(&propertiesToRetrieve_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IMap_String_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RetrievePropertiesAsync(this, propertiesToRetrieve_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IMap_String_Object.fromABI(consuming: &_result)
    }

    public func savePropertiesAsync(_ propertiesToSave: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?>?) throws -> WindowsFoundation_IAsyncAction? {
        var propertiesToSave_abi = try WindowsFoundationCollections_IIterableBinding.IKeyValuePair_String_Object.toABI(propertiesToSave)
        defer { WindowsFoundationCollections_IIterableBinding.IKeyValuePair_String_Object.release(&propertiesToSave_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SavePropertiesAsync(this, propertiesToSave_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func savePropertiesAsyncOverloadDefault() throws -> WindowsFoundation_IAsyncAction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SavePropertiesAsyncOverloadDefault(this, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.FileProperties.IThumbnailProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IThumbnailProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x693DD42F, 0xDBE7, 0x49B5, 0xB3B3, 0x2893AC5D3423)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IThumbnailProperties {
    public func get_OriginalWidth() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OriginalWidth(this, &_result))
        return _result
    }

    public func get_OriginalHeight() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OriginalHeight(this, &_result))
        return _result
    }

    public func get_ReturnedSmallerCachedSize() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ReturnedSmallerCachedSize(this, &_result))
        return _result
    }

    public func get_Type() throws -> WindowsStorageFileProperties_ThumbnailType {
        var _result: SWRT_WindowsStorageFileProperties_ThumbnailType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Type(this, &_result))
        return WindowsStorageFileProperties_ThumbnailType.fromABI(_result)
    }
}

// MARK: Windows.Storage.FileProperties.IVideoProperties

public func uuidof(_: SWRT_WindowsStorageFileProperties_IVideoProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x719AE507, 0x68DE, 0x4DB8, 0x97DE, 0x49998C059F2F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageFileProperties_IVideoProperties {
    public func get_Rating() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Rating(this, &_result))
        return _result
    }

    public func put_Rating(_ value: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Rating(this, value))
    }

    public func get_Keywords() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Keywords(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Width() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Width(this, &_result))
        return _result
    }

    public func get_Height() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Height(this, &_result))
        return _result
    }

    public func get_Duration() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Duration(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func get_Latitude() throws -> Swift.Double? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Latitude(this, &_result))
        return WindowsRuntime.DoubleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func get_Longitude() throws -> Swift.Double? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Longitude(this, &_result))
        return WindowsRuntime.DoubleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func get_Title() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Title(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Title(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Title(this, value_abi))
    }

    public func get_Subtitle() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Subtitle(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Subtitle(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Subtitle(this, value_abi))
    }

    public func get_Producers() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Producers(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Publisher() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Publisher(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Publisher(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Publisher(this, value_abi))
    }

    public func get_Writers() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Writers(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Year() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Year(this, &_result))
        return _result
    }

    public func put_Year(_ value: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Year(this, value))
    }

    public func get_Bitrate() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Bitrate(this, &_result))
        return _result
    }

    public func get_Directors() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Directors(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_Orientation() throws -> WindowsStorageFileProperties_VideoOrientation {
        var _result: SWRT_WindowsStorageFileProperties_VideoOrientation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orientation(this, &_result))
        return WindowsStorageFileProperties_VideoOrientation.fromABI(_result)
    }
}

// MARK: Windows.Storage.Search.IQueryOptions

public func uuidof(_: SWRT_WindowsStorageSearch_IQueryOptions.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1E5E46EE, 0x0F45, 0x4838, 0xA8E9, 0xD0479D446C30)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IQueryOptions {
    public func get_FileTypeFilter() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FileTypeFilter(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }

    public func get_FolderDepth() throws -> WindowsStorageSearch_FolderDepth {
        var _result: SWRT_WindowsStorageSearch_FolderDepth = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FolderDepth(this, &_result))
        return WindowsStorageSearch_FolderDepth.fromABI(_result)
    }

    public func put_FolderDepth(_ value: WindowsStorageSearch_FolderDepth) throws {
        let value_abi = WindowsStorageSearch_FolderDepth.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FolderDepth(this, value_abi))
    }

    public func get_ApplicationSearchFilter() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ApplicationSearchFilter(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_ApplicationSearchFilter(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ApplicationSearchFilter(this, value_abi))
    }

    public func get_UserSearchFilter() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_UserSearchFilter(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_UserSearchFilter(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_UserSearchFilter(this, value_abi))
    }

    public func get_Language() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Language(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Language(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Language(this, value_abi))
    }

    public func get_IndexerOption() throws -> WindowsStorageSearch_IndexerOption {
        var _result: SWRT_WindowsStorageSearch_IndexerOption = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IndexerOption(this, &_result))
        return WindowsStorageSearch_IndexerOption.fromABI(_result)
    }

    public func put_IndexerOption(_ value: WindowsStorageSearch_IndexerOption) throws {
        let value_abi = WindowsStorageSearch_IndexerOption.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IndexerOption(this, value_abi))
    }

    public func get_SortOrder() throws -> WindowsFoundationCollections_IVector<WindowsStorageSearch_SortEntry>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_WindowsStorageSearch_SortEntry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SortOrder(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.SortEntry.fromABI(consuming: &_result)
    }

    public func get_GroupPropertyName() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_GroupPropertyName(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_DateStackOption() throws -> WindowsStorageSearch_DateStackOption {
        var _result: SWRT_WindowsStorageSearch_DateStackOption = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DateStackOption(this, &_result))
        return WindowsStorageSearch_DateStackOption.fromABI(_result)
    }

    public func saveToString() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SaveToString(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func loadFromString(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.LoadFromString(this, value_abi))
    }

    public func setThumbnailPrefetch(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32, _ options: WindowsStorageFileProperties_ThumbnailOptions) throws {
        let mode_abi = WindowsStorageFileProperties_ThumbnailMode.toABI(mode)
        let options_abi = WindowsStorageFileProperties_ThumbnailOptions.toABI(options)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetThumbnailPrefetch(this, mode_abi, requestedSize, options_abi))
    }

    public func setPropertyPrefetch(_ options: WindowsStorageFileProperties_PropertyPrefetchOptions, _ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?) throws {
        let options_abi = WindowsStorageFileProperties_PropertyPrefetchOptions.toABI(options)
        var propertiesToRetrieve_abi = try WindowsFoundationCollections_IIterableBinding.String.toABI(propertiesToRetrieve)
        defer { WindowsFoundationCollections_IIterableBinding.String.release(&propertiesToRetrieve_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetPropertyPrefetch(this, options_abi, propertiesToRetrieve_abi))
    }
}

// MARK: Windows.Storage.Search.IQueryOptionsFactory

public func uuidof(_: SWRT_WindowsStorageSearch_IQueryOptionsFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x032E1F8C, 0xA9C1, 0x4E71, 0x8011, 0x0DEE9D4811A3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IQueryOptionsFactory {
    public func createCommonFileQuery(_ query: WindowsStorageSearch_CommonFileQuery, _ fileTypeFilter: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> COM.COMReference<SWRT_WindowsStorageSearch_IQueryOptions> {
        let query_abi = WindowsStorageSearch_CommonFileQuery.toABI(query)
        var fileTypeFilter_abi = try WindowsFoundationCollections_IIterableBinding.String.toABI(fileTypeFilter)
        defer { WindowsFoundationCollections_IIterableBinding.String.release(&fileTypeFilter_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IQueryOptions>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCommonFileQuery(this, query_abi, fileTypeFilter_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }

    public func createCommonFolderQuery(_ query: WindowsStorageSearch_CommonFolderQuery) throws -> COM.COMReference<SWRT_WindowsStorageSearch_IQueryOptions> {
        let query_abi = WindowsStorageSearch_CommonFolderQuery.toABI(query)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IQueryOptions>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCommonFolderQuery(this, query_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.Storage.Search.IQueryOptionsWithProviderFilter

public func uuidof(_: SWRT_WindowsStorageSearch_IQueryOptionsWithProviderFilter.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5B9D1026, 0x15C4, 0x44DD, 0xB89A, 0x47A59B7D7C4F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IQueryOptionsWithProviderFilter {
    public func get_StorageProviderIdFilter() throws -> WindowsFoundationCollections_IVector<Swift.String>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StorageProviderIdFilter(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.String.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Search.IStorageFileQueryResult

public func uuidof(_: SWRT_WindowsStorageSearch_IStorageFileQueryResult.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x52FDA447, 0x2BAA, 0x412C, 0xB29F, 0xD4B1778EFA1E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IStorageFileQueryResult {
    public func getFilesAsync(_ startIndex: Swift.UInt32, _ maxNumberOfItems: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFilesAsync(this, startIndex, maxNumberOfItems, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFile.fromABI(consuming: &_result)
    }

    public func getFilesAsyncDefaultStartAndCount() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFilesAsyncDefaultStartAndCount(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFile.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Search.IStorageFileQueryResult2

public func uuidof(_: SWRT_WindowsStorageSearch_IStorageFileQueryResult2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4E5DB9DD, 0x7141, 0x46C4, 0x8BE3, 0xE9DC9E27275C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IStorageFileQueryResult2 {
    public func getMatchingPropertiesWithRanges(_ file: WindowsStorage_StorageFile?) throws -> WindowsFoundationCollections_IMap<Swift.String, WindowsFoundationCollections_IVectorView<WindowsDataText_TextSegment>?>? {
        var file_abi = try WindowsStorage_StorageFileBinding.toABI(file)
        defer { WindowsStorage_StorageFileBinding.release(&file_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMap_String_WindowsFoundationCollections_IVectorView_WindowsDataText_TextSegment>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetMatchingPropertiesWithRanges(this, file_abi, &_result))
        return WindowsFoundationCollections_IMapBinding.String_IVectorView_TextSegment.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Search.IStorageFolderQueryOperations

public func uuidof(_: SWRT_WindowsStorageSearch_IStorageFolderQueryOperations.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCB43CCC9, 0x446B, 0x4A4F, 0xBE97, 0x757771BE5203)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IStorageFolderQueryOperations {
    public func getIndexedStateAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageSearch_IndexedState>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageSearch_IndexedState>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetIndexedStateAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IndexedState.fromABI(consuming: &_result)
    }

    public func createFileQueryOverloadDefault() throws -> WindowsStorageSearch_StorageFileQueryResult? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageFileQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFileQueryOverloadDefault(this, &_result))
        return WindowsStorageSearch_StorageFileQueryResultBinding.fromABI(consuming: &_result)
    }

    public func createFileQuery(_ query: WindowsStorageSearch_CommonFileQuery) throws -> WindowsStorageSearch_StorageFileQueryResult? {
        let query_abi = WindowsStorageSearch_CommonFileQuery.toABI(query)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageFileQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFileQuery(this, query_abi, &_result))
        return WindowsStorageSearch_StorageFileQueryResultBinding.fromABI(consuming: &_result)
    }

    public func createFileQueryWithOptions(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> WindowsStorageSearch_StorageFileQueryResult? {
        var queryOptions_abi = try WindowsStorageSearch_QueryOptionsBinding.toABI(queryOptions)
        defer { WindowsStorageSearch_QueryOptionsBinding.release(&queryOptions_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageFileQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFileQueryWithOptions(this, queryOptions_abi, &_result))
        return WindowsStorageSearch_StorageFileQueryResultBinding.fromABI(consuming: &_result)
    }

    public func createFolderQueryOverloadDefault() throws -> WindowsStorageSearch_StorageFolderQueryResult? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageFolderQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFolderQueryOverloadDefault(this, &_result))
        return WindowsStorageSearch_StorageFolderQueryResultBinding.fromABI(consuming: &_result)
    }

    public func createFolderQuery(_ query: WindowsStorageSearch_CommonFolderQuery) throws -> WindowsStorageSearch_StorageFolderQueryResult? {
        let query_abi = WindowsStorageSearch_CommonFolderQuery.toABI(query)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageFolderQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFolderQuery(this, query_abi, &_result))
        return WindowsStorageSearch_StorageFolderQueryResultBinding.fromABI(consuming: &_result)
    }

    public func createFolderQueryWithOptions(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> WindowsStorageSearch_StorageFolderQueryResult? {
        var queryOptions_abi = try WindowsStorageSearch_QueryOptionsBinding.toABI(queryOptions)
        defer { WindowsStorageSearch_QueryOptionsBinding.release(&queryOptions_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageFolderQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFolderQueryWithOptions(this, queryOptions_abi, &_result))
        return WindowsStorageSearch_StorageFolderQueryResultBinding.fromABI(consuming: &_result)
    }

    public func createItemQuery() throws -> WindowsStorageSearch_StorageItemQueryResult? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageItemQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateItemQuery(this, &_result))
        return WindowsStorageSearch_StorageItemQueryResultBinding.fromABI(consuming: &_result)
    }

    public func createItemQueryWithOptions(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> WindowsStorageSearch_StorageItemQueryResult? {
        var queryOptions_abi = try WindowsStorageSearch_QueryOptionsBinding.toABI(queryOptions)
        defer { WindowsStorageSearch_QueryOptionsBinding.release(&queryOptions_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IStorageItemQueryResult>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateItemQueryWithOptions(this, queryOptions_abi, &_result))
        return WindowsStorageSearch_StorageItemQueryResultBinding.fromABI(consuming: &_result)
    }

    public func getFilesAsync(_ query: WindowsStorageSearch_CommonFileQuery, _ startIndex: Swift.UInt32, _ maxItemsToRetrieve: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>? {
        let query_abi = WindowsStorageSearch_CommonFileQuery.toABI(query)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFilesAsync(this, query_abi, startIndex, maxItemsToRetrieve, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFile.fromABI(consuming: &_result)
    }

    public func getFilesAsyncOverloadDefaultStartAndCount(_ query: WindowsStorageSearch_CommonFileQuery) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?>? {
        let query_abi = WindowsStorageSearch_CommonFileQuery.toABI(query)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFile>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFilesAsyncOverloadDefaultStartAndCount(this, query_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFile.fromABI(consuming: &_result)
    }

    public func getFoldersAsync(_ query: WindowsStorageSearch_CommonFolderQuery, _ startIndex: Swift.UInt32, _ maxItemsToRetrieve: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>? {
        let query_abi = WindowsStorageSearch_CommonFolderQuery.toABI(query)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFoldersAsync(this, query_abi, startIndex, maxItemsToRetrieve, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFolder.fromABI(consuming: &_result)
    }

    public func getFoldersAsyncOverloadDefaultStartAndCount(_ query: WindowsStorageSearch_CommonFolderQuery) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>? {
        let query_abi = WindowsStorageSearch_CommonFolderQuery.toABI(query)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFoldersAsyncOverloadDefaultStartAndCount(this, query_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFolder.fromABI(consuming: &_result)
    }

    public func getItemsAsync(_ startIndex: Swift.UInt32, _ maxItemsToRetrieve: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetItemsAsync(this, startIndex, maxItemsToRetrieve, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_IStorageItem.fromABI(consuming: &_result)
    }

    public func areQueryOptionsSupported(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> Swift.Bool {
        var queryOptions_abi = try WindowsStorageSearch_QueryOptionsBinding.toABI(queryOptions)
        defer { WindowsStorageSearch_QueryOptionsBinding.release(&queryOptions_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.AreQueryOptionsSupported(this, queryOptions_abi, &_result))
        return _result
    }

    public func isCommonFolderQuerySupported(_ query: WindowsStorageSearch_CommonFolderQuery) throws -> Swift.Bool {
        let query_abi = WindowsStorageSearch_CommonFolderQuery.toABI(query)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsCommonFolderQuerySupported(this, query_abi, &_result))
        return _result
    }

    public func isCommonFileQuerySupported(_ query: WindowsStorageSearch_CommonFileQuery) throws -> Swift.Bool {
        let query_abi = WindowsStorageSearch_CommonFileQuery.toABI(query)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsCommonFileQuerySupported(this, query_abi, &_result))
        return _result
    }
}

// MARK: Windows.Storage.Search.IStorageFolderQueryResult

public func uuidof(_: SWRT_WindowsStorageSearch_IStorageFolderQueryResult.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6654C911, 0x7D66, 0x46FA, 0xAECF, 0xE4A4BAA93AB8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IStorageFolderQueryResult {
    public func getFoldersAsync(_ startIndex: Swift.UInt32, _ maxNumberOfItems: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFoldersAsync(this, startIndex, maxNumberOfItems, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFolder.fromABI(consuming: &_result)
    }

    public func getFoldersAsyncDefaultStartAndCount() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_StorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFoldersAsyncDefaultStartAndCount(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_StorageFolder.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Search.IStorageItemQueryResult

public func uuidof(_: SWRT_WindowsStorageSearch_IStorageItemQueryResult.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE8948079, 0x9D58, 0x47B8, 0xB2B2, 0x41B07F4795F9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IStorageItemQueryResult {
    public func getItemsAsync(_ startIndex: Swift.UInt32, _ maxNumberOfItems: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetItemsAsync(this, startIndex, maxNumberOfItems, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_IStorageItem.fromABI(consuming: &_result)
    }

    public func getItemsAsyncDefaultStartAndCount() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsStorage_IStorageItem>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetItemsAsyncDefaultStartAndCount(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_IStorageItem.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Search.IStorageQueryResultBase

public func uuidof(_: SWRT_WindowsStorageSearch_IStorageQueryResultBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC297D70D, 0x7353, 0x47AB, 0xBA58, 0x8C61425DC54B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageSearch_IStorageQueryResultBase {
    public func getItemCountAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.UInt32>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetItemCountAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.UInt32.fromABI(consuming: &_result)
    }

    public func get_Folder() throws -> WindowsStorage_StorageFolder? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorage_IStorageFolder>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Folder(this, &_result))
        return WindowsStorage_StorageFolderBinding.fromABI(consuming: &_result)
    }

    public func add_ContentsChanged(_ handler: WindowsFoundation_TypedEventHandler<WindowsStorageSearch_IStorageQueryResultBase?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.IStorageQueryResultBase_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.IStorageQueryResultBase_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ContentsChanged(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ContentsChanged(_ eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        let eventCookie_abi = WindowsRuntime.EventRegistrationToken.toABI(eventCookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ContentsChanged(this, eventCookie_abi))
    }

    public func add_OptionsChanged(_ changedHandler: WindowsFoundation_TypedEventHandler<WindowsStorageSearch_IStorageQueryResultBase?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var changedHandler_abi = try WindowsFoundation_TypedEventHandlerBinding.IStorageQueryResultBase_Object.toABI(changedHandler)
        defer { WindowsFoundation_TypedEventHandlerBinding.IStorageQueryResultBase_Object.release(&changedHandler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_OptionsChanged(this, changedHandler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_OptionsChanged(_ eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        let eventCookie_abi = WindowsRuntime.EventRegistrationToken.toABI(eventCookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_OptionsChanged(this, eventCookie_abi))
    }

    public func findStartIndexAsync(_ value: WindowsRuntime.IInspectable?) throws -> WindowsFoundation_IAsyncOperation<Swift.UInt32>? {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FindStartIndexAsync(this, value_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.UInt32.fromABI(consuming: &_result)
    }

    public func getCurrentQueryOptions() throws -> WindowsStorageSearch_QueryOptions? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageSearch_IQueryOptions>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetCurrentQueryOptions(this, &_result))
        return WindowsStorageSearch_QueryOptionsBinding.fromABI(consuming: &_result)
    }

    public func applyNewQueryOptions(_ newQueryOptions: WindowsStorageSearch_QueryOptions?) throws {
        var newQueryOptions_abi = try WindowsStorageSearch_QueryOptionsBinding.toABI(newQueryOptions)
        defer { WindowsStorageSearch_QueryOptionsBinding.release(&newQueryOptions_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ApplyNewQueryOptions(this, newQueryOptions_abi))
    }
}

// MARK: Windows.Storage.Streams.IBuffer

public func uuidof(_: SWRT_WindowsStorageStreams_IBuffer.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x905A0FE0, 0xBC53, 0x11DF, 0x8C49, 0x001E4FC686DA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IBuffer {
    public func get_Capacity() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Capacity(this, &_result))
        return _result
    }

    public func get_Length() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Length(this, &_result))
        return _result
    }

    public func put_Length(_ value: Swift.UInt32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Length(this, value))
    }
}

// MARK: Windows.Storage.Streams.IContentTypeProvider

public func uuidof(_: SWRT_WindowsStorageStreams_IContentTypeProvider.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x97D098A5, 0x3B99, 0x4DE9, 0x88A5, 0xE11D2F50C795)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IContentTypeProvider {
    public func get_ContentType() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContentType(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Streams.IInputStream

public func uuidof(_: SWRT_WindowsStorageStreams_IInputStream.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x905A0FE2, 0xBC53, 0x11DF, 0x8C49, 0x001E4FC686DA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IInputStream {
    public func readAsync(_ buffer: WindowsStorageStreams_IBuffer?, _ count: Swift.UInt32, _ options: WindowsStorageStreams_InputStreamOptions) throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IBuffer?, Swift.UInt32>? {
        var buffer_abi = try WindowsStorageStreams_IBufferBinding.toABI(buffer)
        defer { WindowsStorageStreams_IBufferBinding.release(&buffer_abi) }
        let options_abi = WindowsStorageStreams_InputStreamOptions.toABI(options)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperationWithProgress_WindowsStorageStreams_IBuffer_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReadAsync(this, buffer_abi, count, options_abi, &_result))
        return WindowsFoundation_IAsyncOperationWithProgressBinding.IBuffer_UInt32.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Streams.IInputStreamReference

public func uuidof(_: SWRT_WindowsStorageStreams_IInputStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x43929D18, 0x5EC9, 0x4B5A, 0x919C, 0x4205B0C804B6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IInputStreamReference {
    public func openSequentialReadAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IInputStream?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IInputStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.OpenSequentialReadAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IInputStream.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Streams.IOutputStream

public func uuidof(_: SWRT_WindowsStorageStreams_IOutputStream.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x905A0FE6, 0xBC53, 0x11DF, 0x8C49, 0x001E4FC686DA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IOutputStream {
    public func writeAsync(_ buffer: WindowsStorageStreams_IBuffer?) throws -> WindowsFoundation_IAsyncOperationWithProgress<Swift.UInt32, Swift.UInt32>? {
        var buffer_abi = try WindowsStorageStreams_IBufferBinding.toABI(buffer)
        defer { WindowsStorageStreams_IBufferBinding.release(&buffer_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperationWithProgress_UInt32_UInt32>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.WriteAsync(this, buffer_abi, &_result))
        return WindowsFoundation_IAsyncOperationWithProgressBinding.UInt32_UInt32.fromABI(consuming: &_result)
    }

    public func flushAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_Bool>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FlushAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Boolean.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Streams.IRandomAccessStream

public func uuidof(_: SWRT_WindowsStorageStreams_IRandomAccessStream.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x905A0FE1, 0xBC53, 0x11DF, 0x8C49, 0x001E4FC686DA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IRandomAccessStream {
    public func get_Size() throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return _result
    }

    public func put_Size(_ value: Swift.UInt64) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value))
    }

    public func getInputStreamAt(_ position: Swift.UInt64) throws -> WindowsStorageStreams_IInputStream? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IInputStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInputStreamAt(this, position, &_result))
        return WindowsStorageStreams_IInputStreamBinding.fromABI(consuming: &_result)
    }

    public func getOutputStreamAt(_ position: Swift.UInt64) throws -> WindowsStorageStreams_IOutputStream? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IOutputStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetOutputStreamAt(this, position, &_result))
        return WindowsStorageStreams_IOutputStreamBinding.fromABI(consuming: &_result)
    }

    public func get_Position() throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Position(this, &_result))
        return _result
    }

    public func seek(_ position: Swift.UInt64) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Seek(this, position))
    }

    public func cloneStream() throws -> WindowsStorageStreams_IRandomAccessStream? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStream>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CloneStream(this, &_result))
        return WindowsStorageStreams_IRandomAccessStreamBinding.fromABI(consuming: &_result)
    }

    public func get_CanRead() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CanRead(this, &_result))
        return _result
    }

    public func get_CanWrite() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CanWrite(this, &_result))
        return _result
    }
}

// MARK: Windows.Storage.Streams.IRandomAccessStreamReference

public func uuidof(_: SWRT_WindowsStorageStreams_IRandomAccessStreamReference.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x33EE3134, 0x1DD6, 0x4E3A, 0x8067, 0xD1C162E8642B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IRandomAccessStreamReference {
    public func openReadAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamWithContentType?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStreamWithContentType>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.OpenReadAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IRandomAccessStreamWithContentType.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Streams.IRandomAccessStreamReferenceStatics

public func uuidof(_: SWRT_WindowsStorageStreams_IRandomAccessStreamReferenceStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x857309DC, 0x3FBF, 0x4E7D, 0x986F, 0xEF3B1A07A964)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IRandomAccessStreamReferenceStatics {
    public func createFromFile(_ file: WindowsStorage_IStorageFile?) throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var file_abi = try WindowsStorage_IStorageFileBinding.toABI(file)
        defer { WindowsStorage_IStorageFileBinding.release(&file_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFromFile(this, file_abi, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    public func createFromUri(_ uri: WindowsFoundation_Uri?) throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var uri_abi = try WindowsFoundation_UriBinding.toABI(uri)
        defer { WindowsFoundation_UriBinding.release(&uri_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFromUri(this, uri_abi, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }

    public func createFromStream(_ stream: WindowsStorageStreams_IRandomAccessStream?) throws -> WindowsStorageStreams_RandomAccessStreamReference? {
        var stream_abi = try WindowsStorageStreams_IRandomAccessStreamBinding.toABI(stream)
        defer { WindowsStorageStreams_IRandomAccessStreamBinding.release(&stream_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateFromStream(this, stream_abi, &_result))
        return WindowsStorageStreams_RandomAccessStreamReferenceBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.Storage.Streams.IRandomAccessStreamWithContentType

public func uuidof(_: SWRT_WindowsStorageStreams_IRandomAccessStreamWithContentType.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCC254827, 0x4B3D, 0x438F, 0x9232, 0x10C76BC7E038)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsStorageStreams_IRandomAccessStreamWithContentType {
}

// MARK: Windows.System.IDispatcherQueueHandler

public func uuidof(_: SWRT_WindowsSystem_DispatcherQueueHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDFA2DC9C, 0x1A2D, 0x4917, 0x98F2, 0x939AF1D6E0C8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_DispatcherQueueHandler {
    public func invoke() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this))
    }
}

// MARK: Windows.System.IDispatcherQueue

public func uuidof(_: SWRT_WindowsSystem_IDispatcherQueue.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x603E88E4, 0xA338, 0x4FFE, 0xA457, 0xA5CFB9CEB899)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IDispatcherQueue {
    public func createTimer() throws -> WindowsSystem_DispatcherQueueTimer? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IDispatcherQueueTimer>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateTimer(this, &_result))
        return WindowsSystem_DispatcherQueueTimerBinding.fromABI(consuming: &_result)
    }

    public func tryEnqueue(_ callback: WindowsSystem_DispatcherQueueHandler?) throws -> Swift.Bool {
        var callback_abi = try WindowsSystem_DispatcherQueueHandlerBinding.toABI(callback)
        defer { WindowsSystem_DispatcherQueueHandlerBinding.release(&callback_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryEnqueue(this, callback_abi, &_result))
        return _result
    }

    public func tryEnqueueWithPriority(_ priority: WindowsSystem_DispatcherQueuePriority, _ callback: WindowsSystem_DispatcherQueueHandler?) throws -> Swift.Bool {
        let priority_abi = WindowsSystem_DispatcherQueuePriority.toABI(priority)
        var callback_abi = try WindowsSystem_DispatcherQueueHandlerBinding.toABI(callback)
        defer { WindowsSystem_DispatcherQueueHandlerBinding.release(&callback_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryEnqueueWithPriority(this, priority_abi, callback_abi, &_result))
        return _result
    }

    public func add_ShutdownStarting(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_DispatcherQueue?, WindowsSystem_DispatcherQueueShutdownStartingEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_DispatcherQueueShutdownStartingEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_DispatcherQueueShutdownStartingEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ShutdownStarting(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ShutdownStarting(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ShutdownStarting(this, token_abi))
    }

    public func add_ShutdownCompleted(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_DispatcherQueue?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueue_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ShutdownCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ShutdownCompleted(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ShutdownCompleted(this, token_abi))
    }
}

// MARK: Windows.System.IDispatcherQueue2

public func uuidof(_: SWRT_WindowsSystem_IDispatcherQueue2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC822C647, 0x30EF, 0x506E, 0xBD1E, 0xA647AE6675FF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IDispatcherQueue2 {
    public func get_HasThreadAccess() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasThreadAccess(this, &_result))
        return _result
    }
}

// MARK: Windows.System.IDispatcherQueueShutdownStartingEventArgs

public func uuidof(_: SWRT_WindowsSystem_IDispatcherQueueShutdownStartingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC4724C4C, 0xFF97, 0x40C0, 0xA226, 0xCC0AAA545E89)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IDispatcherQueueShutdownStartingEventArgs {
    public func getDeferral() throws -> WindowsFoundation_Deferral? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IDeferral>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDeferral(this, &_result))
        return WindowsFoundation_DeferralBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.System.IDispatcherQueueStatics

public func uuidof(_: SWRT_WindowsSystem_IDispatcherQueueStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA96D83D7, 0x9371, 0x4517, 0x9245, 0xD0824AC12C74)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IDispatcherQueueStatics {
    public func getForCurrentThread() throws -> WindowsSystem_DispatcherQueue? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IDispatcherQueue>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetForCurrentThread(this, &_result))
        return WindowsSystem_DispatcherQueueBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.System.IDispatcherQueueTimer

public func uuidof(_: SWRT_WindowsSystem_IDispatcherQueueTimer.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5FEABB1D, 0xA31C, 0x4727, 0xB1AC, 0x37454649D56A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IDispatcherQueueTimer {
    public func get_Interval() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Interval(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Interval(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Interval(this, value_abi))
    }

    public func get_IsRunning() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsRunning(this, &_result))
        return _result
    }

    public func get_IsRepeating() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsRepeating(this, &_result))
        return _result
    }

    public func put_IsRepeating(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsRepeating(this, value))
    }

    public func start() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Start(this))
    }

    public func stop() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Stop(this))
    }

    public func add_Tick(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_DispatcherQueueTimer?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.DispatcherQueueTimer_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.DispatcherQueueTimer_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Tick(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Tick(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Tick(this, token_abi))
    }
}

// MARK: Windows.System.IUser

public func uuidof(_: SWRT_WindowsSystem_IUser.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDF9A26C6, 0xE746, 0x4BCD, 0xB5D4, 0x120103C4209B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IUser {
    public func get_NonRoamableId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_NonRoamableId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func get_AuthenticationStatus() throws -> WindowsSystem_UserAuthenticationStatus {
        var _result: SWRT_WindowsSystem_UserAuthenticationStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AuthenticationStatus(this, &_result))
        return WindowsSystem_UserAuthenticationStatus.fromABI(_result)
    }

    public func get_Type() throws -> WindowsSystem_UserType {
        var _result: SWRT_WindowsSystem_UserType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Type(this, &_result))
        return WindowsSystem_UserType.fromABI(_result)
    }

    public func getPropertyAsync(_ value: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsRuntime.IInspectable?>? {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_IInspectable>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPropertyAsync(this, value_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Object.fromABI(consuming: &_result)
    }

    public func getPropertiesAsync(_ values: WindowsFoundationCollections_IVectorView<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IPropertySet?>? {
        var values_abi = try WindowsFoundationCollections_IVectorViewBinding.String.toABI(values)
        defer { WindowsFoundationCollections_IVectorViewBinding.String.release(&values_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPropertiesAsync(this, values_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IPropertySet.fromABI(consuming: &_result)
    }

    public func getPictureAsync(_ desiredSize: WindowsSystem_UserPictureSize) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamReference?>? {
        let desiredSize_abi = WindowsSystem_UserPictureSize.toABI(desiredSize)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsStorageStreams_IRandomAccessStreamReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPictureAsync(this, desiredSize_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IRandomAccessStreamReference.fromABI(consuming: &_result)
    }
}

// MARK: Windows.System.IUserAuthenticationStatusChangeDeferral

public func uuidof(_: SWRT_WindowsSystem_IUserAuthenticationStatusChangeDeferral.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x88B59568, 0xBB30, 0x42FB, 0xA270, 0xE9902E40EFA7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IUserAuthenticationStatusChangeDeferral {
    public func complete() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Complete(this))
    }
}

// MARK: Windows.System.IUserAuthenticationStatusChangingEventArgs

public func uuidof(_: SWRT_WindowsSystem_IUserAuthenticationStatusChangingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8C030F28, 0xA711, 0x4C1E, 0xAB48, 0x04179C15938F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IUserAuthenticationStatusChangingEventArgs {
    public func getDeferral() throws -> WindowsSystem_UserAuthenticationStatusChangeDeferral? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUserAuthenticationStatusChangeDeferral>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDeferral(this, &_result))
        return WindowsSystem_UserAuthenticationStatusChangeDeferralBinding.fromABI(consuming: &_result)
    }

    public func get_User() throws -> WindowsSystem_User? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUser>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_User(this, &_result))
        return WindowsSystem_UserBinding.fromABI(consuming: &_result)
    }

    public func get_NewStatus() throws -> WindowsSystem_UserAuthenticationStatus {
        var _result: SWRT_WindowsSystem_UserAuthenticationStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_NewStatus(this, &_result))
        return WindowsSystem_UserAuthenticationStatus.fromABI(_result)
    }

    public func get_CurrentStatus() throws -> WindowsSystem_UserAuthenticationStatus {
        var _result: SWRT_WindowsSystem_UserAuthenticationStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CurrentStatus(this, &_result))
        return WindowsSystem_UserAuthenticationStatus.fromABI(_result)
    }
}

// MARK: Windows.System.IUserChangedEventArgs

public func uuidof(_: SWRT_WindowsSystem_IUserChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x086459DC, 0x18C6, 0x48DB, 0xBC99, 0x724FB9203CCC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IUserChangedEventArgs {
    public func get_User() throws -> WindowsSystem_User? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUser>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_User(this, &_result))
        return WindowsSystem_UserBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.System.IUserChangedEventArgs2

public func uuidof(_: SWRT_WindowsSystem_IUserChangedEventArgs2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6B2CCB44, 0x6F01, 0x560C, 0x97AD, 0xFC7F32EC581F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IUserChangedEventArgs2 {
    public func get_ChangedPropertyKinds() throws -> WindowsFoundationCollections_IVectorView<WindowsSystem_UserWatcherUpdateKind>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVectorView_WindowsSystem_UserWatcherUpdateKind>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ChangedPropertyKinds(this, &_result))
        return WindowsFoundationCollections_IVectorViewBinding.UserWatcherUpdateKind.fromABI(consuming: &_result)
    }
}

// MARK: Windows.System.IUserStatics

public func uuidof(_: SWRT_WindowsSystem_IUserStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x155EB23B, 0x242A, 0x45E0, 0xA2E9, 0x3171FC6A7FDD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IUserStatics {
    public func createWatcher() throws -> WindowsSystem_UserWatcher? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUserWatcher>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateWatcher(this, &_result))
        return WindowsSystem_UserWatcherBinding.fromABI(consuming: &_result)
    }

    public func findAllAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsSystem_User>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FindAllAsync(this, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_User.fromABI(consuming: &_result)
    }

    public func findAllAsyncByType(_ type: WindowsSystem_UserType) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?>? {
        let type_abi = WindowsSystem_UserType.toABI(type)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsSystem_User>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FindAllAsyncByType(this, type_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_User.fromABI(consuming: &_result)
    }

    public func findAllAsyncByTypeAndStatus(_ type: WindowsSystem_UserType, _ status: WindowsSystem_UserAuthenticationStatus) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystem_User?>?>? {
        let type_abi = WindowsSystem_UserType.toABI(type)
        let status_abi = WindowsSystem_UserAuthenticationStatus.toABI(status)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_WindowsFoundationCollections_IVectorView_WindowsSystem_User>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FindAllAsyncByTypeAndStatus(this, type_abi, status_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.IVectorView_User.fromABI(consuming: &_result)
    }

    public func getFromId(_ nonRoamableId: Swift.String) throws -> WindowsSystem_User? {
        var nonRoamableId_abi = try WindowsRuntime.StringBinding.toABI(nonRoamableId)
        defer { WindowsRuntime.StringBinding.release(&nonRoamableId_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IUser>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetFromId(this, nonRoamableId_abi, &_result))
        return WindowsSystem_UserBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.System.IUserWatcher

public func uuidof(_: SWRT_WindowsSystem_IUserWatcher.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x155EB23B, 0x242A, 0x45E0, 0xA2E9, 0x3171FC6A7FBB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsSystem_IUserWatcher {
    public func get_Status() throws -> WindowsSystem_UserWatcherStatus {
        var _result: SWRT_WindowsSystem_UserWatcherStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Status(this, &_result))
        return WindowsSystem_UserWatcherStatus.fromABI(_result)
    }

    public func start() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Start(this))
    }

    public func stop() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Stop(this))
    }

    public func add_Added(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Added(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Added(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Added(this, token_abi))
    }

    public func add_Removed(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Removed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Removed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Removed(this, token_abi))
    }

    public func add_Updated(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Updated(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Updated(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Updated(this, token_abi))
    }

    public func add_AuthenticationStatusChanged(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_AuthenticationStatusChanged(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_AuthenticationStatusChanged(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_AuthenticationStatusChanged(this, token_abi))
    }

    public func add_AuthenticationStatusChanging(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserAuthenticationStatusChangingEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserAuthenticationStatusChangingEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.UserWatcher_UserAuthenticationStatusChangingEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_AuthenticationStatusChanging(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_AuthenticationStatusChanging(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_AuthenticationStatusChanging(this, token_abi))
    }

    public func add_EnumerationCompleted(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.UserWatcher_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.UserWatcher_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_EnumerationCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_EnumerationCompleted(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_EnumerationCompleted(this, token_abi))
    }

    public func add_Stopped(_ handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.UserWatcher_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.UserWatcher_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Stopped(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Stopped(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Stopped(this, token_abi))
    }
}

// MARK: Windows.UI.IUIContext

public func uuidof(_: SWRT_WindowsUI_IUIContext.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBB5CFACD, 0x5BD8, 0x59D0, 0xA59E, 0x1C17A4D6D243)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUI_IUIContext {
}

// MARK: Windows.UI.Composition.IAmbientLight

public func uuidof(_: SWRT_WindowsUIComposition_IAmbientLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA48130A1, 0xB7C4, 0x46F7, 0xB9BF, 0xDAF43A44E6EE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IAmbientLight {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IAmbientLight2

public func uuidof(_: SWRT_WindowsUIComposition_IAmbientLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3B64A6BF, 0x5F97, 0x4C94, 0x86E5, 0x042DD386B27D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IAmbientLight2 {
    public func get_Intensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Intensity(this, &_result))
        return _result
    }

    public func put_Intensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Intensity(this, value))
    }
}

// MARK: Windows.UI.Composition.IAnimationController

public func uuidof(_: SWRT_WindowsUIComposition_IAnimationController.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC934EFD2, 0x0722, 0x4F5F, 0xA4E2, 0x9510F3D43BF7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IAnimationController {
    public func get_PlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PlaybackRate(this, &_result))
        return _result
    }

    public func put_PlaybackRate(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_PlaybackRate(this, value))
    }

    public func get_Progress() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Progress(this, &_result))
        return _result
    }

    public func put_Progress(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Progress(this, value))
    }

    public func get_ProgressBehavior() throws -> WindowsUIComposition_AnimationControllerProgressBehavior {
        var _result: SWRT_WindowsUIComposition_AnimationControllerProgressBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ProgressBehavior(this, &_result))
        return WindowsUIComposition_AnimationControllerProgressBehavior.fromABI(_result)
    }

    public func put_ProgressBehavior(_ value: WindowsUIComposition_AnimationControllerProgressBehavior) throws {
        let value_abi = WindowsUIComposition_AnimationControllerProgressBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ProgressBehavior(this, value_abi))
    }

    public func pause() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Pause(this))
    }

    public func resume() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Resume(this))
    }
}

// MARK: Windows.UI.Composition.IAnimationControllerStatics

public func uuidof(_: SWRT_WindowsUIComposition_IAnimationControllerStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE71164DF, 0x651B, 0x4800, 0xB9E5, 0x6A3BCFED3365)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IAnimationControllerStatics {
    public func get_MaxPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxPlaybackRate(this, &_result))
        return _result
    }

    public func get_MinPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinPlaybackRate(this, &_result))
        return _result
    }
}

// MARK: Windows.UI.Composition.IAnimationObject

public func uuidof(_: SWRT_WindowsUIComposition_IAnimationObject.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE7141E0A, 0x04B8, 0x4FC5, 0xA4DC, 0x195392E57807)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IAnimationObject {
    public func populatePropertyInfo(_ propertyName: Swift.String, _ propertyInfo: WindowsUIComposition_AnimationPropertyInfo?) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var propertyInfo_abi = try WindowsUIComposition_AnimationPropertyInfoBinding.toABI(propertyInfo)
        defer { WindowsUIComposition_AnimationPropertyInfoBinding.release(&propertyInfo_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.PopulatePropertyInfo(this, propertyName_abi, propertyInfo_abi))
    }
}

// MARK: Windows.UI.Composition.IAnimationPropertyInfo

public func uuidof(_: SWRT_WindowsUIComposition_IAnimationPropertyInfo.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF4716F05, 0xED77, 0x4E3C, 0xB328, 0x5C3985B3738F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IAnimationPropertyInfo {
    public func get_AccessMode() throws -> WindowsUIComposition_AnimationPropertyAccessMode {
        var _result: SWRT_WindowsUIComposition_AnimationPropertyAccessMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AccessMode(this, &_result))
        return WindowsUIComposition_AnimationPropertyAccessMode.fromABI(_result)
    }

    public func put_AccessMode(_ value: WindowsUIComposition_AnimationPropertyAccessMode) throws {
        let value_abi = WindowsUIComposition_AnimationPropertyAccessMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AccessMode(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IBooleanKeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IBooleanKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x95E23A08, 0xD1F4, 0x4972, 0x9770, 0x3EFE68D82E14)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IBooleanKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value))
    }
}

// MARK: Windows.UI.Composition.IBounceScalarNaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IBounceScalarNaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBAA30DCC, 0xA633, 0x4618, 0x9B06, 0x7F7C72C87CFF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IBounceScalarNaturalMotionAnimation {
    public func get_Acceleration() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Acceleration(this, &_result))
        return _result
    }

    public func put_Acceleration(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Acceleration(this, value))
    }

    public func get_Restitution() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Restitution(this, &_result))
        return _result
    }

    public func put_Restitution(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Restitution(this, value))
    }
}

// MARK: Windows.UI.Composition.IBounceVector2NaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IBounceVector2NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDA344196, 0x2154, 0x4B3C, 0x88AA, 0x47361204ECCD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IBounceVector2NaturalMotionAnimation {
    public func get_Acceleration() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Acceleration(this, &_result))
        return _result
    }

    public func put_Acceleration(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Acceleration(this, value))
    }

    public func get_Restitution() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Restitution(this, &_result))
        return _result
    }

    public func put_Restitution(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Restitution(this, value))
    }
}

// MARK: Windows.UI.Composition.IBounceVector3NaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IBounceVector3NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x47DABC31, 0x10D3, 0x4518, 0x86F1, 0x09CAF742D113)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IBounceVector3NaturalMotionAnimation {
    public func get_Acceleration() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Acceleration(this, &_result))
        return _result
    }

    public func put_Acceleration(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Acceleration(this, value))
    }

    public func get_Restitution() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Restitution(this, &_result))
        return _result
    }

    public func put_Restitution(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Restitution(this, value))
    }
}

// MARK: Windows.UI.Composition.IColorKeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IColorKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x93ADB5E9, 0x8E05, 0x4593, 0x84A3, 0xDCA152781E56)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IColorKeyFrameAnimation {
    public func get_InterpolationColorSpace() throws -> WindowsUIComposition_CompositionColorSpace {
        var _result: SWRT_WindowsUIComposition_CompositionColorSpace = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InterpolationColorSpace(this, &_result))
        return WindowsUIComposition_CompositionColorSpace.fromABI(_result)
    }

    public func put_InterpolationColorSpace(_ value: WindowsUIComposition_CompositionColorSpace) throws {
        let value_abi = WindowsUIComposition_CompositionColorSpace.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InterpolationColorSpace(this, value_abi))
    }

    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsUI_Color, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x464C4C2C, 0x1CAA, 0x4061, 0x9B40, 0xE13FDE1503CA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionAnimation {
    public func clearAllParameters() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ClearAllParameters(this))
    }

    public func clearParameter(_ key: Swift.String) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ClearParameter(this, key_abi))
    }

    public func setColorParameter(_ key: Swift.String, _ value: WindowsUI_Color) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetColorParameter(this, key_abi, value_abi))
    }

    public func setMatrix3x2Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Matrix3x2) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetMatrix3x2Parameter(this, key_abi, value_abi))
    }

    public func setMatrix4x4Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Matrix4x4) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix4x4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetMatrix4x4Parameter(this, key_abi, value_abi))
    }

    public func setQuaternionParameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Quaternion) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetQuaternionParameter(this, key_abi, value_abi))
    }

    public func setReferenceParameter(_ key: Swift.String, _ compositionObject: WindowsUIComposition_CompositionObject?) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        var compositionObject_abi = try WindowsUIComposition_CompositionObjectBinding.toABI(compositionObject)
        defer { WindowsUIComposition_CompositionObjectBinding.release(&compositionObject_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetReferenceParameter(this, key_abi, compositionObject_abi))
    }

    public func setScalarParameter(_ key: Swift.String, _ value: Swift.Float) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetScalarParameter(this, key_abi, value))
    }

    public func setVector2Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector2) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetVector2Parameter(this, key_abi, value_abi))
    }

    public func setVector3Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector3) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetVector3Parameter(this, key_abi, value_abi))
    }

    public func setVector4Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector4) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetVector4Parameter(this, key_abi, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionAnimation2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionAnimation2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x369B603E, 0xA80F, 0x4948, 0x93E3, 0xED23FB38C6CB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionAnimation2 {
    public func setBooleanParameter(_ key: Swift.String, _ value: Swift.Bool) throws {
        var key_abi = try WindowsRuntime.StringBinding.toABI(key)
        defer { WindowsRuntime.StringBinding.release(&key_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetBooleanParameter(this, key_abi, value))
    }

    public func get_Target() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Target(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Target(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Target(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionAnimation3

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionAnimation3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD51E030D, 0x7DA4, 0x4BD7, 0xBC2D, 0xF4517529F43A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionAnimation3 {
    public func get_InitialValueExpressions() throws -> WindowsUIComposition_InitialValueExpressionCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IMap_String_String>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValueExpressions(this, &_result))
        return WindowsUIComposition_InitialValueExpressionCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionAnimation4

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionAnimation4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x770137BE, 0x76BC, 0x4E23, 0xBFED, 0xFE9CC20F6EC9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionAnimation4 {
    public func setExpressionReferenceParameter(_ parameterName: Swift.String, _ source: WindowsUIComposition_IAnimationObject?) throws {
        var parameterName_abi = try WindowsRuntime.StringBinding.toABI(parameterName)
        defer { WindowsRuntime.StringBinding.release(&parameterName_abi) }
        var source_abi = try WindowsUIComposition_IAnimationObjectBinding.toABI(source)
        defer { WindowsUIComposition_IAnimationObjectBinding.release(&source_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetExpressionReferenceParameter(this, parameterName_abi, source_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionAnimationBase

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionAnimationBase.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1C2C2999, 0xE818, 0x48D3, 0xA6DD, 0xD78C82F8ACE9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionAnimationBase {
}

// MARK: Windows.UI.Composition.ICompositionAnimationFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x10F6C4FB, 0x6E51, 0x4C25, 0xBBD3, 0x586A9BEC3EF4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionAnimationFactory {
}

// MARK: Windows.UI.Composition.ICompositionAnimationGroup

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionAnimationGroup.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5E7CC90C, 0xCD14, 0x4E07, 0x8A55, 0xC72527AABDAC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionAnimationGroup {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func add(_ value: WindowsUIComposition_CompositionAnimation?) throws {
        var value_abi = try WindowsUIComposition_CompositionAnimationBinding.toABI(value)
        defer { WindowsUIComposition_CompositionAnimationBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Add(this, value_abi))
    }

    public func remove(_ value: WindowsUIComposition_CompositionAnimation?) throws {
        var value_abi = try WindowsUIComposition_CompositionAnimationBinding.toABI(value)
        defer { WindowsUIComposition_CompositionAnimationBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, value_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Windows.UI.Composition.ICompositionBackdropBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionBackdropBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC5ACAE58, 0x3898, 0x499E, 0x8D7F, 0x224E91286A5D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionBackdropBrush {
}

// MARK: Windows.UI.Composition.ICompositionBatchCompletedEventArgs

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionBatchCompletedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0D00DAD0, 0x9464, 0x450A, 0xA562, 0x2E2698B0A812)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionBatchCompletedEventArgs {
}

// MARK: Windows.UI.Composition.ICompositionBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAB0D7608, 0x30C0, 0x40E9, 0xB568, 0xB60A6BD1FB46)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionBrush {
}

// MARK: Windows.UI.Composition.ICompositionBrushFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionBrushFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDA53FB4C, 0x4650, 0x47C4, 0xAD76, 0x765379607ED6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionBrushFactory {
}

// MARK: Windows.UI.Composition.ICompositionClip

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionClip.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1CCD2A52, 0xCFC7, 0x4ACE, 0x9983, 0x146BB8EB6A3C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionClip {
}

// MARK: Windows.UI.Composition.ICompositionClip2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionClip2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5893E069, 0x3516, 0x40E1, 0x89E0, 0x5BA924927235)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionClip2 {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionClipFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionClipFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB9484CAF, 0x20C7, 0x4AED, 0xAC4A, 0x9C78BA1302CF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionClipFactory {
}

// MARK: Windows.UI.Composition.ICompositionColorBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionColorBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2B264C5E, 0xBF35, 0x4831, 0x8642, 0xCF70C20FFF2F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionColorBrush {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionColorGradientStop

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionColorGradientStop.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6F00CA92, 0xC801, 0x4E41, 0x9A8F, 0xA53E20F57778)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionColorGradientStop {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_Offset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return _result
    }

    public func put_Offset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value))
    }
}

// MARK: Windows.UI.Composition.ICompositionColorGradientStopCollection

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionColorGradientStopCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9F1D20EC, 0x7B04, 0x4B1D, 0x90BC, 0x9FA32C0CFD26)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionColorGradientStopCollection {
}

// MARK: Windows.UI.Composition.ICompositionCommitBatch

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionCommitBatch.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0D00DAD0, 0xCA07, 0x4400, 0x8C8E, 0xCB5DB08559CC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionCommitBatch {
    public func get_IsActive() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsActive(this, &_result))
        return _result
    }

    public func get_IsEnded() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEnded(this, &_result))
        return _result
    }

    public func add_Completed(_ handler: WindowsFoundation_TypedEventHandler<WindowsRuntime.IInspectable?, WindowsUIComposition_CompositionBatchCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Completed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Completed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Completed(this, token_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionContainerShape

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionContainerShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4F5E859B, 0x2E5B, 0x44A8, 0x982C, 0xAA0F69C16059)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionContainerShape {
    public func get_Shapes() throws -> WindowsUIComposition_CompositionShapeCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_WindowsUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shapes(this, &_result))
        return WindowsUIComposition_CompositionShapeCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionEasingFunction

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5145E356, 0xBF79, 0x4EA8, 0x8CC2, 0x6B5B472E6C9A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionEasingFunction {
}

// MARK: Windows.UI.Composition.ICompositionEasingFunctionFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionEasingFunctionFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60840774, 0x3DA0, 0x4949, 0x8200, 0x7206C00190A0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionEasingFunctionFactory {
}

// MARK: Windows.UI.Composition.ICompositionEffectBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionEffectBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBF7F795E, 0x83CC, 0x44BF, 0xA447, 0x3E3C071789EC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionEffectBrush {
    public func getSourceParameter(_ name: Swift.String) throws -> WindowsUIComposition_CompositionBrush? {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSourceParameter(this, name_abi, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func setSourceParameter(_ name: Swift.String, _ source: WindowsUIComposition_CompositionBrush?) throws {
        var name_abi = try WindowsRuntime.StringBinding.toABI(name)
        defer { WindowsRuntime.StringBinding.release(&name_abi) }
        var source_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(source)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&source_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetSourceParameter(this, name_abi, source_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionEffectFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionEffectFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBE5624AF, 0xBA7E, 0x4510, 0x9850, 0x41C0B4FF74DF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionEffectFactory {
    public func createBrush() throws -> WindowsUIComposition_CompositionEffectBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionEffectBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBrush(this, &_result))
        return WindowsUIComposition_CompositionEffectBrushBinding.fromABI(consuming: &_result)
    }

    public func get_ExtendedError() throws -> COM.HResult {
        var _result: SWRT_HResult = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ExtendedError(this, &_result))
        return COM.HResultBinding.fromABI(_result)
    }

    public func get_LoadStatus() throws -> WindowsUIComposition_CompositionEffectFactoryLoadStatus {
        var _result: SWRT_WindowsUIComposition_CompositionEffectFactoryLoadStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LoadStatus(this, &_result))
        return WindowsUIComposition_CompositionEffectFactoryLoadStatus.fromABI(_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionEllipseGeometry

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionEllipseGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4801F884, 0xF6AD, 0x4B93, 0xAFA9, 0x897B64E57B1F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionEllipseGeometry {
    public func get_Center() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Center(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Center(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Center(this, value_abi))
    }

    public func get_Radius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Radius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Radius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Radius(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionGeometricClip

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionGeometricClip.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC840B581, 0x81C9, 0x4444, 0xA2C1, 0xCCAECE3A50E5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionGeometricClip {
    public func get_Geometry() throws -> WindowsUIComposition_CompositionGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Geometry(this, &_result))
        return WindowsUIComposition_CompositionGeometryBinding.fromABI(consuming: &_result)
    }

    public func put_Geometry(_ value: WindowsUIComposition_CompositionGeometry?) throws {
        var value_abi = try WindowsUIComposition_CompositionGeometryBinding.toABI(value)
        defer { WindowsUIComposition_CompositionGeometryBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Geometry(this, value_abi))
    }

    public func get_ViewBox() throws -> WindowsUIComposition_CompositionViewBox? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionViewBox>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ViewBox(this, &_result))
        return WindowsUIComposition_CompositionViewBoxBinding.fromABI(consuming: &_result)
    }

    public func put_ViewBox(_ value: WindowsUIComposition_CompositionViewBox?) throws {
        var value_abi = try WindowsUIComposition_CompositionViewBoxBinding.toABI(value)
        defer { WindowsUIComposition_CompositionViewBoxBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ViewBox(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionGeometry

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE985217C, 0x6A17, 0x4207, 0xABD8, 0x5FD3DD612A9D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionGeometry {
    public func get_TrimEnd() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TrimEnd(this, &_result))
        return _result
    }

    public func put_TrimEnd(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TrimEnd(this, value))
    }

    public func get_TrimOffset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TrimOffset(this, &_result))
        return _result
    }

    public func put_TrimOffset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TrimOffset(this, value))
    }

    public func get_TrimStart() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TrimStart(this, &_result))
        return _result
    }

    public func put_TrimStart(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TrimStart(this, value))
    }
}

// MARK: Windows.UI.Composition.ICompositionGeometryFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionGeometryFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBFFEBFE1, 0x8C25, 0x480B, 0x9F56, 0xFED6B288055D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionGeometryFactory {
}

// MARK: Windows.UI.Composition.ICompositionGradientBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionGradientBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1D9709E0, 0xFFC6, 0x4C0E, 0xA9AB, 0x34144D4C9098)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionGradientBrush {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_ColorStops() throws -> WindowsUIComposition_CompositionColorGradientStopCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorGradientStopCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ColorStops(this, &_result))
        return WindowsUIComposition_CompositionColorGradientStopCollectionBinding.fromABI(consuming: &_result)
    }

    public func get_ExtendMode() throws -> WindowsUIComposition_CompositionGradientExtendMode {
        var _result: SWRT_WindowsUIComposition_CompositionGradientExtendMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ExtendMode(this, &_result))
        return WindowsUIComposition_CompositionGradientExtendMode.fromABI(_result)
    }

    public func put_ExtendMode(_ value: WindowsUIComposition_CompositionGradientExtendMode) throws {
        let value_abi = WindowsUIComposition_CompositionGradientExtendMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ExtendMode(this, value_abi))
    }

    public func get_InterpolationSpace() throws -> WindowsUIComposition_CompositionColorSpace {
        var _result: SWRT_WindowsUIComposition_CompositionColorSpace = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InterpolationSpace(this, &_result))
        return WindowsUIComposition_CompositionColorSpace.fromABI(_result)
    }

    public func put_InterpolationSpace(_ value: WindowsUIComposition_CompositionColorSpace) throws {
        let value_abi = WindowsUIComposition_CompositionColorSpace.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InterpolationSpace(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionGradientBrush2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionGradientBrush2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x899DD5A1, 0xB4C7, 0x4B33, 0xA1B6, 0x264ADDC26D10)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionGradientBrush2 {
    public func get_MappingMode() throws -> WindowsUIComposition_CompositionMappingMode {
        var _result: SWRT_WindowsUIComposition_CompositionMappingMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MappingMode(this, &_result))
        return WindowsUIComposition_CompositionMappingMode.fromABI(_result)
    }

    public func put_MappingMode(_ value: WindowsUIComposition_CompositionMappingMode) throws {
        let value_abi = WindowsUIComposition_CompositionMappingMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MappingMode(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionGradientBrushFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionGradientBrushFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x56D765D7, 0xF189, 0x48C9, 0x9C8D, 0x94DAF1BEC010)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionGradientBrushFactory {
}

// MARK: Windows.UI.Composition.ICompositionLight

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x41A6D7C2, 0x2E5D, 0x4BC1, 0xB09E, 0x8F0A03E3D8D3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionLight {
    public func get_Targets() throws -> WindowsUIComposition_VisualUnorderedCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisualUnorderedCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Targets(this, &_result))
        return WindowsUIComposition_VisualUnorderedCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionLight2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA7BCDA72, 0xF35D, 0x425D, 0x9B98, 0x23F4205F6669)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionLight2 {
    public func get_ExclusionsFromTargets() throws -> WindowsUIComposition_VisualUnorderedCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisualUnorderedCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ExclusionsFromTargets(this, &_result))
        return WindowsUIComposition_VisualUnorderedCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionLight3

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionLight3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4B0B00E4, 0xDF07, 0x4959, 0xB7A4, 0x4F7E4233F838)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionLight3 {
    public func get_IsEnabled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEnabled(this, &_result))
        return _result
    }

    public func put_IsEnabled(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsEnabled(this, value))
    }
}

// MARK: Windows.UI.Composition.ICompositionLightFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionLightFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x069CF306, 0xDA3C, 0x4B44, 0x838A, 0x5E03D51ACE55)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionLightFactory {
}

// MARK: Windows.UI.Composition.ICompositionLineGeometry

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionLineGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDD7615A4, 0x0C9A, 0x4B67, 0x8DCE, 0x440A5BF9CDEC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionLineGeometry {
    public func get_Start() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Start(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Start(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Start(this, value_abi))
    }

    public func get_End() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_End(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_End(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_End(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionLinearGradientBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionLinearGradientBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x983BC519, 0xA9DB, 0x413C, 0xA2D8, 0x2A9056FC525E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionLinearGradientBrush {
    public func get_EndPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EndPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_EndPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_EndPoint(this, value_abi))
    }

    public func get_StartPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StartPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_StartPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StartPoint(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionMaskBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionMaskBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x522CF09E, 0xBE6B, 0x4F41, 0xBE49, 0xF9226D471B4A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionMaskBrush {
    public func get_Mask() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mask(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Mask(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Mask(this, value_abi))
    }

    public func get_Source() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Source(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Source(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Source(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionNineGridBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionNineGridBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF25154E4, 0xBC8C, 0x4BE7, 0xB80F, 0x8685B83C0186)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionNineGridBrush {
    public func get_BottomInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomInset(this, &_result))
        return _result
    }

    public func put_BottomInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomInset(this, value))
    }

    public func get_BottomInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomInsetScale(this, &_result))
        return _result
    }

    public func put_BottomInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomInsetScale(this, value))
    }

    public func get_IsCenterHollow() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsCenterHollow(this, &_result))
        return _result
    }

    public func put_IsCenterHollow(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsCenterHollow(this, value))
    }

    public func get_LeftInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LeftInset(this, &_result))
        return _result
    }

    public func put_LeftInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LeftInset(this, value))
    }

    public func get_LeftInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LeftInsetScale(this, &_result))
        return _result
    }

    public func put_LeftInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LeftInsetScale(this, value))
    }

    public func get_RightInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RightInset(this, &_result))
        return _result
    }

    public func put_RightInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RightInset(this, value))
    }

    public func get_RightInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RightInsetScale(this, &_result))
        return _result
    }

    public func put_RightInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RightInsetScale(this, value))
    }

    public func get_Source() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Source(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Source(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Source(this, value_abi))
    }

    public func get_TopInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopInset(this, &_result))
        return _result
    }

    public func put_TopInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopInset(this, value))
    }

    public func get_TopInsetScale() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopInsetScale(this, &_result))
        return _result
    }

    public func put_TopInsetScale(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopInsetScale(this, value))
    }

    public func setInsets(_ inset: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsets(this, inset))
    }

    public func setInsetsWithValues(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsetsWithValues(this, left, top, right, bottom))
    }

    public func setInsetScales(_ scale: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsetScales(this, scale))
    }

    public func setInsetScalesWithValues(_ left: Swift.Float, _ top: Swift.Float, _ right: Swift.Float, _ bottom: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetInsetScalesWithValues(this, left, top, right, bottom))
    }
}

// MARK: Windows.UI.Composition.ICompositionObject

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionObject.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBCB4AD45, 0x7609, 0x4550, 0x934F, 0x16002A68FDED)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionObject {
    public func get_Compositor() throws -> WindowsUIComposition_Compositor? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositor>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Compositor(this, &_result))
        return WindowsUIComposition_CompositorBinding.fromABI(consuming: &_result)
    }

    public func get_Dispatcher() throws -> WindowsUICore_CoreDispatcher? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUICore_ICoreDispatcher>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Dispatcher(this, &_result))
        return WindowsUICore_CoreDispatcherBinding.fromABI(consuming: &_result)
    }

    public func get_Properties() throws -> WindowsUIComposition_CompositionPropertySet? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Properties(this, &_result))
        return WindowsUIComposition_CompositionPropertySetBinding.fromABI(consuming: &_result)
    }

    public func startAnimation(_ propertyName: Swift.String, _ animation: WindowsUIComposition_CompositionAnimation?) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var animation_abi = try WindowsUIComposition_CompositionAnimationBinding.toABI(animation)
        defer { WindowsUIComposition_CompositionAnimationBinding.release(&animation_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimation(this, propertyName_abi, animation_abi))
    }

    public func stopAnimation(_ propertyName: Swift.String) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StopAnimation(this, propertyName_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionObject2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionObject2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEF874EA1, 0x5CFF, 0x4B68, 0x9E30, 0xA1519D08BA03)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionObject2 {
    public func get_Comment() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Comment(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Comment(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Comment(this, value_abi))
    }

    public func get_ImplicitAnimations() throws -> WindowsUIComposition_ImplicitAnimationCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IImplicitAnimationCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ImplicitAnimations(this, &_result))
        return WindowsUIComposition_ImplicitAnimationCollectionBinding.fromABI(consuming: &_result)
    }

    public func put_ImplicitAnimations(_ value: WindowsUIComposition_ImplicitAnimationCollection?) throws {
        var value_abi = try WindowsUIComposition_ImplicitAnimationCollectionBinding.toABI(value)
        defer { WindowsUIComposition_ImplicitAnimationCollectionBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ImplicitAnimations(this, value_abi))
    }

    public func startAnimationGroup(_ value: WindowsUIComposition_ICompositionAnimationBase?) throws {
        var value_abi = try WindowsUIComposition_ICompositionAnimationBaseBinding.toABI(value)
        defer { WindowsUIComposition_ICompositionAnimationBaseBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimationGroup(this, value_abi))
    }

    public func stopAnimationGroup(_ value: WindowsUIComposition_ICompositionAnimationBase?) throws {
        var value_abi = try WindowsUIComposition_ICompositionAnimationBaseBinding.toABI(value)
        defer { WindowsUIComposition_ICompositionAnimationBaseBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StopAnimationGroup(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionObject3

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionObject3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4BC27925, 0xDACD, 0x4CF2, 0x98B1, 0x986B76E7EBE6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionObject3 {
    public func get_DispatcherQueue() throws -> WindowsSystem_DispatcherQueue? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IDispatcherQueue>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DispatcherQueue(this, &_result))
        return WindowsSystem_DispatcherQueueBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionObject4

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionObject4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0BB3784C, 0x346B, 0x4A7C, 0x966B, 0x7310966553D5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionObject4 {
    public func tryGetAnimationController(_ propertyName: Swift.String) throws -> WindowsUIComposition_AnimationController? {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IAnimationController>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetAnimationController(this, propertyName_abi, &_result))
        return WindowsUIComposition_AnimationControllerBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionObjectFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionObjectFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x51205C5E, 0x558A, 0x4F2A, 0x8D39, 0x37BFE1E20DDD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionObjectFactory {
}

// MARK: Windows.UI.Composition.ICompositionObjectStatics

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionObjectStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC1ED052F, 0x1BA2, 0x44BA, 0xA904, 0x6A882A0A5ADB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionObjectStatics {
    public func startAnimationWithIAnimationObject(_ target: WindowsUIComposition_IAnimationObject?, _ propertyName: Swift.String, _ animation: WindowsUIComposition_CompositionAnimation?) throws {
        var target_abi = try WindowsUIComposition_IAnimationObjectBinding.toABI(target)
        defer { WindowsUIComposition_IAnimationObjectBinding.release(&target_abi) }
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var animation_abi = try WindowsUIComposition_CompositionAnimationBinding.toABI(animation)
        defer { WindowsUIComposition_CompositionAnimationBinding.release(&animation_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimationWithIAnimationObject(this, target_abi, propertyName_abi, animation_abi))
    }

    public func startAnimationGroupWithIAnimationObject(_ target: WindowsUIComposition_IAnimationObject?, _ animation: WindowsUIComposition_ICompositionAnimationBase?) throws {
        var target_abi = try WindowsUIComposition_IAnimationObjectBinding.toABI(target)
        defer { WindowsUIComposition_IAnimationObjectBinding.release(&target_abi) }
        var animation_abi = try WindowsUIComposition_ICompositionAnimationBaseBinding.toABI(animation)
        defer { WindowsUIComposition_ICompositionAnimationBaseBinding.release(&animation_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StartAnimationGroupWithIAnimationObject(this, target_abi, animation_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionPath

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionPath.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x66DA1D5F, 0x2E10, 0x4F22, 0x8A06, 0x0A8151919E60)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionPath {
}

// MARK: Windows.UI.Composition.ICompositionPathFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionPathFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9C1E8C6A, 0x0F33, 0x4751, 0x9437, 0xEB3FB9D3AB07)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionPathFactory {
    public func create(_ source: WindowsGraphics_IGeometrySource2D?) throws -> COM.COMReference<SWRT_WindowsUIComposition_ICompositionPath> {
        var source_abi = try WindowsGraphics_IGeometrySource2DBinding.toABI(source)
        defer { WindowsGraphics_IGeometrySource2DBinding.release(&source_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionPath>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Create(this, source_abi, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.UI.Composition.ICompositionPathGeometry

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionPathGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0B6A417E, 0x2C77, 0x4C23, 0xAF5E, 0x6304C147BB61)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionPathGeometry {
    public func get_Path() throws -> WindowsUIComposition_CompositionPath? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionPath>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Path(this, &_result))
        return WindowsUIComposition_CompositionPathBinding.fromABI(consuming: &_result)
    }

    public func put_Path(_ value: WindowsUIComposition_CompositionPath?) throws {
        var value_abi = try WindowsUIComposition_CompositionPathBinding.toABI(value)
        defer { WindowsUIComposition_CompositionPathBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Path(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionProjectedShadow

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionProjectedShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x285B8E72, 0x4328, 0x523F, 0xBCF2, 0x5557C52C3B25)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionProjectedShadow {
    public func get_BlurRadiusMultiplier() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BlurRadiusMultiplier(this, &_result))
        return _result
    }

    public func put_BlurRadiusMultiplier(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BlurRadiusMultiplier(this, value))
    }

    public func get_Casters() throws -> WindowsUIComposition_CompositionProjectedShadowCasterCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionProjectedShadowCasterCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Casters(this, &_result))
        return WindowsUIComposition_CompositionProjectedShadowCasterCollectionBinding.fromABI(consuming: &_result)
    }

    public func get_LightSource() throws -> WindowsUIComposition_CompositionLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LightSource(this, &_result))
        return WindowsUIComposition_CompositionLightBinding.fromABI(consuming: &_result)
    }

    public func put_LightSource(_ value: WindowsUIComposition_CompositionLight?) throws {
        var value_abi = try WindowsUIComposition_CompositionLightBinding.toABI(value)
        defer { WindowsUIComposition_CompositionLightBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LightSource(this, value_abi))
    }

    public func get_MaxBlurRadius() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxBlurRadius(this, &_result))
        return _result
    }

    public func put_MaxBlurRadius(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MaxBlurRadius(this, value))
    }

    public func get_MinBlurRadius() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinBlurRadius(this, &_result))
        return _result
    }

    public func put_MinBlurRadius(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MinBlurRadius(this, value))
    }

    public func get_Receivers() throws -> WindowsUIComposition_CompositionProjectedShadowReceiverUnorderedCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiverUnorderedCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Receivers(this, &_result))
        return WindowsUIComposition_CompositionProjectedShadowReceiverUnorderedCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionProjectedShadowCaster

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionProjectedShadowCaster.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB1D7D426, 0x1E36, 0x5A62, 0xBE56, 0xA16112FDD148)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionProjectedShadowCaster {
    public func get_Brush() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Brush(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Brush(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Brush(this, value_abi))
    }

    public func get_CastingVisual() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CastingVisual(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CastingVisual(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CastingVisual(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionProjectedShadowCasterCollection

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionProjectedShadowCasterCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD2525C0C, 0xE07F, 0x58A3, 0xAC91, 0x37F73EE91740)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionProjectedShadowCasterCollection {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func insertAbove(_ newCaster: WindowsUIComposition_CompositionProjectedShadowCaster?, _ reference: WindowsUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try WindowsUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { WindowsUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        var reference_abi = try WindowsUIComposition_CompositionProjectedShadowCasterBinding.toABI(reference)
        defer { WindowsUIComposition_CompositionProjectedShadowCasterBinding.release(&reference_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAbove(this, newCaster_abi, reference_abi))
    }

    public func insertAtBottom(_ newCaster: WindowsUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try WindowsUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { WindowsUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtBottom(this, newCaster_abi))
    }

    public func insertAtTop(_ newCaster: WindowsUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try WindowsUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { WindowsUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtTop(this, newCaster_abi))
    }

    public func insertBelow(_ newCaster: WindowsUIComposition_CompositionProjectedShadowCaster?, _ reference: WindowsUIComposition_CompositionProjectedShadowCaster?) throws {
        var newCaster_abi = try WindowsUIComposition_CompositionProjectedShadowCasterBinding.toABI(newCaster)
        defer { WindowsUIComposition_CompositionProjectedShadowCasterBinding.release(&newCaster_abi) }
        var reference_abi = try WindowsUIComposition_CompositionProjectedShadowCasterBinding.toABI(reference)
        defer { WindowsUIComposition_CompositionProjectedShadowCasterBinding.release(&reference_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertBelow(this, newCaster_abi, reference_abi))
    }

    public func remove(_ caster: WindowsUIComposition_CompositionProjectedShadowCaster?) throws {
        var caster_abi = try WindowsUIComposition_CompositionProjectedShadowCasterBinding.toABI(caster)
        defer { WindowsUIComposition_CompositionProjectedShadowCasterBinding.release(&caster_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, caster_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Windows.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionProjectedShadowCasterCollectionStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x56FBB136, 0xE94F, 0x5299, 0xAB5B, 0x6E15E38BD899)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionProjectedShadowCasterCollectionStatics {
    public func get_MaxRespectedCasters() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxRespectedCasters(this, &_result))
        return _result
    }
}

// MARK: Windows.UI.Composition.ICompositionProjectedShadowReceiver

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1377985A, 0x6A49, 0x536A, 0x9BE4, 0xA96A8E5298A9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver {
    public func get_ReceivingVisual() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ReceivingVisual(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_ReceivingVisual(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ReceivingVisual(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiverUnorderedCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x02B3E3B7, 0x27D2, 0x599F, 0xAC4B, 0xAB787CDDE6FD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiverUnorderedCollection {
    public func add(_ value: WindowsUIComposition_CompositionProjectedShadowReceiver?) throws {
        var value_abi = try WindowsUIComposition_CompositionProjectedShadowReceiverBinding.toABI(value)
        defer { WindowsUIComposition_CompositionProjectedShadowReceiverBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Add(this, value_abi))
    }

    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func remove(_ value: WindowsUIComposition_CompositionProjectedShadowReceiver?) throws {
        var value_abi = try WindowsUIComposition_CompositionProjectedShadowReceiverBinding.toABI(value)
        defer { WindowsUIComposition_CompositionProjectedShadowReceiverBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, value_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Windows.UI.Composition.ICompositionPropertySet

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionPropertySet.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC9D6D202, 0x5F67, 0x4453, 0x9117, 0x9EADD430D3C2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionPropertySet {
    public func insertColor(_ propertyName: Swift.String, _ value: WindowsUI_Color) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertColor(this, propertyName_abi, value_abi))
    }

    public func insertMatrix3x2(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Matrix3x2) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertMatrix3x2(this, propertyName_abi, value_abi))
    }

    public func insertMatrix4x4(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Matrix4x4) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Matrix4x4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertMatrix4x4(this, propertyName_abi, value_abi))
    }

    public func insertQuaternion(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Quaternion) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertQuaternion(this, propertyName_abi, value_abi))
    }

    public func insertScalar(_ propertyName: Swift.String, _ value: Swift.Float) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertScalar(this, propertyName_abi, value))
    }

    public func insertVector2(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Vector2) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertVector2(this, propertyName_abi, value_abi))
    }

    public func insertVector3(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Vector3) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertVector3(this, propertyName_abi, value_abi))
    }

    public func insertVector4(_ propertyName: Swift.String, _ value: WindowsFoundationNumerics_Vector4) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertVector4(this, propertyName_abi, value_abi))
    }

    public func tryGetColor(_ propertyName: Swift.String, _ value: inout WindowsUI_Color) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsUI_Color = .init()
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetColor(this, propertyName_abi, &value_abi, &_result))
        value = WindowsUI_Color.fromABI(value_abi)
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetMatrix3x2(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Matrix3x2) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetMatrix3x2(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Matrix3x2.fromABI(value_abi)
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetMatrix4x4(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Matrix4x4) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Matrix4x4 = .init()
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetMatrix4x4(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Matrix4x4.fromABI(value_abi)
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetQuaternion(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Quaternion) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Quaternion = .init()
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetQuaternion(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Quaternion.fromABI(value_abi)
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetScalar(_ propertyName: Swift.String, _ value: inout Swift.Float) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetScalar(this, propertyName_abi, &value, &_result))
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetVector2(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Vector2) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetVector2(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Vector2.fromABI(value_abi)
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetVector3(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Vector3) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetVector3(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Vector3.fromABI(value_abi)
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }

    public func tryGetVector4(_ propertyName: Swift.String, _ value: inout WindowsFoundationNumerics_Vector4) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var value_abi: SWRT_WindowsFoundationNumerics_Vector4 = .init()
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetVector4(this, propertyName_abi, &value_abi, &_result))
        value = WindowsFoundationNumerics_Vector4.fromABI(value_abi)
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionPropertySet2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionPropertySet2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDE80731E, 0xA211, 0x4455, 0x8880, 0x7D0F3F6A44FD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionPropertySet2 {
    public func insertBoolean(_ propertyName: Swift.String, _ value: Swift.Bool) throws {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertBoolean(this, propertyName_abi, value))
    }

    public func tryGetBoolean(_ propertyName: Swift.String, _ value: inout Swift.Bool) throws -> WindowsUIComposition_CompositionGetValueStatus {
        var propertyName_abi = try WindowsRuntime.StringBinding.toABI(propertyName)
        defer { WindowsRuntime.StringBinding.release(&propertyName_abi) }
        var _result: SWRT_WindowsUIComposition_CompositionGetValueStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryGetBoolean(this, propertyName_abi, &value, &_result))
        return WindowsUIComposition_CompositionGetValueStatus.fromABI(_result)
    }
}

// MARK: Windows.UI.Composition.ICompositionRadialGradientBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionRadialGradientBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3D3B50C5, 0xE3FA, 0x4CE2, 0xB9FC, 0x3EE12561788F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionRadialGradientBrush {
    public func get_EllipseCenter() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EllipseCenter(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_EllipseCenter(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_EllipseCenter(this, value_abi))
    }

    public func get_EllipseRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EllipseRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_EllipseRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_EllipseRadius(this, value_abi))
    }

    public func get_GradientOriginOffset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_GradientOriginOffset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_GradientOriginOffset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_GradientOriginOffset(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionRectangleGeometry

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionRectangleGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0CD51428, 0x5356, 0x4246, 0xAECF, 0x7A0B76975400)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionRectangleGeometry {
    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionRoundedRectangleGeometry

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionRoundedRectangleGeometry.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8770C822, 0x1D50, 0x4B8B, 0xB013, 0x7C9A0E46935F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionRoundedRectangleGeometry {
    public func get_CornerRadius() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CornerRadius(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CornerRadius(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CornerRadius(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionScopedBatch

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionScopedBatch.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0D00DAD0, 0xFB07, 0x46FD, 0x8C72, 0x6280D1A3D1DD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionScopedBatch {
    public func get_IsActive() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsActive(this, &_result))
        return _result
    }

    public func get_IsEnded() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEnded(this, &_result))
        return _result
    }

    public func end() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.End(this))
    }

    public func resume() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Resume(this))
    }

    public func suspend() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Suspend(this))
    }

    public func add_Completed(_ handler: WindowsFoundation_TypedEventHandler<WindowsRuntime.IInspectable?, WindowsUIComposition_CompositionBatchCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.Object_CompositionBatchCompletedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Completed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Completed(_ token: WindowsRuntime.EventRegistrationToken) throws {
        let token_abi = WindowsRuntime.EventRegistrationToken.toABI(token)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Completed(this, token_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionShadow

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x329E52E2, 0x4335, 0x49CC, 0xB14A, 0x37782D10F0C4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionShadow {
}

// MARK: Windows.UI.Composition.ICompositionShadowFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionShadowFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x221F492F, 0xDCBA, 0x4B91, 0x999E, 0x1DC217A01530)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionShadowFactory {
}

// MARK: Windows.UI.Composition.ICompositionShape

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB47CE2F7, 0x9A88, 0x42C4, 0x9E87, 0x2E500CA8688C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionShape {
    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionShapeFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionShapeFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1DFC36D0, 0xB05A, 0x44EF, 0x82B0, 0x12118BCD4CD0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionShapeFactory {
}

// MARK: Windows.UI.Composition.ICompositionSpriteShape

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionSpriteShape.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x401B61BB, 0x0007, 0x4363, 0xB1F3, 0x6BCC003FB83E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionSpriteShape {
    public func get_FillBrush() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FillBrush(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_FillBrush(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FillBrush(this, value_abi))
    }

    public func get_Geometry() throws -> WindowsUIComposition_CompositionGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Geometry(this, &_result))
        return WindowsUIComposition_CompositionGeometryBinding.fromABI(consuming: &_result)
    }

    public func put_Geometry(_ value: WindowsUIComposition_CompositionGeometry?) throws {
        var value_abi = try WindowsUIComposition_CompositionGeometryBinding.toABI(value)
        defer { WindowsUIComposition_CompositionGeometryBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Geometry(this, value_abi))
    }

    public func get_IsStrokeNonScaling() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsStrokeNonScaling(this, &_result))
        return _result
    }

    public func put_IsStrokeNonScaling(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsStrokeNonScaling(this, value))
    }

    public func get_StrokeBrush() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeBrush(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_StrokeBrush(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeBrush(this, value_abi))
    }

    public func get_StrokeDashArray() throws -> WindowsUIComposition_CompositionStrokeDashArray? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_Float>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeDashArray(this, &_result))
        return WindowsUIComposition_CompositionStrokeDashArrayBinding.fromABI(consuming: &_result)
    }

    public func get_StrokeDashCap() throws -> WindowsUIComposition_CompositionStrokeCap {
        var _result: SWRT_WindowsUIComposition_CompositionStrokeCap = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeDashCap(this, &_result))
        return WindowsUIComposition_CompositionStrokeCap.fromABI(_result)
    }

    public func put_StrokeDashCap(_ value: WindowsUIComposition_CompositionStrokeCap) throws {
        let value_abi = WindowsUIComposition_CompositionStrokeCap.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeDashCap(this, value_abi))
    }

    public func get_StrokeDashOffset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeDashOffset(this, &_result))
        return _result
    }

    public func put_StrokeDashOffset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeDashOffset(this, value))
    }

    public func get_StrokeEndCap() throws -> WindowsUIComposition_CompositionStrokeCap {
        var _result: SWRT_WindowsUIComposition_CompositionStrokeCap = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeEndCap(this, &_result))
        return WindowsUIComposition_CompositionStrokeCap.fromABI(_result)
    }

    public func put_StrokeEndCap(_ value: WindowsUIComposition_CompositionStrokeCap) throws {
        let value_abi = WindowsUIComposition_CompositionStrokeCap.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeEndCap(this, value_abi))
    }

    public func get_StrokeLineJoin() throws -> WindowsUIComposition_CompositionStrokeLineJoin {
        var _result: SWRT_WindowsUIComposition_CompositionStrokeLineJoin = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeLineJoin(this, &_result))
        return WindowsUIComposition_CompositionStrokeLineJoin.fromABI(_result)
    }

    public func put_StrokeLineJoin(_ value: WindowsUIComposition_CompositionStrokeLineJoin) throws {
        let value_abi = WindowsUIComposition_CompositionStrokeLineJoin.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeLineJoin(this, value_abi))
    }

    public func get_StrokeMiterLimit() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeMiterLimit(this, &_result))
        return _result
    }

    public func put_StrokeMiterLimit(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeMiterLimit(this, value))
    }

    public func get_StrokeStartCap() throws -> WindowsUIComposition_CompositionStrokeCap {
        var _result: SWRT_WindowsUIComposition_CompositionStrokeCap = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeStartCap(this, &_result))
        return WindowsUIComposition_CompositionStrokeCap.fromABI(_result)
    }

    public func put_StrokeStartCap(_ value: WindowsUIComposition_CompositionStrokeCap) throws {
        let value_abi = WindowsUIComposition_CompositionStrokeCap.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeStartCap(this, value_abi))
    }

    public func get_StrokeThickness() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StrokeThickness(this, &_result))
        return _result
    }

    public func put_StrokeThickness(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StrokeThickness(this, value))
    }
}

// MARK: Windows.UI.Composition.ICompositionSurface

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionSurface.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1527540D, 0x42C7, 0x47A6, 0xA408, 0x668F79A90DFB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionSurface {
}

// MARK: Windows.UI.Composition.ICompositionSurfaceBrush

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionSurfaceBrush.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAD016D79, 0x1E4C, 0x4C0D, 0x9C29, 0x83338C87C162)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionSurfaceBrush {
    public func get_BitmapInterpolationMode() throws -> WindowsUIComposition_CompositionBitmapInterpolationMode {
        var _result: SWRT_WindowsUIComposition_CompositionBitmapInterpolationMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BitmapInterpolationMode(this, &_result))
        return WindowsUIComposition_CompositionBitmapInterpolationMode.fromABI(_result)
    }

    public func put_BitmapInterpolationMode(_ value: WindowsUIComposition_CompositionBitmapInterpolationMode) throws {
        let value_abi = WindowsUIComposition_CompositionBitmapInterpolationMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BitmapInterpolationMode(this, value_abi))
    }

    public func get_HorizontalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HorizontalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_HorizontalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_HorizontalAlignmentRatio(this, value))
    }

    public func get_Stretch() throws -> WindowsUIComposition_CompositionStretch {
        var _result: SWRT_WindowsUIComposition_CompositionStretch = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Stretch(this, &_result))
        return WindowsUIComposition_CompositionStretch.fromABI(_result)
    }

    public func put_Stretch(_ value: WindowsUIComposition_CompositionStretch) throws {
        let value_abi = WindowsUIComposition_CompositionStretch.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Stretch(this, value_abi))
    }

    public func get_Surface() throws -> WindowsUIComposition_ICompositionSurface? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionSurface>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Surface(this, &_result))
        return WindowsUIComposition_ICompositionSurfaceBinding.fromABI(consuming: &_result)
    }

    public func put_Surface(_ value: WindowsUIComposition_ICompositionSurface?) throws {
        var value_abi = try WindowsUIComposition_ICompositionSurfaceBinding.toABI(value)
        defer { WindowsUIComposition_ICompositionSurfaceBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Surface(this, value_abi))
    }

    public func get_VerticalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_VerticalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_VerticalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_VerticalAlignmentRatio(this, value))
    }
}

// MARK: Windows.UI.Composition.ICompositionSurfaceBrush2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionSurfaceBrush2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD27174D5, 0x64F5, 0x4692, 0x9DC7, 0x71B61D7E5880)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionSurfaceBrush2 {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix3x2 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix3x2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix3x2.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        let value_abi = WindowsFoundationNumerics_Matrix3x2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionSurfaceBrush3

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionSurfaceBrush3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x550BB289, 0x1FE0, 0x42E5, 0x8195, 0x1EEFA87FF08E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionSurfaceBrush3 {
    public func get_SnapToPixels() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SnapToPixels(this, &_result))
        return _result
    }

    public func put_SnapToPixels(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SnapToPixels(this, value))
    }
}

// MARK: Windows.UI.Composition.ICompositionTarget

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionTarget.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA1BEA8BA, 0xD726, 0x4663, 0x8129, 0x6B5E7927FFA6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionTarget {
    public func get_Root() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Root(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_Root(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Root(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositionTargetFactory

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionTargetFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x93CD9D2B, 0x8516, 0x4B14, 0xA8CE, 0xF49E2119EC42)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionTargetFactory {
}

// MARK: Windows.UI.Composition.ICompositionViewBox

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionViewBox.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB440BF07, 0x068F, 0x4537, 0x84C6, 0x4ECBE019E1F4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionViewBox {
    public func get_HorizontalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HorizontalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_HorizontalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_HorizontalAlignmentRatio(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }

    public func get_Stretch() throws -> WindowsUIComposition_CompositionStretch {
        var _result: SWRT_WindowsUIComposition_CompositionStretch = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Stretch(this, &_result))
        return WindowsUIComposition_CompositionStretch.fromABI(_result)
    }

    public func put_Stretch(_ value: WindowsUIComposition_CompositionStretch) throws {
        let value_abi = WindowsUIComposition_CompositionStretch.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Stretch(this, value_abi))
    }

    public func get_VerticalAlignmentRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_VerticalAlignmentRatio(this, &_result))
        return _result
    }

    public func put_VerticalAlignmentRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_VerticalAlignmentRatio(this, value))
    }
}

// MARK: Windows.UI.Composition.ICompositionVisualSurface

public func uuidof(_: SWRT_WindowsUIComposition_ICompositionVisualSurface.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB224D803, 0x4F6E, 0x4A3F, 0x8CAE, 0x3DC1CDA74FC6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositionVisualSurface {
    public func get_SourceVisual() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourceVisual(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_SourceVisual(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourceVisual(this, value_abi))
    }

    public func get_SourceOffset() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourceOffset(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_SourceOffset(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourceOffset(this, value_abi))
    }

    public func get_SourceSize() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourceSize(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_SourceSize(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourceSize(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ICompositor

public func uuidof(_: SWRT_WindowsUIComposition_ICompositor.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB403CA50, 0x7F8C, 0x4E83, 0x985F, 0xCC45060036D8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositor {
    public func createColorKeyFrameAnimation() throws -> WindowsUIComposition_ColorKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IColorKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorKeyFrameAnimation(this, &_result))
        return WindowsUIComposition_ColorKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createColorBrush() throws -> WindowsUIComposition_CompositionColorBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorBrush(this, &_result))
        return WindowsUIComposition_CompositionColorBrushBinding.fromABI(consuming: &_result)
    }

    public func createColorBrushWithColor(_ color: WindowsUI_Color) throws -> WindowsUIComposition_CompositionColorBrush? {
        let color_abi = WindowsUI_Color.toABI(color)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorBrushWithColor(this, color_abi, &_result))
        return WindowsUIComposition_CompositionColorBrushBinding.fromABI(consuming: &_result)
    }

    public func createContainerVisual() throws -> WindowsUIComposition_ContainerVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IContainerVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateContainerVisual(this, &_result))
        return WindowsUIComposition_ContainerVisualBinding.fromABI(consuming: &_result)
    }

    public func createCubicBezierEasingFunction(_ controlPoint1: WindowsFoundationNumerics_Vector2, _ controlPoint2: WindowsFoundationNumerics_Vector2) throws -> WindowsUIComposition_CubicBezierEasingFunction? {
        let controlPoint1_abi = WindowsFoundationNumerics_Vector2.toABI(controlPoint1)
        let controlPoint2_abi = WindowsFoundationNumerics_Vector2.toABI(controlPoint2)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICubicBezierEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCubicBezierEasingFunction(this, controlPoint1_abi, controlPoint2_abi, &_result))
        return WindowsUIComposition_CubicBezierEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createEffectFactory(_ graphicsEffect: WindowsGraphicsEffects_IGraphicsEffect?) throws -> WindowsUIComposition_CompositionEffectFactory? {
        var graphicsEffect_abi = try WindowsGraphicsEffects_IGraphicsEffectBinding.toABI(graphicsEffect)
        defer { WindowsGraphicsEffects_IGraphicsEffectBinding.release(&graphicsEffect_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionEffectFactory>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateEffectFactory(this, graphicsEffect_abi, &_result))
        return WindowsUIComposition_CompositionEffectFactoryBinding.fromABI(consuming: &_result)
    }

    public func createEffectFactoryWithProperties(_ graphicsEffect: WindowsGraphicsEffects_IGraphicsEffect?, _ animatableProperties: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsUIComposition_CompositionEffectFactory? {
        var graphicsEffect_abi = try WindowsGraphicsEffects_IGraphicsEffectBinding.toABI(graphicsEffect)
        defer { WindowsGraphicsEffects_IGraphicsEffectBinding.release(&graphicsEffect_abi) }
        var animatableProperties_abi = try WindowsFoundationCollections_IIterableBinding.String.toABI(animatableProperties)
        defer { WindowsFoundationCollections_IIterableBinding.String.release(&animatableProperties_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionEffectFactory>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateEffectFactoryWithProperties(this, graphicsEffect_abi, animatableProperties_abi, &_result))
        return WindowsUIComposition_CompositionEffectFactoryBinding.fromABI(consuming: &_result)
    }

    public func createExpressionAnimation() throws -> WindowsUIComposition_ExpressionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IExpressionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateExpressionAnimation(this, &_result))
        return WindowsUIComposition_ExpressionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createExpressionAnimationWithExpression(_ expression: Swift.String) throws -> WindowsUIComposition_ExpressionAnimation? {
        var expression_abi = try WindowsRuntime.StringBinding.toABI(expression)
        defer { WindowsRuntime.StringBinding.release(&expression_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IExpressionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateExpressionAnimationWithExpression(this, expression_abi, &_result))
        return WindowsUIComposition_ExpressionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createInsetClip() throws -> WindowsUIComposition_InsetClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IInsetClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateInsetClip(this, &_result))
        return WindowsUIComposition_InsetClipBinding.fromABI(consuming: &_result)
    }

    public func createInsetClipWithInsets(_ leftInset: Swift.Float, _ topInset: Swift.Float, _ rightInset: Swift.Float, _ bottomInset: Swift.Float) throws -> WindowsUIComposition_InsetClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IInsetClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateInsetClipWithInsets(this, leftInset, topInset, rightInset, bottomInset, &_result))
        return WindowsUIComposition_InsetClipBinding.fromABI(consuming: &_result)
    }

    public func createLinearEasingFunction() throws -> WindowsUIComposition_LinearEasingFunction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ILinearEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLinearEasingFunction(this, &_result))
        return WindowsUIComposition_LinearEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createPropertySet() throws -> WindowsUIComposition_CompositionPropertySet? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePropertySet(this, &_result))
        return WindowsUIComposition_CompositionPropertySetBinding.fromABI(consuming: &_result)
    }

    public func createQuaternionKeyFrameAnimation() throws -> WindowsUIComposition_QuaternionKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IQuaternionKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateQuaternionKeyFrameAnimation(this, &_result))
        return WindowsUIComposition_QuaternionKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createScalarKeyFrameAnimation() throws -> WindowsUIComposition_ScalarKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IScalarKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateScalarKeyFrameAnimation(this, &_result))
        return WindowsUIComposition_ScalarKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createScopedBatch(_ batchType: WindowsUIComposition_CompositionBatchTypes) throws -> WindowsUIComposition_CompositionScopedBatch? {
        let batchType_abi = WindowsUIComposition_CompositionBatchTypes.toABI(batchType)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionScopedBatch>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateScopedBatch(this, batchType_abi, &_result))
        return WindowsUIComposition_CompositionScopedBatchBinding.fromABI(consuming: &_result)
    }

    public func createSpriteVisual() throws -> WindowsUIComposition_SpriteVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ISpriteVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpriteVisual(this, &_result))
        return WindowsUIComposition_SpriteVisualBinding.fromABI(consuming: &_result)
    }

    public func createSurfaceBrush() throws -> WindowsUIComposition_CompositionSurfaceBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionSurfaceBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSurfaceBrush(this, &_result))
        return WindowsUIComposition_CompositionSurfaceBrushBinding.fromABI(consuming: &_result)
    }

    public func createSurfaceBrushWithSurface(_ surface: WindowsUIComposition_ICompositionSurface?) throws -> WindowsUIComposition_CompositionSurfaceBrush? {
        var surface_abi = try WindowsUIComposition_ICompositionSurfaceBinding.toABI(surface)
        defer { WindowsUIComposition_ICompositionSurfaceBinding.release(&surface_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionSurfaceBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSurfaceBrushWithSurface(this, surface_abi, &_result))
        return WindowsUIComposition_CompositionSurfaceBrushBinding.fromABI(consuming: &_result)
    }

    public func createTargetForCurrentView() throws -> WindowsUIComposition_CompositionTarget? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionTarget>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateTargetForCurrentView(this, &_result))
        return WindowsUIComposition_CompositionTargetBinding.fromABI(consuming: &_result)
    }

    public func createVector2KeyFrameAnimation() throws -> WindowsUIComposition_Vector2KeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVector2KeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVector2KeyFrameAnimation(this, &_result))
        return WindowsUIComposition_Vector2KeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createVector3KeyFrameAnimation() throws -> WindowsUIComposition_Vector3KeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVector3KeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVector3KeyFrameAnimation(this, &_result))
        return WindowsUIComposition_Vector3KeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createVector4KeyFrameAnimation() throws -> WindowsUIComposition_Vector4KeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVector4KeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVector4KeyFrameAnimation(this, &_result))
        return WindowsUIComposition_Vector4KeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func getCommitBatch(_ batchType: WindowsUIComposition_CompositionBatchTypes) throws -> WindowsUIComposition_CompositionCommitBatch? {
        let batchType_abi = WindowsUIComposition_CompositionBatchTypes.toABI(batchType)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionCommitBatch>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetCommitBatch(this, batchType_abi, &_result))
        return WindowsUIComposition_CompositionCommitBatchBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositor2

public func uuidof(_: SWRT_WindowsUIComposition_ICompositor2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x735081DC, 0x5E24, 0x45DA, 0xA38F, 0xE32CC349A9A0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositor2 {
    public func createAmbientLight() throws -> WindowsUIComposition_AmbientLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IAmbientLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateAmbientLight(this, &_result))
        return WindowsUIComposition_AmbientLightBinding.fromABI(consuming: &_result)
    }

    public func createAnimationGroup() throws -> WindowsUIComposition_CompositionAnimationGroup? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionAnimationGroup>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateAnimationGroup(this, &_result))
        return WindowsUIComposition_CompositionAnimationGroupBinding.fromABI(consuming: &_result)
    }

    public func createBackdropBrush() throws -> WindowsUIComposition_CompositionBackdropBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBackdropBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBackdropBrush(this, &_result))
        return WindowsUIComposition_CompositionBackdropBrushBinding.fromABI(consuming: &_result)
    }

    public func createDistantLight() throws -> WindowsUIComposition_DistantLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IDistantLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateDistantLight(this, &_result))
        return WindowsUIComposition_DistantLightBinding.fromABI(consuming: &_result)
    }

    public func createDropShadow() throws -> WindowsUIComposition_DropShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IDropShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateDropShadow(this, &_result))
        return WindowsUIComposition_DropShadowBinding.fromABI(consuming: &_result)
    }

    public func createImplicitAnimationCollection() throws -> WindowsUIComposition_ImplicitAnimationCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IImplicitAnimationCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateImplicitAnimationCollection(this, &_result))
        return WindowsUIComposition_ImplicitAnimationCollectionBinding.fromABI(consuming: &_result)
    }

    public func createLayerVisual() throws -> WindowsUIComposition_LayerVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ILayerVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLayerVisual(this, &_result))
        return WindowsUIComposition_LayerVisualBinding.fromABI(consuming: &_result)
    }

    public func createMaskBrush() throws -> WindowsUIComposition_CompositionMaskBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionMaskBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateMaskBrush(this, &_result))
        return WindowsUIComposition_CompositionMaskBrushBinding.fromABI(consuming: &_result)
    }

    public func createNineGridBrush() throws -> WindowsUIComposition_CompositionNineGridBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionNineGridBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateNineGridBrush(this, &_result))
        return WindowsUIComposition_CompositionNineGridBrushBinding.fromABI(consuming: &_result)
    }

    public func createPointLight() throws -> WindowsUIComposition_PointLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IPointLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePointLight(this, &_result))
        return WindowsUIComposition_PointLightBinding.fromABI(consuming: &_result)
    }

    public func createSpotLight() throws -> WindowsUIComposition_SpotLight? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ISpotLight>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpotLight(this, &_result))
        return WindowsUIComposition_SpotLightBinding.fromABI(consuming: &_result)
    }

    public func createStepEasingFunction() throws -> WindowsUIComposition_StepEasingFunction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IStepEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStepEasingFunction(this, &_result))
        return WindowsUIComposition_StepEasingFunctionBinding.fromABI(consuming: &_result)
    }

    public func createStepEasingFunctionWithStepCount(_ stepCount: Swift.Int32) throws -> WindowsUIComposition_StepEasingFunction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IStepEasingFunction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateStepEasingFunctionWithStepCount(this, stepCount, &_result))
        return WindowsUIComposition_StepEasingFunctionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositor3

public func uuidof(_: SWRT_WindowsUIComposition_ICompositor3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC9DD8EF0, 0x6EB1, 0x4E3C, 0xA658, 0x675D9C64D4AB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositor3 {
    public func createHostBackdropBrush() throws -> WindowsUIComposition_CompositionBackdropBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBackdropBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateHostBackdropBrush(this, &_result))
        return WindowsUIComposition_CompositionBackdropBrushBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositor4

public func uuidof(_: SWRT_WindowsUIComposition_ICompositor4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAE47E78A, 0x7910, 0x4425, 0xA482, 0xA05B758ADCE9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositor4 {
    public func createColorGradientStop() throws -> WindowsUIComposition_CompositionColorGradientStop? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorGradientStop(this, &_result))
        return WindowsUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    public func createColorGradientStopWithOffsetAndColor(_ offset: Swift.Float, _ color: WindowsUI_Color) throws -> WindowsUIComposition_CompositionColorGradientStop? {
        let color_abi = WindowsUI_Color.toABI(color)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionColorGradientStop>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateColorGradientStopWithOffsetAndColor(this, offset, color_abi, &_result))
        return WindowsUIComposition_CompositionColorGradientStopBinding.fromABI(consuming: &_result)
    }

    public func createLinearGradientBrush() throws -> WindowsUIComposition_CompositionLinearGradientBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionLinearGradientBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLinearGradientBrush(this, &_result))
        return WindowsUIComposition_CompositionLinearGradientBrushBinding.fromABI(consuming: &_result)
    }

    public func createSpringScalarAnimation() throws -> WindowsUIComposition_SpringScalarNaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ISpringScalarNaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpringScalarAnimation(this, &_result))
        return WindowsUIComposition_SpringScalarNaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createSpringVector2Animation() throws -> WindowsUIComposition_SpringVector2NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ISpringVector2NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpringVector2Animation(this, &_result))
        return WindowsUIComposition_SpringVector2NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createSpringVector3Animation() throws -> WindowsUIComposition_SpringVector3NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ISpringVector3NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpringVector3Animation(this, &_result))
        return WindowsUIComposition_SpringVector3NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositor5

public func uuidof(_: SWRT_WindowsUIComposition_ICompositor5.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x48EA31AD, 0x7FCD, 0x4076, 0xA79C, 0x90CC4B852C9B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositor5 {
    public func get_Comment() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Comment(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Comment(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Comment(this, value_abi))
    }

    public func get_GlobalPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_GlobalPlaybackRate(this, &_result))
        return _result
    }

    public func put_GlobalPlaybackRate(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_GlobalPlaybackRate(this, value))
    }

    public func createBounceScalarAnimation() throws -> WindowsUIComposition_BounceScalarNaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IBounceScalarNaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBounceScalarAnimation(this, &_result))
        return WindowsUIComposition_BounceScalarNaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createBounceVector2Animation() throws -> WindowsUIComposition_BounceVector2NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IBounceVector2NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBounceVector2Animation(this, &_result))
        return WindowsUIComposition_BounceVector2NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createBounceVector3Animation() throws -> WindowsUIComposition_BounceVector3NaturalMotionAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IBounceVector3NaturalMotionAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBounceVector3Animation(this, &_result))
        return WindowsUIComposition_BounceVector3NaturalMotionAnimationBinding.fromABI(consuming: &_result)
    }

    public func createContainerShape() throws -> WindowsUIComposition_CompositionContainerShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionContainerShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateContainerShape(this, &_result))
        return WindowsUIComposition_CompositionContainerShapeBinding.fromABI(consuming: &_result)
    }

    public func createEllipseGeometry() throws -> WindowsUIComposition_CompositionEllipseGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionEllipseGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateEllipseGeometry(this, &_result))
        return WindowsUIComposition_CompositionEllipseGeometryBinding.fromABI(consuming: &_result)
    }

    public func createLineGeometry() throws -> WindowsUIComposition_CompositionLineGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionLineGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateLineGeometry(this, &_result))
        return WindowsUIComposition_CompositionLineGeometryBinding.fromABI(consuming: &_result)
    }

    public func createPathGeometry() throws -> WindowsUIComposition_CompositionPathGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionPathGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePathGeometry(this, &_result))
        return WindowsUIComposition_CompositionPathGeometryBinding.fromABI(consuming: &_result)
    }

    public func createPathGeometryWithPath(_ path: WindowsUIComposition_CompositionPath?) throws -> WindowsUIComposition_CompositionPathGeometry? {
        var path_abi = try WindowsUIComposition_CompositionPathBinding.toABI(path)
        defer { WindowsUIComposition_CompositionPathBinding.release(&path_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionPathGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePathGeometryWithPath(this, path_abi, &_result))
        return WindowsUIComposition_CompositionPathGeometryBinding.fromABI(consuming: &_result)
    }

    public func createPathKeyFrameAnimation() throws -> WindowsUIComposition_PathKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IPathKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePathKeyFrameAnimation(this, &_result))
        return WindowsUIComposition_PathKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }

    public func createRectangleGeometry() throws -> WindowsUIComposition_CompositionRectangleGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionRectangleGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRectangleGeometry(this, &_result))
        return WindowsUIComposition_CompositionRectangleGeometryBinding.fromABI(consuming: &_result)
    }

    public func createRoundedRectangleGeometry() throws -> WindowsUIComposition_CompositionRoundedRectangleGeometry? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionRoundedRectangleGeometry>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRoundedRectangleGeometry(this, &_result))
        return WindowsUIComposition_CompositionRoundedRectangleGeometryBinding.fromABI(consuming: &_result)
    }

    public func createShapeVisual() throws -> WindowsUIComposition_ShapeVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IShapeVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateShapeVisual(this, &_result))
        return WindowsUIComposition_ShapeVisualBinding.fromABI(consuming: &_result)
    }

    public func createSpriteShape() throws -> WindowsUIComposition_CompositionSpriteShape? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionSpriteShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpriteShape(this, &_result))
        return WindowsUIComposition_CompositionSpriteShapeBinding.fromABI(consuming: &_result)
    }

    public func createSpriteShapeWithGeometry(_ geometry: WindowsUIComposition_CompositionGeometry?) throws -> WindowsUIComposition_CompositionSpriteShape? {
        var geometry_abi = try WindowsUIComposition_CompositionGeometryBinding.toABI(geometry)
        defer { WindowsUIComposition_CompositionGeometryBinding.release(&geometry_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionSpriteShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateSpriteShapeWithGeometry(this, geometry_abi, &_result))
        return WindowsUIComposition_CompositionSpriteShapeBinding.fromABI(consuming: &_result)
    }

    public func createViewBox() throws -> WindowsUIComposition_CompositionViewBox? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionViewBox>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateViewBox(this, &_result))
        return WindowsUIComposition_CompositionViewBoxBinding.fromABI(consuming: &_result)
    }

    public func requestCommitAsync() throws -> WindowsFoundation_IAsyncAction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RequestCommitAsync(this, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositor6

public func uuidof(_: SWRT_WindowsUIComposition_ICompositor6.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7A38B2BD, 0xCEC8, 0x4EEB, 0x830F, 0xD8D07AEDEBC3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositor6 {
    public func createGeometricClip() throws -> WindowsUIComposition_CompositionGeometricClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionGeometricClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateGeometricClip(this, &_result))
        return WindowsUIComposition_CompositionGeometricClipBinding.fromABI(consuming: &_result)
    }

    public func createGeometricClipWithGeometry(_ geometry: WindowsUIComposition_CompositionGeometry?) throws -> WindowsUIComposition_CompositionGeometricClip? {
        var geometry_abi = try WindowsUIComposition_CompositionGeometryBinding.toABI(geometry)
        defer { WindowsUIComposition_CompositionGeometryBinding.release(&geometry_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionGeometricClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateGeometricClipWithGeometry(this, geometry_abi, &_result))
        return WindowsUIComposition_CompositionGeometricClipBinding.fromABI(consuming: &_result)
    }

    public func createRedirectVisual() throws -> WindowsUIComposition_RedirectVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IRedirectVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRedirectVisual(this, &_result))
        return WindowsUIComposition_RedirectVisualBinding.fromABI(consuming: &_result)
    }

    public func createRedirectVisualWithSourceVisual(_ source: WindowsUIComposition_Visual?) throws -> WindowsUIComposition_RedirectVisual? {
        var source_abi = try WindowsUIComposition_VisualBinding.toABI(source)
        defer { WindowsUIComposition_VisualBinding.release(&source_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IRedirectVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRedirectVisualWithSourceVisual(this, source_abi, &_result))
        return WindowsUIComposition_RedirectVisualBinding.fromABI(consuming: &_result)
    }

    public func createBooleanKeyFrameAnimation() throws -> WindowsUIComposition_BooleanKeyFrameAnimation? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IBooleanKeyFrameAnimation>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBooleanKeyFrameAnimation(this, &_result))
        return WindowsUIComposition_BooleanKeyFrameAnimationBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositorStatics

public func uuidof(_: SWRT_WindowsUIComposition_ICompositorStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x080DB93E, 0x121E, 0x4D97, 0x8B74, 0x1DFCF91987EA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositorStatics {
    public func get_MaxGlobalPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxGlobalPlaybackRate(this, &_result))
        return _result
    }

    public func get_MinGlobalPlaybackRate() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinGlobalPlaybackRate(this, &_result))
        return _result
    }
}

// MARK: Windows.UI.Composition.ICompositorWithProjectedShadow

public func uuidof(_: SWRT_WindowsUIComposition_ICompositorWithProjectedShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA2E6330E, 0x8A60, 0x5A38, 0xBB85, 0xB44EA901677C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositorWithProjectedShadow {
    public func createProjectedShadowCaster() throws -> WindowsUIComposition_CompositionProjectedShadowCaster? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionProjectedShadowCaster>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateProjectedShadowCaster(this, &_result))
        return WindowsUIComposition_CompositionProjectedShadowCasterBinding.fromABI(consuming: &_result)
    }

    public func createProjectedShadow() throws -> WindowsUIComposition_CompositionProjectedShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionProjectedShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateProjectedShadow(this, &_result))
        return WindowsUIComposition_CompositionProjectedShadowBinding.fromABI(consuming: &_result)
    }

    public func createProjectedShadowReceiver() throws -> WindowsUIComposition_CompositionProjectedShadowReceiver? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionProjectedShadowReceiver>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateProjectedShadowReceiver(this, &_result))
        return WindowsUIComposition_CompositionProjectedShadowReceiverBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositorWithRadialGradient

public func uuidof(_: SWRT_WindowsUIComposition_ICompositorWithRadialGradient.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x98B9C1A7, 0x8E71, 0x4B53, 0xB4A8, 0x69BA5D19DC5B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositorWithRadialGradient {
    public func createRadialGradientBrush() throws -> WindowsUIComposition_CompositionRadialGradientBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionRadialGradientBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateRadialGradientBrush(this, &_result))
        return WindowsUIComposition_CompositionRadialGradientBrushBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.ICompositorWithVisualSurface

public func uuidof(_: SWRT_WindowsUIComposition_ICompositorWithVisualSurface.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCFA1658B, 0x0123, 0x4551, 0x8891, 0x89BDCC40322B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICompositorWithVisualSurface {
    public func createVisualSurface() throws -> WindowsUIComposition_CompositionVisualSurface? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionVisualSurface>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateVisualSurface(this, &_result))
        return WindowsUIComposition_CompositionVisualSurfaceBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.IContainerVisual

public func uuidof(_: SWRT_WindowsUIComposition_IContainerVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x02F6BC74, 0xED20, 0x4773, 0xAFE6, 0xD49B4A93DB32)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IContainerVisual {
    public func get_Children() throws -> WindowsUIComposition_VisualCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisualCollection>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Children(this, &_result))
        return WindowsUIComposition_VisualCollectionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Composition.IContainerVisualFactory

public func uuidof(_: SWRT_WindowsUIComposition_IContainerVisualFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0363A65B, 0xC7DA, 0x4D9A, 0x95F4, 0x69B5C8DF670B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IContainerVisualFactory {
}

// MARK: Windows.UI.Composition.ICubicBezierEasingFunction

public func uuidof(_: SWRT_WindowsUIComposition_ICubicBezierEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x32350666, 0xC1E8, 0x44F9, 0x96B8, 0xC98ACF0AE698)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ICubicBezierEasingFunction {
    public func get_ControlPoint1() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ControlPoint1(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func get_ControlPoint2() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ControlPoint2(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }
}

// MARK: Windows.UI.Composition.IDistantLight

public func uuidof(_: SWRT_WindowsUIComposition_IDistantLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x318CFAFC, 0x5CE3, 0x4B55, 0xAB5D, 0x07A00353AC99)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IDistantLight {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_CoordinateSpace() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CoordinateSpace(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CoordinateSpace(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CoordinateSpace(this, value_abi))
    }

    public func get_Direction() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Direction(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Direction(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Direction(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IDistantLight2

public func uuidof(_: SWRT_WindowsUIComposition_IDistantLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDBCDAA1C, 0x294B, 0x48D7, 0xB60E, 0x76DF64AA392B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IDistantLight2 {
    public func get_Intensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Intensity(this, &_result))
        return _result
    }

    public func put_Intensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Intensity(this, value))
    }
}

// MARK: Windows.UI.Composition.IDropShadow

public func uuidof(_: SWRT_WindowsUIComposition_IDropShadow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xCB977C07, 0xA154, 0x4851, 0x85E7, 0xA8924C84FAD8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IDropShadow {
    public func get_BlurRadius() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BlurRadius(this, &_result))
        return _result
    }

    public func put_BlurRadius(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BlurRadius(this, value))
    }

    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_Mask() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Mask(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Mask(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Mask(this, value_abi))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Opacity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Opacity(this, &_result))
        return _result
    }

    public func put_Opacity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Opacity(this, value))
    }
}

// MARK: Windows.UI.Composition.IDropShadow2

public func uuidof(_: SWRT_WindowsUIComposition_IDropShadow2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6C4218BC, 0x15B9, 0x4C2D, 0x8D4A, 0x0767DF11977A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IDropShadow2 {
    public func get_SourcePolicy() throws -> WindowsUIComposition_CompositionDropShadowSourcePolicy {
        var _result: SWRT_WindowsUIComposition_CompositionDropShadowSourcePolicy = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SourcePolicy(this, &_result))
        return WindowsUIComposition_CompositionDropShadowSourcePolicy.fromABI(_result)
    }

    public func put_SourcePolicy(_ value: WindowsUIComposition_CompositionDropShadowSourcePolicy) throws {
        let value_abi = WindowsUIComposition_CompositionDropShadowSourcePolicy.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_SourcePolicy(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IExpressionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IExpressionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6ACC5431, 0x7D3D, 0x4BF3, 0xABB6, 0xF44BDC4888C1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IExpressionAnimation {
    public func get_Expression() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Expression(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func put_Expression(_ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Expression(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IImplicitAnimationCollection

public func uuidof(_: SWRT_WindowsUIComposition_IImplicitAnimationCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0598A3FF, 0x0A92, 0x4C9D, 0xA427, 0xB25519250DBF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IImplicitAnimationCollection {
}

// MARK: Windows.UI.Composition.IInsetClip

public func uuidof(_: SWRT_WindowsUIComposition_IInsetClip.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x1E73E647, 0x84C7, 0x477A, 0xB474, 0x5880E0442E15)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IInsetClip {
    public func get_BottomInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BottomInset(this, &_result))
        return _result
    }

    public func put_BottomInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BottomInset(this, value))
    }

    public func get_LeftInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LeftInset(this, &_result))
        return _result
    }

    public func put_LeftInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LeftInset(this, value))
    }

    public func get_RightInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RightInset(this, &_result))
        return _result
    }

    public func put_RightInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RightInset(this, value))
    }

    public func get_TopInset() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TopInset(this, &_result))
        return _result
    }

    public func put_TopInset(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TopInset(this, value))
    }
}

// MARK: Windows.UI.Composition.IKeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x126E7F22, 0x3AE9, 0x4540, 0x9A8A, 0xDEAE8A4A4A84)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IKeyFrameAnimation {
    public func get_DelayTime() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayTime(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_DelayTime(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayTime(this, value_abi))
    }

    public func get_Duration() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Duration(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Duration(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Duration(this, value_abi))
    }

    public func get_IterationBehavior() throws -> WindowsUIComposition_AnimationIterationBehavior {
        var _result: SWRT_WindowsUIComposition_AnimationIterationBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IterationBehavior(this, &_result))
        return WindowsUIComposition_AnimationIterationBehavior.fromABI(_result)
    }

    public func put_IterationBehavior(_ value: WindowsUIComposition_AnimationIterationBehavior) throws {
        let value_abi = WindowsUIComposition_AnimationIterationBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IterationBehavior(this, value_abi))
    }

    public func get_IterationCount() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IterationCount(this, &_result))
        return _result
    }

    public func put_IterationCount(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IterationCount(this, value))
    }

    public func get_KeyFrameCount() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_KeyFrameCount(this, &_result))
        return _result
    }

    public func get_StopBehavior() throws -> WindowsUIComposition_AnimationStopBehavior {
        var _result: SWRT_WindowsUIComposition_AnimationStopBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StopBehavior(this, &_result))
        return WindowsUIComposition_AnimationStopBehavior.fromABI(_result)
    }

    public func put_StopBehavior(_ value: WindowsUIComposition_AnimationStopBehavior) throws {
        let value_abi = WindowsUIComposition_AnimationStopBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StopBehavior(this, value_abi))
    }

    public func insertExpressionKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: Swift.String) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertExpressionKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertExpressionKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: Swift.String, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertExpressionKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.IKeyFrameAnimation2

public func uuidof(_: SWRT_WindowsUIComposition_IKeyFrameAnimation2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF4B488BB, 0x2940, 0x4EC0, 0xA41A, 0xEB6D801A2F18)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IKeyFrameAnimation2 {
    public func get_Direction() throws -> WindowsUIComposition_AnimationDirection {
        var _result: SWRT_WindowsUIComposition_AnimationDirection = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Direction(this, &_result))
        return WindowsUIComposition_AnimationDirection.fromABI(_result)
    }

    public func put_Direction(_ value: WindowsUIComposition_AnimationDirection) throws {
        let value_abi = WindowsUIComposition_AnimationDirection.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Direction(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IKeyFrameAnimation3

public func uuidof(_: SWRT_WindowsUIComposition_IKeyFrameAnimation3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x845BF0B4, 0xD8DE, 0x462F, 0x8753, 0xC80D43C6FF5A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IKeyFrameAnimation3 {
    public func get_DelayBehavior() throws -> WindowsUIComposition_AnimationDelayBehavior {
        var _result: SWRT_WindowsUIComposition_AnimationDelayBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayBehavior(this, &_result))
        return WindowsUIComposition_AnimationDelayBehavior.fromABI(_result)
    }

    public func put_DelayBehavior(_ value: WindowsUIComposition_AnimationDelayBehavior) throws {
        let value_abi = WindowsUIComposition_AnimationDelayBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayBehavior(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IKeyFrameAnimationFactory

public func uuidof(_: SWRT_WindowsUIComposition_IKeyFrameAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBF0803F8, 0x712A, 0x4FC1, 0x8C87, 0x970859ED8D2E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IKeyFrameAnimationFactory {
}

// MARK: Windows.UI.Composition.ILayerVisual

public func uuidof(_: SWRT_WindowsUIComposition_ILayerVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAF843985, 0x0444, 0x4887, 0x8E83, 0xB40B253F822C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ILayerVisual {
    public func get_Effect() throws -> WindowsUIComposition_CompositionEffectBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionEffectBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Effect(this, &_result))
        return WindowsUIComposition_CompositionEffectBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Effect(_ value: WindowsUIComposition_CompositionEffectBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionEffectBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionEffectBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Effect(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ILayerVisual2

public func uuidof(_: SWRT_WindowsUIComposition_ILayerVisual2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x98F9AEEB, 0x6F23, 0x49F1, 0x90B1, 0x1F59A14FBCE3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ILayerVisual2 {
    public func get_Shadow() throws -> WindowsUIComposition_CompositionShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shadow(this, &_result))
        return WindowsUIComposition_CompositionShadowBinding.fromABI(consuming: &_result)
    }

    public func put_Shadow(_ value: WindowsUIComposition_CompositionShadow?) throws {
        var value_abi = try WindowsUIComposition_CompositionShadowBinding.toABI(value)
        defer { WindowsUIComposition_CompositionShadowBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Shadow(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ILinearEasingFunction

public func uuidof(_: SWRT_WindowsUIComposition_ILinearEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9400975A, 0xC7A6, 0x46B3, 0xACF7, 0x1A268A0A117D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ILinearEasingFunction {
}

// MARK: Windows.UI.Composition.INaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_INaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x438DE12D, 0x769B, 0x4821, 0xA949, 0x284A6547E873)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_INaturalMotionAnimation {
    public func get_DelayBehavior() throws -> WindowsUIComposition_AnimationDelayBehavior {
        var _result: SWRT_WindowsUIComposition_AnimationDelayBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayBehavior(this, &_result))
        return WindowsUIComposition_AnimationDelayBehavior.fromABI(_result)
    }

    public func put_DelayBehavior(_ value: WindowsUIComposition_AnimationDelayBehavior) throws {
        let value_abi = WindowsUIComposition_AnimationDelayBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayBehavior(this, value_abi))
    }

    public func get_DelayTime() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DelayTime(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_DelayTime(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DelayTime(this, value_abi))
    }

    public func get_StopBehavior() throws -> WindowsUIComposition_AnimationStopBehavior {
        var _result: SWRT_WindowsUIComposition_AnimationStopBehavior = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StopBehavior(this, &_result))
        return WindowsUIComposition_AnimationStopBehavior.fromABI(_result)
    }

    public func put_StopBehavior(_ value: WindowsUIComposition_AnimationStopBehavior) throws {
        let value_abi = WindowsUIComposition_AnimationStopBehavior.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StopBehavior(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.INaturalMotionAnimationFactory

public func uuidof(_: SWRT_WindowsUIComposition_INaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF53ACB06, 0xCF6A, 0x4387, 0xA3FE, 0x5221F3E7E0E0)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_INaturalMotionAnimationFactory {
}

// MARK: Windows.UI.Composition.IPathKeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IPathKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9D0D18C9, 0x1576, 0x4B3F, 0xBE60, 0x1D5031F5E71B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IPathKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ path: WindowsUIComposition_CompositionPath?) throws {
        var path_abi = try WindowsUIComposition_CompositionPathBinding.toABI(path)
        defer { WindowsUIComposition_CompositionPathBinding.release(&path_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, path_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ path: WindowsUIComposition_CompositionPath?, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        var path_abi = try WindowsUIComposition_CompositionPathBinding.toABI(path)
        defer { WindowsUIComposition_CompositionPathBinding.release(&path_abi) }
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, path_abi, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.IPointLight

public func uuidof(_: SWRT_WindowsUIComposition_IPointLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xB18545B3, 0x0C5A, 0x4AB0, 0xBEDC, 0x4F3546948272)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IPointLight {
    public func get_Color() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Color(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_Color(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Color(this, value_abi))
    }

    public func get_ConstantAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ConstantAttenuation(this, &_result))
        return _result
    }

    public func put_ConstantAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ConstantAttenuation(this, value))
    }

    public func get_CoordinateSpace() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CoordinateSpace(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CoordinateSpace(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CoordinateSpace(this, value_abi))
    }

    public func get_LinearAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LinearAttenuation(this, &_result))
        return _result
    }

    public func put_LinearAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LinearAttenuation(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_QuadraticAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_QuadraticAttenuation(this, &_result))
        return _result
    }

    public func put_QuadraticAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_QuadraticAttenuation(this, value))
    }
}

// MARK: Windows.UI.Composition.IPointLight2

public func uuidof(_: SWRT_WindowsUIComposition_IPointLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xEFE98F2C, 0x0678, 0x4F69, 0xB164, 0xA810D995BCB7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IPointLight2 {
    public func get_Intensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Intensity(this, &_result))
        return _result
    }

    public func put_Intensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Intensity(this, value))
    }
}

// MARK: Windows.UI.Composition.IPointLight3

public func uuidof(_: SWRT_WindowsUIComposition_IPointLight3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4C0A8367, 0xD4E9, 0x468A, 0x87AE, 0x7BA43AB29485)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IPointLight3 {
    public func get_MinAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MinAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MinAttenuationCutoff(this, value))
    }

    public func get_MaxAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MaxAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MaxAttenuationCutoff(this, value))
    }
}

// MARK: Windows.UI.Composition.IQuaternionKeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IQuaternionKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x404E5835, 0xECF6, 0x4240, 0x8520, 0x671279CF36BC)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IQuaternionKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Quaternion) throws {
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Quaternion, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.IRedirectVisual

public func uuidof(_: SWRT_WindowsUIComposition_IRedirectVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8CC6E340, 0x8B75, 0x5422, 0xB06F, 0x09FFE9F8617E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IRedirectVisual {
    public func get_Source() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Source(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_Source(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Source(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IScalarKeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IScalarKeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAE288FA9, 0x252C, 0x4B95, 0xA725, 0xBF85E38000A1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IScalarKeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: Swift.Float, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.IScalarNaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IScalarNaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x94A94581, 0xBF92, 0x495B, 0xB5BD, 0xD2C659430737)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IScalarNaturalMotionAnimation {
    public func get_FinalValue() throws -> Swift.Float? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalValue(this, &_result))
        return WindowsRuntime.SingleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func put_FinalValue(_ value: Swift.Float?) throws {
        var value_abi = try WindowsRuntime.SingleBinding.IReferenceToOptional.toABI(value)
        defer { WindowsRuntime.SingleBinding.IReferenceToOptional.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalValue(this, value_abi))
    }

    public func get_InitialValue() throws -> Swift.Float? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValue(this, &_result))
        return WindowsRuntime.SingleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }

    public func put_InitialValue(_ value: Swift.Float?) throws {
        var value_abi = try WindowsRuntime.SingleBinding.IReferenceToOptional.toABI(value)
        defer { WindowsRuntime.SingleBinding.IReferenceToOptional.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialValue(this, value_abi))
    }

    public func get_InitialVelocity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialVelocity(this, &_result))
        return _result
    }

    public func put_InitialVelocity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialVelocity(this, value))
    }
}

// MARK: Windows.UI.Composition.IScalarNaturalMotionAnimationFactory

public func uuidof(_: SWRT_WindowsUIComposition_IScalarNaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x835AA4FC, 0x671C, 0x41DD, 0xAF48, 0xAE8DEF8B1529)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IScalarNaturalMotionAnimationFactory {
}

// MARK: Windows.UI.Composition.IShapeVisual

public func uuidof(_: SWRT_WindowsUIComposition_IShapeVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF2BD13C3, 0xBA7E, 0x4B0F, 0x9126, 0xFFB7536B8176)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IShapeVisual {
    public func get_Shapes() throws -> WindowsUIComposition_CompositionShapeCollection? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_WindowsUIComposition_CompositionShape>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shapes(this, &_result))
        return WindowsUIComposition_CompositionShapeCollectionBinding.fromABI(consuming: &_result)
    }

    public func get_ViewBox() throws -> WindowsUIComposition_CompositionViewBox? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionViewBox>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ViewBox(this, &_result))
        return WindowsUIComposition_CompositionViewBoxBinding.fromABI(consuming: &_result)
    }

    public func put_ViewBox(_ value: WindowsUIComposition_CompositionViewBox?) throws {
        var value_abi = try WindowsUIComposition_CompositionViewBoxBinding.toABI(value)
        defer { WindowsUIComposition_CompositionViewBoxBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ViewBox(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ISpotLight

public func uuidof(_: SWRT_WindowsUIComposition_ISpotLight.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5A9FE273, 0x44A1, 0x4F95, 0xA422, 0x8FA5116BDB44)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpotLight {
    public func get_ConstantAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ConstantAttenuation(this, &_result))
        return _result
    }

    public func put_ConstantAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ConstantAttenuation(this, value))
    }

    public func get_CoordinateSpace() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CoordinateSpace(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_CoordinateSpace(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CoordinateSpace(this, value_abi))
    }

    public func get_Direction() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Direction(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Direction(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Direction(this, value_abi))
    }

    public func get_InnerConeAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeAngle(this, &_result))
        return _result
    }

    public func put_InnerConeAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeAngle(this, value))
    }

    public func get_InnerConeAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeAngleInDegrees(this, &_result))
        return _result
    }

    public func put_InnerConeAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeAngleInDegrees(this, value))
    }

    public func get_InnerConeColor() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeColor(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_InnerConeColor(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeColor(this, value_abi))
    }

    public func get_LinearAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_LinearAttenuation(this, &_result))
        return _result
    }

    public func put_LinearAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_LinearAttenuation(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_OuterConeAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeAngle(this, &_result))
        return _result
    }

    public func put_OuterConeAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeAngle(this, value))
    }

    public func get_OuterConeAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeAngleInDegrees(this, &_result))
        return _result
    }

    public func put_OuterConeAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeAngleInDegrees(this, value))
    }

    public func get_OuterConeColor() throws -> WindowsUI_Color {
        var _result: SWRT_WindowsUI_Color = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeColor(this, &_result))
        return WindowsUI_Color.fromABI(_result)
    }

    public func put_OuterConeColor(_ value: WindowsUI_Color) throws {
        let value_abi = WindowsUI_Color.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeColor(this, value_abi))
    }

    public func get_QuadraticAttenuation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_QuadraticAttenuation(this, &_result))
        return _result
    }

    public func put_QuadraticAttenuation(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_QuadraticAttenuation(this, value))
    }
}

// MARK: Windows.UI.Composition.ISpotLight2

public func uuidof(_: SWRT_WindowsUIComposition_ISpotLight2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x64EE615E, 0x0686, 0x4DEA, 0xA9E8, 0xBC3A8C701459)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpotLight2 {
    public func get_InnerConeIntensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InnerConeIntensity(this, &_result))
        return _result
    }

    public func put_InnerConeIntensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InnerConeIntensity(this, value))
    }

    public func get_OuterConeIntensity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_OuterConeIntensity(this, &_result))
        return _result
    }

    public func put_OuterConeIntensity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_OuterConeIntensity(this, value))
    }
}

// MARK: Windows.UI.Composition.ISpotLight3

public func uuidof(_: SWRT_WindowsUIComposition_ISpotLight3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE4D03EEA, 0x131F, 0x480E, 0x859E, 0xB82705B74360)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpotLight3 {
    public func get_MinAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MinAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MinAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MinAttenuationCutoff(this, value))
    }

    public func get_MaxAttenuationCutoff() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MaxAttenuationCutoff(this, &_result))
        return _result
    }

    public func put_MaxAttenuationCutoff(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_MaxAttenuationCutoff(this, value))
    }
}

// MARK: Windows.UI.Composition.ISpringScalarNaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_ISpringScalarNaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0572A95F, 0x37F9, 0x4FBE, 0xB87B, 0x5CD03A89501C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpringScalarNaturalMotionAnimation {
    public func get_DampingRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DampingRatio(this, &_result))
        return _result
    }

    public func put_DampingRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DampingRatio(this, value))
    }

    public func get_Period() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Period(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Period(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Period(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ISpringVector2NaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_ISpringVector2NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x23F494B5, 0xEE73, 0x4F0F, 0xA423, 0x402B946DF4B3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpringVector2NaturalMotionAnimation {
    public func get_DampingRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DampingRatio(this, &_result))
        return _result
    }

    public func put_DampingRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DampingRatio(this, value))
    }

    public func get_Period() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Period(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Period(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Period(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ISpringVector3NaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_ISpringVector3NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6C8749DF, 0xD57B, 0x4794, 0x8E2D, 0xCECB11E194E5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpringVector3NaturalMotionAnimation {
    public func get_DampingRatio() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DampingRatio(this, &_result))
        return _result
    }

    public func put_DampingRatio(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_DampingRatio(this, value))
    }

    public func get_Period() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Period(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func put_Period(_ value: WindowsFoundation_TimeSpan) throws {
        let value_abi = WindowsFoundation_TimeSpan.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Period(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ISpriteVisual

public func uuidof(_: SWRT_WindowsUIComposition_ISpriteVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x08E05581, 0x1AD1, 0x4F97, 0x9757, 0x402D76E4233B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpriteVisual {
    public func get_Brush() throws -> WindowsUIComposition_CompositionBrush? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionBrush>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Brush(this, &_result))
        return WindowsUIComposition_CompositionBrushBinding.fromABI(consuming: &_result)
    }

    public func put_Brush(_ value: WindowsUIComposition_CompositionBrush?) throws {
        var value_abi = try WindowsUIComposition_CompositionBrushBinding.toABI(value)
        defer { WindowsUIComposition_CompositionBrushBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Brush(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.ISpriteVisual2

public func uuidof(_: SWRT_WindowsUIComposition_ISpriteVisual2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x588C9664, 0x997A, 0x4850, 0x91FE, 0x53CB58F81CE9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_ISpriteVisual2 {
    public func get_Shadow() throws -> WindowsUIComposition_CompositionShadow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionShadow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Shadow(this, &_result))
        return WindowsUIComposition_CompositionShadowBinding.fromABI(consuming: &_result)
    }

    public func put_Shadow(_ value: WindowsUIComposition_CompositionShadow?) throws {
        var value_abi = try WindowsUIComposition_CompositionShadowBinding.toABI(value)
        defer { WindowsUIComposition_CompositionShadowBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Shadow(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IStepEasingFunction

public func uuidof(_: SWRT_WindowsUIComposition_IStepEasingFunction.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD0CAA74B, 0x560C, 0x4A0B, 0xA5F6, 0x206CA8C3ECD6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IStepEasingFunction {
    public func get_FinalStep() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalStep(this, &_result))
        return _result
    }

    public func put_FinalStep(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalStep(this, value))
    }

    public func get_InitialStep() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialStep(this, &_result))
        return _result
    }

    public func put_InitialStep(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialStep(this, value))
    }

    public func get_IsFinalStepSingleFrame() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsFinalStepSingleFrame(this, &_result))
        return _result
    }

    public func put_IsFinalStepSingleFrame(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsFinalStepSingleFrame(this, value))
    }

    public func get_IsInitialStepSingleFrame() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInitialStepSingleFrame(this, &_result))
        return _result
    }

    public func put_IsInitialStepSingleFrame(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsInitialStepSingleFrame(this, value))
    }

    public func get_StepCount() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_StepCount(this, &_result))
        return _result
    }

    public func put_StepCount(_ value: Swift.Int32) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_StepCount(this, value))
    }
}

// MARK: Windows.UI.Composition.IVector2KeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IVector2KeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDF414515, 0x4E29, 0x4F11, 0xB55E, 0xBF2A6EB36294)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVector2KeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector2, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.IVector2NaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IVector2NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x0F3E0B7D, 0xE512, 0x479D, 0xA00C, 0x77C93A30A395)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVector2NaturalMotionAnimation {
    public func get_FinalValue() throws -> WindowsFoundationNumerics_Vector2? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.fromABI(consuming: &_result)
    }

    public func put_FinalValue(_ value: WindowsFoundationNumerics_Vector2?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalValue(this, value_abi))
    }

    public func get_InitialValue() throws -> WindowsFoundationNumerics_Vector2? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.fromABI(consuming: &_result)
    }

    public func put_InitialValue(_ value: WindowsFoundationNumerics_Vector2?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector2>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialValue(this, value_abi))
    }

    public func get_InitialVelocity() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialVelocity(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_InitialVelocity(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialVelocity(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IVector2NaturalMotionAnimationFactory

public func uuidof(_: SWRT_WindowsUIComposition_IVector2NaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8C74FF61, 0x0761, 0x48A2, 0xBDDB, 0x6AFCC52B89D8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVector2NaturalMotionAnimationFactory {
}

// MARK: Windows.UI.Composition.IVector3KeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IVector3KeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC8039DAA, 0xA281, 0x43C2, 0xA73D, 0xB68E3C533C40)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVector3KeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector3, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.IVector3NaturalMotionAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IVector3NaturalMotionAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9C17042C, 0xE2CA, 0x45AD, 0x969E, 0x4E78B7B9AD41)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVector3NaturalMotionAnimation {
    public func get_FinalValue() throws -> WindowsFoundationNumerics_Vector3? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FinalValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.fromABI(consuming: &_result)
    }

    public func put_FinalValue(_ value: WindowsFoundationNumerics_Vector3?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FinalValue(this, value_abi))
    }

    public func get_InitialValue() throws -> WindowsFoundationNumerics_Vector3? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialValue(this, &_result))
        return WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.fromABI(consuming: &_result)
    }

    public func put_InitialValue(_ value: WindowsFoundationNumerics_Vector3?) throws {
        var value_abi = try WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.toABI(value)
        defer { WindowsRuntime.IReferenceToOptionalBinding<WindowsFoundationNumerics_Vector3>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialValue(this, value_abi))
    }

    public func get_InitialVelocity() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InitialVelocity(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_InitialVelocity(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_InitialVelocity(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IVector3NaturalMotionAnimationFactory

public func uuidof(_: SWRT_WindowsUIComposition_IVector3NaturalMotionAnimationFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x21A81D2F, 0x0880, 0x457B, 0xAC87, 0xB609018C876D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVector3NaturalMotionAnimationFactory {
}

// MARK: Windows.UI.Composition.IVector4KeyFrameAnimation

public func uuidof(_: SWRT_WindowsUIComposition_IVector4KeyFrameAnimation.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x2457945B, 0xADDD, 0x4385, 0x9606, 0xB6A3D5E4E1B9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVector4KeyFrameAnimation {
    public func insertKeyFrame(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector4) throws {
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrame(this, normalizedProgressKey, value_abi))
    }

    public func insertKeyFrameWithEasingFunction(_ normalizedProgressKey: Swift.Float, _ value: WindowsFoundationNumerics_Vector4, _ easingFunction: WindowsUIComposition_CompositionEasingFunction?) throws {
        let value_abi = WindowsFoundationNumerics_Vector4.toABI(value)
        var easingFunction_abi = try WindowsUIComposition_CompositionEasingFunctionBinding.toABI(easingFunction)
        defer { WindowsUIComposition_CompositionEasingFunctionBinding.release(&easingFunction_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertKeyFrameWithEasingFunction(this, normalizedProgressKey, value_abi, easingFunction_abi))
    }
}

// MARK: Windows.UI.Composition.IVisual

public func uuidof(_: SWRT_WindowsUIComposition_IVisual.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x117E202D, 0xA859, 0x4C89, 0x873B, 0xC2AA566788E3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVisual {
    public func get_AnchorPoint() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AnchorPoint(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_AnchorPoint(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AnchorPoint(this, value_abi))
    }

    public func get_BackfaceVisibility() throws -> WindowsUIComposition_CompositionBackfaceVisibility {
        var _result: SWRT_WindowsUIComposition_CompositionBackfaceVisibility = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BackfaceVisibility(this, &_result))
        return WindowsUIComposition_CompositionBackfaceVisibility.fromABI(_result)
    }

    public func put_BackfaceVisibility(_ value: WindowsUIComposition_CompositionBackfaceVisibility) throws {
        let value_abi = WindowsUIComposition_CompositionBackfaceVisibility.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BackfaceVisibility(this, value_abi))
    }

    public func get_BorderMode() throws -> WindowsUIComposition_CompositionBorderMode {
        var _result: SWRT_WindowsUIComposition_CompositionBorderMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BorderMode(this, &_result))
        return WindowsUIComposition_CompositionBorderMode.fromABI(_result)
    }

    public func put_BorderMode(_ value: WindowsUIComposition_CompositionBorderMode) throws {
        let value_abi = WindowsUIComposition_CompositionBorderMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_BorderMode(this, value_abi))
    }

    public func get_CenterPoint() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CenterPoint(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_CenterPoint(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CenterPoint(this, value_abi))
    }

    public func get_Clip() throws -> WindowsUIComposition_CompositionClip? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_ICompositionClip>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Clip(this, &_result))
        return WindowsUIComposition_CompositionClipBinding.fromABI(consuming: &_result)
    }

    public func put_Clip(_ value: WindowsUIComposition_CompositionClip?) throws {
        var value_abi = try WindowsUIComposition_CompositionClipBinding.toABI(value)
        defer { WindowsUIComposition_CompositionClipBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Clip(this, value_abi))
    }

    public func get_CompositeMode() throws -> WindowsUIComposition_CompositionCompositeMode {
        var _result: SWRT_WindowsUIComposition_CompositionCompositeMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CompositeMode(this, &_result))
        return WindowsUIComposition_CompositionCompositeMode.fromABI(_result)
    }

    public func put_CompositeMode(_ value: WindowsUIComposition_CompositionCompositeMode) throws {
        let value_abi = WindowsUIComposition_CompositionCompositeMode.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CompositeMode(this, value_abi))
    }

    public func get_IsVisible() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsVisible(this, &_result))
        return _result
    }

    public func put_IsVisible(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsVisible(this, value))
    }

    public func get_Offset() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Offset(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Offset(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Offset(this, value_abi))
    }

    public func get_Opacity() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Opacity(this, &_result))
        return _result
    }

    public func put_Opacity(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Opacity(this, value))
    }

    public func get_Orientation() throws -> WindowsFoundationNumerics_Quaternion {
        var _result: SWRT_WindowsFoundationNumerics_Quaternion = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orientation(this, &_result))
        return WindowsFoundationNumerics_Quaternion.fromABI(_result)
    }

    public func put_Orientation(_ value: WindowsFoundationNumerics_Quaternion) throws {
        let value_abi = WindowsFoundationNumerics_Quaternion.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Orientation(this, value_abi))
    }

    public func get_Parent() throws -> WindowsUIComposition_ContainerVisual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IContainerVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Parent(this, &_result))
        return WindowsUIComposition_ContainerVisualBinding.fromABI(consuming: &_result)
    }

    public func get_RotationAngle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngle(this, &_result))
        return _result
    }

    public func put_RotationAngle(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngle(this, value))
    }

    public func get_RotationAngleInDegrees() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAngleInDegrees(this, &_result))
        return _result
    }

    public func put_RotationAngleInDegrees(_ value: Swift.Float) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAngleInDegrees(this, value))
    }

    public func get_RotationAxis() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RotationAxis(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_RotationAxis(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RotationAxis(this, value_abi))
    }

    public func get_Scale() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Scale(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_Scale(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Scale(this, value_abi))
    }

    public func get_Size() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_Size(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Size(this, value_abi))
    }

    public func get_TransformMatrix() throws -> WindowsFoundationNumerics_Matrix4x4 {
        var _result: SWRT_WindowsFoundationNumerics_Matrix4x4 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TransformMatrix(this, &_result))
        return WindowsFoundationNumerics_Matrix4x4.fromABI(_result)
    }

    public func put_TransformMatrix(_ value: WindowsFoundationNumerics_Matrix4x4) throws {
        let value_abi = WindowsFoundationNumerics_Matrix4x4.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_TransformMatrix(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IVisual2

public func uuidof(_: SWRT_WindowsUIComposition_IVisual2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x3052B611, 0x56C3, 0x4C3E, 0x8BF3, 0xF6E1AD473F06)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVisual2 {
    public func get_ParentForTransform() throws -> WindowsUIComposition_Visual? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIComposition_IVisual>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ParentForTransform(this, &_result))
        return WindowsUIComposition_VisualBinding.fromABI(consuming: &_result)
    }

    public func put_ParentForTransform(_ value: WindowsUIComposition_Visual?) throws {
        var value_abi = try WindowsUIComposition_VisualBinding.toABI(value)
        defer { WindowsUIComposition_VisualBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ParentForTransform(this, value_abi))
    }

    public func get_RelativeOffsetAdjustment() throws -> WindowsFoundationNumerics_Vector3 {
        var _result: SWRT_WindowsFoundationNumerics_Vector3 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RelativeOffsetAdjustment(this, &_result))
        return WindowsFoundationNumerics_Vector3.fromABI(_result)
    }

    public func put_RelativeOffsetAdjustment(_ value: WindowsFoundationNumerics_Vector3) throws {
        let value_abi = WindowsFoundationNumerics_Vector3.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RelativeOffsetAdjustment(this, value_abi))
    }

    public func get_RelativeSizeAdjustment() throws -> WindowsFoundationNumerics_Vector2 {
        var _result: SWRT_WindowsFoundationNumerics_Vector2 = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RelativeSizeAdjustment(this, &_result))
        return WindowsFoundationNumerics_Vector2.fromABI(_result)
    }

    public func put_RelativeSizeAdjustment(_ value: WindowsFoundationNumerics_Vector2) throws {
        let value_abi = WindowsFoundationNumerics_Vector2.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_RelativeSizeAdjustment(this, value_abi))
    }
}

// MARK: Windows.UI.Composition.IVisualCollection

public func uuidof(_: SWRT_WindowsUIComposition_IVisualCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8B745505, 0xFD3E, 0x4A98, 0x84A8, 0xE949468C6BCB)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVisualCollection {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func insertAbove(_ newChild: WindowsUIComposition_Visual?, _ sibling: WindowsUIComposition_Visual?) throws {
        var newChild_abi = try WindowsUIComposition_VisualBinding.toABI(newChild)
        defer { WindowsUIComposition_VisualBinding.release(&newChild_abi) }
        var sibling_abi = try WindowsUIComposition_VisualBinding.toABI(sibling)
        defer { WindowsUIComposition_VisualBinding.release(&sibling_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAbove(this, newChild_abi, sibling_abi))
    }

    public func insertAtBottom(_ newChild: WindowsUIComposition_Visual?) throws {
        var newChild_abi = try WindowsUIComposition_VisualBinding.toABI(newChild)
        defer { WindowsUIComposition_VisualBinding.release(&newChild_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtBottom(this, newChild_abi))
    }

    public func insertAtTop(_ newChild: WindowsUIComposition_Visual?) throws {
        var newChild_abi = try WindowsUIComposition_VisualBinding.toABI(newChild)
        defer { WindowsUIComposition_VisualBinding.release(&newChild_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertAtTop(this, newChild_abi))
    }

    public func insertBelow(_ newChild: WindowsUIComposition_Visual?, _ sibling: WindowsUIComposition_Visual?) throws {
        var newChild_abi = try WindowsUIComposition_VisualBinding.toABI(newChild)
        defer { WindowsUIComposition_VisualBinding.release(&newChild_abi) }
        var sibling_abi = try WindowsUIComposition_VisualBinding.toABI(sibling)
        defer { WindowsUIComposition_VisualBinding.release(&sibling_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.InsertBelow(this, newChild_abi, sibling_abi))
    }

    public func remove(_ child: WindowsUIComposition_Visual?) throws {
        var child_abi = try WindowsUIComposition_VisualBinding.toABI(child)
        defer { WindowsUIComposition_VisualBinding.release(&child_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, child_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Windows.UI.Composition.IVisualFactory

public func uuidof(_: SWRT_WindowsUIComposition_IVisualFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xAD0FF93E, 0xB502, 0x4EB5, 0x87B4, 0x9A38A71D0137)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVisualFactory {
}

// MARK: Windows.UI.Composition.IVisualUnorderedCollection

public func uuidof(_: SWRT_WindowsUIComposition_IVisualUnorderedCollection.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x338FAA70, 0x54C8, 0x40A7, 0x8029, 0xC9CEEB0AA250)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIComposition_IVisualUnorderedCollection {
    public func get_Count() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Count(this, &_result))
        return _result
    }

    public func add(_ newVisual: WindowsUIComposition_Visual?) throws {
        var newVisual_abi = try WindowsUIComposition_VisualBinding.toABI(newVisual)
        defer { WindowsUIComposition_VisualBinding.release(&newVisual_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Add(this, newVisual_abi))
    }

    public func remove(_ visual: WindowsUIComposition_Visual?) throws {
        var visual_abi = try WindowsUIComposition_VisualBinding.toABI(visual)
        defer { WindowsUIComposition_VisualBinding.release(&visual_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Remove(this, visual_abi))
    }

    public func removeAll() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RemoveAll(this))
    }
}

// MARK: Windows.UI.Core.IDispatchedHandler

public func uuidof(_: SWRT_WindowsUICore_DispatchedHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD1F276C4, 0x98D8, 0x4636, 0xBF49, 0xEB79507548E9)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_DispatchedHandler {
    public func invoke() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this))
    }
}

// MARK: Windows.UI.Core.IAcceleratorKeyEventArgs

public func uuidof(_: SWRT_WindowsUICore_IAcceleratorKeyEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xFF1C4C4A, 0x9287, 0x470B, 0x836E, 0x9086E3126ADE)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IAcceleratorKeyEventArgs {
    public func get_EventType() throws -> WindowsUICore_CoreAcceleratorKeyEventType {
        var _result: SWRT_WindowsUICore_CoreAcceleratorKeyEventType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_EventType(this, &_result))
        return WindowsUICore_CoreAcceleratorKeyEventType.fromABI(_result)
    }

    public func get_VirtualKey() throws -> WindowsSystem_VirtualKey {
        var _result: SWRT_WindowsSystem_VirtualKey = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_VirtualKey(this, &_result))
        return WindowsSystem_VirtualKey.fromABI(_result)
    }

    public func get_KeyStatus() throws -> WindowsUICore_CorePhysicalKeyStatus {
        var _result: SWRT_WindowsUICore_CorePhysicalKeyStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_KeyStatus(this, &_result))
        return WindowsUICore_CorePhysicalKeyStatus.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.IAcceleratorKeyEventArgs2

public func uuidof(_: SWRT_WindowsUICore_IAcceleratorKeyEventArgs2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xD300A9F6, 0x2F7E, 0x4873, 0xA555, 0x166E596EE1C5)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IAcceleratorKeyEventArgs2 {
    public func get_DeviceId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DeviceId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.IAutomationProviderRequestedEventArgs

public func uuidof(_: SWRT_WindowsUICore_IAutomationProviderRequestedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x961FF258, 0x21BF, 0x4B42, 0xA298, 0xFA479D4C52E2)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IAutomationProviderRequestedEventArgs {
    public func get_AutomationProvider() throws -> WindowsRuntime.IInspectable? {
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AutomationProvider(this, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func put_AutomationProvider(_ value: WindowsRuntime.IInspectable?) throws {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_AutomationProvider(this, value_abi))
    }
}

// MARK: Windows.UI.Core.ICharacterReceivedEventArgs

public func uuidof(_: SWRT_WindowsUICore_ICharacterReceivedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC584659F, 0x99B2, 0x4BCC, 0xBD33, 0x04E63F42902E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICharacterReceivedEventArgs {
    public func get_KeyCode() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_KeyCode(this, &_result))
        return _result
    }

    public func get_KeyStatus() throws -> WindowsUICore_CorePhysicalKeyStatus {
        var _result: SWRT_WindowsUICore_CorePhysicalKeyStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_KeyStatus(this, &_result))
        return WindowsUICore_CorePhysicalKeyStatus.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.IClosestInteractiveBoundsRequestedEventArgs

public func uuidof(_: SWRT_WindowsUICore_IClosestInteractiveBoundsRequestedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x347C11D7, 0xF6F8, 0x40E3, 0xB29F, 0xAE50D3E86486)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IClosestInteractiveBoundsRequestedEventArgs {
    public func get_PointerPosition() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerPosition(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func get_SearchBounds() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_SearchBounds(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func get_ClosestInteractiveBounds() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ClosestInteractiveBounds(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func put_ClosestInteractiveBounds(_ value: WindowsFoundation_Rect) throws {
        let value_abi = WindowsFoundation_Rect.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ClosestInteractiveBounds(this, value_abi))
    }
}

// MARK: Windows.UI.Core.ICoreAcceleratorKeys

public func uuidof(_: SWRT_WindowsUICore_ICoreAcceleratorKeys.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9FFDF7F5, 0xB8C9, 0x4EF0, 0xB7D2, 0x1DE626561FC8)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreAcceleratorKeys {
    public func add_AcceleratorKeyActivated(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreDispatcher?, WindowsUICore_AcceleratorKeyEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreDispatcher_AcceleratorKeyEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreDispatcher_AcceleratorKeyEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_AcceleratorKeyActivated(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_AcceleratorKeyActivated(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_AcceleratorKeyActivated(this, cookie_abi))
    }
}

// MARK: Windows.UI.Core.ICoreCursor

public func uuidof(_: SWRT_WindowsUICore_ICoreCursor.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x96893ACF, 0x111D, 0x442C, 0x8A77, 0xB87992F8E2D6)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreCursor {
    public func get_Id() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Id(this, &_result))
        return _result
    }

    public func get_Type() throws -> WindowsUICore_CoreCursorType {
        var _result: SWRT_WindowsUICore_CoreCursorType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Type(this, &_result))
        return WindowsUICore_CoreCursorType.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.ICoreCursorFactory

public func uuidof(_: SWRT_WindowsUICore_ICoreCursorFactory.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xF6359621, 0xA79D, 0x4ED3, 0x8C32, 0xA9EF9D6B76A4)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreCursorFactory {
    public func createCursor(_ type: WindowsUICore_CoreCursorType, _ id: Swift.UInt32) throws -> COM.COMReference<SWRT_WindowsUICore_ICoreCursor> {
        let type_abi = WindowsUICore_CoreCursorType.toABI(type)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUICore_ICoreCursor>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateCursor(this, type_abi, id, &_result))
        guard let _result else { throw COMError.pointer }
        return COM.COMReference(transferringRef: _result)
    }
}

// MARK: Windows.UI.Core.ICoreDispatcher

public func uuidof(_: SWRT_WindowsUICore_ICoreDispatcher.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x60DB2FA8, 0xB705, 0x4FDE, 0xA7D6, 0xEBBB1891D39E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreDispatcher {
    public func get_HasThreadAccess() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_HasThreadAccess(this, &_result))
        return _result
    }

    public func processEvents(_ options: WindowsUICore_CoreProcessEventsOption) throws {
        let options_abi = WindowsUICore_CoreProcessEventsOption.toABI(options)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ProcessEvents(this, options_abi))
    }

    public func runAsync(_ priority: WindowsUICore_CoreDispatcherPriority, _ agileCallback: WindowsUICore_DispatchedHandler?) throws -> WindowsFoundation_IAsyncAction? {
        let priority_abi = WindowsUICore_CoreDispatcherPriority.toABI(priority)
        var agileCallback_abi = try WindowsUICore_DispatchedHandlerBinding.toABI(agileCallback)
        defer { WindowsUICore_DispatchedHandlerBinding.release(&agileCallback_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RunAsync(this, priority_abi, agileCallback_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func runIdleAsync(_ agileCallback: WindowsUICore_IdleDispatchedHandler?) throws -> WindowsFoundation_IAsyncAction? {
        var agileCallback_abi = try WindowsUICore_IdleDispatchedHandlerBinding.toABI(agileCallback)
        defer { WindowsUICore_IdleDispatchedHandlerBinding.release(&agileCallback_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RunIdleAsync(this, agileCallback_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.ICoreDispatcher2

public func uuidof(_: SWRT_WindowsUICore_ICoreDispatcher2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x6F5E63C7, 0xE3AA, 0x4EAE, 0xB0E0, 0xDCF321CA4B2F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreDispatcher2 {
    public func tryRunAsync(_ priority: WindowsUICore_CoreDispatcherPriority, _ agileCallback: WindowsUICore_DispatchedHandler?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool>? {
        let priority_abi = WindowsUICore_CoreDispatcherPriority.toABI(priority)
        var agileCallback_abi = try WindowsUICore_DispatchedHandlerBinding.toABI(agileCallback)
        defer { WindowsUICore_DispatchedHandlerBinding.release(&agileCallback_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_Bool>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryRunAsync(this, priority_abi, agileCallback_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Boolean.fromABI(consuming: &_result)
    }

    public func tryRunIdleAsync(_ agileCallback: WindowsUICore_IdleDispatchedHandler?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool>? {
        var agileCallback_abi = try WindowsUICore_IdleDispatchedHandlerBinding.toABI(agileCallback)
        defer { WindowsUICore_IdleDispatchedHandlerBinding.release(&agileCallback_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncOperation_Bool>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryRunIdleAsync(this, agileCallback_abi, &_result))
        return WindowsFoundation_IAsyncOperationBinding.Boolean.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.ICoreDispatcherWithTaskPriority

public func uuidof(_: SWRT_WindowsUICore_ICoreDispatcherWithTaskPriority.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBAFAECAD, 0x484D, 0x41BE, 0xBA80, 0x1D58C65263EA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreDispatcherWithTaskPriority {
    public func get_CurrentPriority() throws -> WindowsUICore_CoreDispatcherPriority {
        var _result: SWRT_WindowsUICore_CoreDispatcherPriority = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CurrentPriority(this, &_result))
        return WindowsUICore_CoreDispatcherPriority.fromABI(_result)
    }

    public func put_CurrentPriority(_ value: WindowsUICore_CoreDispatcherPriority) throws {
        let value_abi = WindowsUICore_CoreDispatcherPriority.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_CurrentPriority(this, value_abi))
    }

    public func shouldYield() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ShouldYield(this, &_result))
        return _result
    }

    public func shouldYieldToPriority(_ priority: WindowsUICore_CoreDispatcherPriority) throws -> Swift.Bool {
        let priority_abi = WindowsUICore_CoreDispatcherPriority.toABI(priority)
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ShouldYieldToPriority(this, priority_abi, &_result))
        return _result
    }

    public func stopProcessEvents() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.StopProcessEvents(this))
    }
}

// MARK: Windows.UI.Core.ICorePointerRedirector

public func uuidof(_: SWRT_WindowsUICore_ICorePointerRedirector.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x8F9D0C94, 0x5688, 0x4B0C, 0xA9F1, 0xF931F7FA3DC3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICorePointerRedirector {
    public func add_PointerRoutedAway(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_ICorePointerRedirector?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.ICorePointerRedirector_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.ICorePointerRedirector_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerRoutedAway(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerRoutedAway(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerRoutedAway(this, cookie_abi))
    }

    public func add_PointerRoutedTo(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_ICorePointerRedirector?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.ICorePointerRedirector_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.ICorePointerRedirector_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerRoutedTo(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerRoutedTo(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerRoutedTo(this, cookie_abi))
    }

    public func add_PointerRoutedReleased(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_ICorePointerRedirector?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.ICorePointerRedirector_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.ICorePointerRedirector_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerRoutedReleased(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerRoutedReleased(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerRoutedReleased(this, cookie_abi))
    }
}

// MARK: Windows.UI.Core.ICoreWindow

public func uuidof(_: SWRT_WindowsUICore_ICoreWindow.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x79B9D5F2, 0x879E, 0x4B89, 0xB798, 0x79E47598030C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindow {
    public func get_AutomationHostProvider() throws -> WindowsRuntime.IInspectable? {
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_AutomationHostProvider(this, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func get_Bounds() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Bounds(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func get_CustomProperties() throws -> WindowsFoundationCollections_IPropertySet? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IPropertySet>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CustomProperties(this, &_result))
        return WindowsFoundationCollections_IPropertySetBinding.fromABI(consuming: &_result)
    }

    public func get_Dispatcher() throws -> WindowsUICore_CoreDispatcher? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUICore_ICoreDispatcher>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Dispatcher(this, &_result))
        return WindowsUICore_CoreDispatcherBinding.fromABI(consuming: &_result)
    }

    public func get_FlowDirection() throws -> WindowsUICore_CoreWindowFlowDirection {
        var _result: SWRT_WindowsUICore_CoreWindowFlowDirection = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FlowDirection(this, &_result))
        return WindowsUICore_CoreWindowFlowDirection.fromABI(_result)
    }

    public func put_FlowDirection(_ value: WindowsUICore_CoreWindowFlowDirection) throws {
        let value_abi = WindowsUICore_CoreWindowFlowDirection.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_FlowDirection(this, value_abi))
    }

    public func get_IsInputEnabled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInputEnabled(this, &_result))
        return _result
    }

    public func put_IsInputEnabled(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_IsInputEnabled(this, value))
    }

    public func get_PointerCursor() throws -> WindowsUICore_CoreCursor? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUICore_ICoreCursor>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerCursor(this, &_result))
        return WindowsUICore_CoreCursorBinding.fromABI(consuming: &_result)
    }

    public func put_PointerCursor(_ value: WindowsUICore_CoreCursor?) throws {
        var value_abi = try WindowsUICore_CoreCursorBinding.toABI(value)
        defer { WindowsUICore_CoreCursorBinding.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_PointerCursor(this, value_abi))
    }

    public func get_PointerPosition() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerPosition(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func get_Visible() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Visible(this, &_result))
        return _result
    }

    public func activate() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Activate(this))
    }

    public func close() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Close(this))
    }

    public func getAsyncKeyState(_ virtualKey: WindowsSystem_VirtualKey) throws -> WindowsUICore_CoreVirtualKeyStates {
        let virtualKey_abi = WindowsSystem_VirtualKey.toABI(virtualKey)
        var _result: SWRT_WindowsUICore_CoreVirtualKeyStates = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetAsyncKeyState(this, virtualKey_abi, &_result))
        return WindowsUICore_CoreVirtualKeyStates.fromABI(_result)
    }

    public func getKeyState(_ virtualKey: WindowsSystem_VirtualKey) throws -> WindowsUICore_CoreVirtualKeyStates {
        let virtualKey_abi = WindowsSystem_VirtualKey.toABI(virtualKey)
        var _result: SWRT_WindowsUICore_CoreVirtualKeyStates = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetKeyState(this, virtualKey_abi, &_result))
        return WindowsUICore_CoreVirtualKeyStates.fromABI(_result)
    }

    public func releasePointerCapture() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ReleasePointerCapture(this))
    }

    public func setPointerCapture() throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SetPointerCapture(this))
    }

    public func add_Activated(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_WindowActivatedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_WindowActivatedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_WindowActivatedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Activated(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Activated(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Activated(this, cookie_abi))
    }

    public func add_AutomationProviderRequested(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_AutomationProviderRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_AutomationProviderRequestedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_AutomationProviderRequestedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_AutomationProviderRequested(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_AutomationProviderRequested(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_AutomationProviderRequested(this, cookie_abi))
    }

    public func add_CharacterReceived(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_CharacterReceivedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_CharacterReceivedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_CharacterReceivedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_CharacterReceived(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_CharacterReceived(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_CharacterReceived(this, cookie_abi))
    }

    public func add_Closed(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_CoreWindowEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_CoreWindowEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_CoreWindowEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_Closed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_Closed(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_Closed(this, cookie_abi))
    }

    public func add_InputEnabled(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_InputEnabledEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_InputEnabledEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_InputEnabledEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_InputEnabled(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_InputEnabled(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_InputEnabled(this, cookie_abi))
    }

    public func add_KeyDown(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_KeyEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_KeyEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_KeyEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_KeyDown(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_KeyDown(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_KeyDown(this, cookie_abi))
    }

    public func add_KeyUp(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_KeyEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_KeyEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_KeyEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_KeyUp(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_KeyUp(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_KeyUp(this, cookie_abi))
    }

    public func add_PointerCaptureLost(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerCaptureLost(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerCaptureLost(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerCaptureLost(this, cookie_abi))
    }

    public func add_PointerEntered(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerEntered(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerEntered(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerEntered(this, cookie_abi))
    }

    public func add_PointerExited(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerExited(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerExited(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerExited(this, cookie_abi))
    }

    public func add_PointerMoved(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerMoved(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerMoved(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerMoved(this, cookie_abi))
    }

    public func add_PointerPressed(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerPressed(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerPressed(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerPressed(this, cookie_abi))
    }

    public func add_PointerReleased(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerReleased(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerReleased(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerReleased(this, cookie_abi))
    }

    public func add_TouchHitTesting(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_TouchHitTestingEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_TouchHitTestingEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_TouchHitTestingEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_TouchHitTesting(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_TouchHitTesting(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_TouchHitTesting(this, cookie_abi))
    }

    public func add_PointerWheelChanged(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_PointerEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_PointerEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_PointerWheelChanged(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_PointerWheelChanged(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_PointerWheelChanged(this, cookie_abi))
    }

    public func add_SizeChanged(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_WindowSizeChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_WindowSizeChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_WindowSizeChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_SizeChanged(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_SizeChanged(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_SizeChanged(this, cookie_abi))
    }

    public func add_VisibilityChanged(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_VisibilityChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_VisibilityChangedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_VisibilityChangedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_VisibilityChanged(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_VisibilityChanged(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_VisibilityChanged(this, cookie_abi))
    }
}

// MARK: Windows.UI.Core.ICoreWindow2

public func uuidof(_: SWRT_WindowsUICore_ICoreWindow2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x7C2B1B85, 0x6917, 0x4361, 0x9C02, 0x0D9E3A420B95)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindow2 {
    public func put_PointerPosition(_ value: WindowsFoundation_Point) throws {
        let value_abi = WindowsFoundation_Point.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_PointerPosition(this, value_abi))
    }
}

// MARK: Windows.UI.Core.ICoreWindow3

public func uuidof(_: SWRT_WindowsUICore_ICoreWindow3.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x32C20DD8, 0xFAEF, 0x4375, 0xA2AB, 0x32640E4815C7)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindow3 {
    public func add_ClosestInteractiveBoundsRequested(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsUICore_ClosestInteractiveBoundsRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_ClosestInteractiveBoundsRequestedEventArgs.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_ClosestInteractiveBoundsRequestedEventArgs.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ClosestInteractiveBoundsRequested(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ClosestInteractiveBoundsRequested(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ClosestInteractiveBoundsRequested(this, cookie_abi))
    }

    public func getCurrentKeyEventDeviceId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetCurrentKeyEventDeviceId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.ICoreWindow4

public func uuidof(_: SWRT_WindowsUICore_ICoreWindow4.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x35CAF0D0, 0x47F0, 0x436C, 0xAF97, 0x0DD88F6F5F02)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindow4 {
    public func add_ResizeStarted(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ResizeStarted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ResizeStarted(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ResizeStarted(this, cookie_abi))
    }

    public func add_ResizeCompleted(_ handler: WindowsFoundation_TypedEventHandler<WindowsUICore_CoreWindow?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistrationToken {
        var handler_abi = try WindowsFoundation_TypedEventHandlerBinding.CoreWindow_Object.toABI(handler)
        defer { WindowsFoundation_TypedEventHandlerBinding.CoreWindow_Object.release(&handler_abi) }
        var _result: SWRT_EventRegistrationToken = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.add_ResizeCompleted(this, handler_abi, &_result))
        return WindowsRuntime.EventRegistrationToken.fromABI(_result)
    }

    public func remove_ResizeCompleted(_ cookie: WindowsRuntime.EventRegistrationToken) throws {
        let cookie_abi = WindowsRuntime.EventRegistrationToken.toABI(cookie)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.remove_ResizeCompleted(this, cookie_abi))
    }
}

// MARK: Windows.UI.Core.ICoreWindow5

public func uuidof(_: SWRT_WindowsUICore_ICoreWindow5.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4B4AE1E1, 0x2E6D, 0x4EAA, 0xBDA1, 0x1C5CC1BEE141)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindow5 {
    public func get_DispatcherQueue() throws -> WindowsSystem_DispatcherQueue? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsSystem_IDispatcherQueue>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DispatcherQueue(this, &_result))
        return WindowsSystem_DispatcherQueueBinding.fromABI(consuming: &_result)
    }

    public func get_ActivationMode() throws -> WindowsUICore_CoreWindowActivationMode {
        var _result: SWRT_WindowsUICore_CoreWindowActivationMode = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ActivationMode(this, &_result))
        return WindowsUICore_CoreWindowActivationMode.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.ICoreWindowEventArgs

public func uuidof(_: SWRT_WindowsUICore_ICoreWindowEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x272B1EF3, 0xC633, 0x4DA5, 0xA26C, 0xC6D0F56B29DA)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindowEventArgs {
    public func get_Handled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Handled(this, &_result))
        return _result
    }

    public func put_Handled(_ value: Swift.Bool) throws {
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_Handled(this, value))
    }
}

// MARK: Windows.UI.Core.ICoreWindowStatic

public func uuidof(_: SWRT_WindowsUICore_ICoreWindowStatic.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4D239005, 0x3C2A, 0x41B1, 0x9022, 0x536BB9CF93B1)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindowStatic {
    public func getForCurrentThread() throws -> WindowsUICore_CoreWindow? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUICore_ICoreWindow>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetForCurrentThread(this, &_result))
        return WindowsUICore_CoreWindowBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.ICoreWindowWithContext

public func uuidof(_: SWRT_WindowsUICore_ICoreWindowWithContext.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x9AC40241, 0x3575, 0x4C3B, 0xAF66, 0xE8C529D4D06C)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ICoreWindowWithContext {
    public func get_UIContext() throws -> WindowsUI_UIContext? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUI_IUIContext>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_UIContext(this, &_result))
        return WindowsUI_UIContextBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.IIdleDispatchedHandlerArgs

public func uuidof(_: SWRT_WindowsUICore_IIdleDispatchedHandlerArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x98BB6A24, 0xDC1C, 0x43CB, 0xB4ED, 0xD1C0EB2391F3)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IIdleDispatchedHandlerArgs {
    public func get_IsDispatcherIdle() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsDispatcherIdle(this, &_result))
        return _result
    }
}

// MARK: Windows.UI.Core.IInputEnabledEventArgs

public func uuidof(_: SWRT_WindowsUICore_IInputEnabledEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x80371D4F, 0x2FD8, 0x4C24, 0xAA86, 0x3163A87B4E5A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IInputEnabledEventArgs {
    public func get_InputEnabled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_InputEnabled(this, &_result))
        return _result
    }
}

// MARK: Windows.UI.Core.IKeyEventArgs

public func uuidof(_: SWRT_WindowsUICore_IKeyEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5FF5E930, 0x2544, 0x4A17, 0xBD78, 0x1F2FDEBB106B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IKeyEventArgs {
    public func get_VirtualKey() throws -> WindowsSystem_VirtualKey {
        var _result: SWRT_WindowsSystem_VirtualKey = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_VirtualKey(this, &_result))
        return WindowsSystem_VirtualKey.fromABI(_result)
    }

    public func get_KeyStatus() throws -> WindowsUICore_CorePhysicalKeyStatus {
        var _result: SWRT_WindowsUICore_CorePhysicalKeyStatus = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_KeyStatus(this, &_result))
        return WindowsUICore_CorePhysicalKeyStatus.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.IKeyEventArgs2

public func uuidof(_: SWRT_WindowsUICore_IKeyEventArgs2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x583ADD98, 0x0790, 0x4571, 0x9B12, 0x645EF9D79E42)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IKeyEventArgs2 {
    public func get_DeviceId() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_DeviceId(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.IPointerEventArgs

public func uuidof(_: SWRT_WindowsUICore_IPointerEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x920D9CB1, 0xA5FC, 0x4A21, 0x8C09, 0x49DFE6FFE25F)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IPointerEventArgs {
    public func get_CurrentPoint() throws -> WindowsUIInput_PointerPoint? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_CurrentPoint(this, &_result))
        return WindowsUIInput_PointerPointBinding.fromABI(consuming: &_result)
    }

    public func get_KeyModifiers() throws -> WindowsSystem_VirtualKeyModifiers {
        var _result: SWRT_WindowsSystem_VirtualKeyModifiers = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_KeyModifiers(this, &_result))
        return WindowsSystem_VirtualKeyModifiers.fromABI(_result)
    }

    public func getIntermediatePoints() throws -> WindowsFoundationCollections_IVector<WindowsUIInput_PointerPoint?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_WindowsUIInput_PointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetIntermediatePoints(this, &_result))
        return WindowsFoundationCollections_IVectorBinding.PointerPoint.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Core.ITouchHitTestingEventArgs

public func uuidof(_: SWRT_WindowsUICore_ITouchHitTestingEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x22F3B823, 0x0B7C, 0x424E, 0x9DF7, 0x33D4F962931B)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_ITouchHitTestingEventArgs {
    public func get_ProximityEvaluation() throws -> WindowsUICore_CoreProximityEvaluation {
        var _result: SWRT_WindowsUICore_CoreProximityEvaluation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ProximityEvaluation(this, &_result))
        return WindowsUICore_CoreProximityEvaluation.fromABI(_result)
    }

    public func put_ProximityEvaluation(_ value: WindowsUICore_CoreProximityEvaluation) throws {
        let value_abi = WindowsUICore_CoreProximityEvaluation.toABI(value)
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.put_ProximityEvaluation(this, value_abi))
    }

    public func get_Point() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Point(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func get_BoundingBox() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_BoundingBox(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func evaluateProximityToRect(_ controlBoundingBox: WindowsFoundation_Rect) throws -> WindowsUICore_CoreProximityEvaluation {
        let controlBoundingBox_abi = WindowsFoundation_Rect.toABI(controlBoundingBox)
        var _result: SWRT_WindowsUICore_CoreProximityEvaluation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.EvaluateProximityToRect(this, controlBoundingBox_abi, &_result))
        return WindowsUICore_CoreProximityEvaluation.fromABI(_result)
    }

    public func evaluateProximityToPolygon(_ controlVertices: [WindowsFoundation_Point]) throws -> WindowsUICore_CoreProximityEvaluation {
        var controlVertices_abi = try WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.toABI(controlVertices)
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.release(&controlVertices_abi) }
        var _result: SWRT_WindowsUICore_CoreProximityEvaluation = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.EvaluateProximityToPolygon(this, controlVertices_abi.count, controlVertices_abi.pointer, &_result))
        return WindowsUICore_CoreProximityEvaluation.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.IVisibilityChangedEventArgs

public func uuidof(_: SWRT_WindowsUICore_IVisibilityChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xBF9918EA, 0xD801, 0x4564, 0xA495, 0xB1E84F8AD085)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IVisibilityChangedEventArgs {
    public func get_Visible() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Visible(this, &_result))
        return _result
    }
}

// MARK: Windows.UI.Core.IWindowActivatedEventArgs

public func uuidof(_: SWRT_WindowsUICore_IWindowActivatedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x179D65E7, 0x4658, 0x4CB6, 0xAA13, 0x41D094EA255E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IWindowActivatedEventArgs {
    public func get_WindowActivationState() throws -> WindowsUICore_CoreWindowActivationState {
        var _result: SWRT_WindowsUICore_CoreWindowActivationState = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_WindowActivationState(this, &_result))
        return WindowsUICore_CoreWindowActivationState.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.IWindowSizeChangedEventArgs

public func uuidof(_: SWRT_WindowsUICore_IWindowSizeChangedEventArgs.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5A200EC7, 0x0426, 0x47DC, 0xB86C, 0x6F475915E451)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IWindowSizeChangedEventArgs {
    public func get_Size() throws -> WindowsFoundation_Size {
        var _result: SWRT_WindowsFoundation_Size = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Size(this, &_result))
        return WindowsFoundation_Size.fromABI(_result)
    }
}

// MARK: Windows.UI.Core.IIdleDispatchedHandler

public func uuidof(_: SWRT_WindowsUICore_IdleDispatchedHandler.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA42B0C24, 0x7F21, 0x4ABC, 0x99C1, 0x8F01007F0880)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUICore_IdleDispatchedHandler {
    public func invoke(_ e: WindowsUICore_IdleDispatchedHandlerArgs?) throws {
        var e_abi = try WindowsUICore_IdleDispatchedHandlerArgsBinding.toABI(e)
        defer { WindowsUICore_IdleDispatchedHandlerArgsBinding.release(&e_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Invoke(this, e_abi))
    }
}

// MARK: Windows.UI.Input.IPointerPoint

public func uuidof(_: SWRT_WindowsUIInput_IPointerPoint.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xE995317D, 0x7296, 0x42D9, 0x8233, 0xC5BE73B74A4A)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIInput_IPointerPoint {
    public func get_PointerDevice() throws -> WindowsDevicesInput_PointerDevice? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsDevicesInput_IPointerDevice>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerDevice(this, &_result))
        return WindowsDevicesInput_PointerDeviceBinding.fromABI(consuming: &_result)
    }

    public func get_Position() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Position(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func get_RawPosition() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_RawPosition(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func get_PointerId() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerId(this, &_result))
        return _result
    }

    public func get_FrameId() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_FrameId(this, &_result))
        return _result
    }

    public func get_Timestamp() throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Timestamp(this, &_result))
        return _result
    }

    public func get_IsInContact() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInContact(this, &_result))
        return _result
    }

    public func get_Properties() throws -> WindowsUIInput_PointerPointProperties? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPointProperties>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Properties(this, &_result))
        return WindowsUIInput_PointerPointPropertiesBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Input.IPointerPointProperties

public func uuidof(_: SWRT_WindowsUIInput_IPointerPointProperties.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC79D8A4B, 0xC163, 0x4EE7, 0x803F, 0x67CE79F9972D)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIInput_IPointerPointProperties {
    public func get_Pressure() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Pressure(this, &_result))
        return _result
    }

    public func get_IsInverted() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInverted(this, &_result))
        return _result
    }

    public func get_IsEraser() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsEraser(this, &_result))
        return _result
    }

    public func get_Orientation() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Orientation(this, &_result))
        return _result
    }

    public func get_XTilt() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_XTilt(this, &_result))
        return _result
    }

    public func get_YTilt() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_YTilt(this, &_result))
        return _result
    }

    public func get_Twist() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Twist(this, &_result))
        return _result
    }

    public func get_ContactRect() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContactRect(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func get_ContactRectRaw() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ContactRectRaw(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func get_TouchConfidence() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_TouchConfidence(this, &_result))
        return _result
    }

    public func get_IsLeftButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsLeftButtonPressed(this, &_result))
        return _result
    }

    public func get_IsRightButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsRightButtonPressed(this, &_result))
        return _result
    }

    public func get_IsMiddleButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsMiddleButtonPressed(this, &_result))
        return _result
    }

    public func get_MouseWheelDelta() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_MouseWheelDelta(this, &_result))
        return _result
    }

    public func get_IsHorizontalMouseWheel() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsHorizontalMouseWheel(this, &_result))
        return _result
    }

    public func get_IsPrimary() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsPrimary(this, &_result))
        return _result
    }

    public func get_IsInRange() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsInRange(this, &_result))
        return _result
    }

    public func get_IsCanceled() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsCanceled(this, &_result))
        return _result
    }

    public func get_IsBarrelButtonPressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsBarrelButtonPressed(this, &_result))
        return _result
    }

    public func get_IsXButton1Pressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsXButton1Pressed(this, &_result))
        return _result
    }

    public func get_IsXButton2Pressed() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsXButton2Pressed(this, &_result))
        return _result
    }

    public func get_PointerUpdateKind() throws -> WindowsUIInput_PointerUpdateKind {
        var _result: SWRT_WindowsUIInput_PointerUpdateKind = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_PointerUpdateKind(this, &_result))
        return WindowsUIInput_PointerUpdateKind.fromABI(_result)
    }

    public func hasUsage(_ usagePage: Swift.UInt32, _ usageId: Swift.UInt32) throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.HasUsage(this, usagePage, usageId, &_result))
        return _result
    }

    public func getUsageValue(_ usagePage: Swift.UInt32, _ usageId: Swift.UInt32) throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUsageValue(this, usagePage, usageId, &_result))
        return _result
    }
}

// MARK: Windows.UI.Input.IPointerPointProperties2

public func uuidof(_: SWRT_WindowsUIInput_IPointerPointProperties2.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x22C3433A, 0xC83B, 0x41C0, 0xA296, 0x5E232D64D6AF)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIInput_IPointerPointProperties2 {
    public func get_ZDistance() throws -> Swift.Float? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_ZDistance(this, &_result))
        return WindowsRuntime.SingleBinding.IReferenceToOptional.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Input.IPointerPointStatics

public func uuidof(_: SWRT_WindowsUIInput_IPointerPointStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA506638D, 0x2A1A, 0x413E, 0xBC75, 0x9F38381CC069)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIInput_IPointerPointStatics {
    public func getCurrentPoint(_ pointerId: Swift.UInt32) throws -> WindowsUIInput_PointerPoint? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetCurrentPoint(this, pointerId, &_result))
        return WindowsUIInput_PointerPointBinding.fromABI(consuming: &_result)
    }

    public func getIntermediatePoints(_ pointerId: Swift.UInt32) throws -> WindowsFoundationCollections_IVector<WindowsUIInput_PointerPoint?>? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_WindowsUIInput_PointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetIntermediatePoints(this, pointerId, &_result))
        return WindowsFoundationCollections_IVectorBinding.PointerPoint.fromABI(consuming: &_result)
    }

    public func getCurrentPointTransformed(_ pointerId: Swift.UInt32, _ transform: WindowsUIInput_IPointerPointTransform?) throws -> WindowsUIInput_PointerPoint? {
        var transform_abi = try WindowsUIInput_IPointerPointTransformBinding.toABI(transform)
        defer { WindowsUIInput_IPointerPointTransformBinding.release(&transform_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetCurrentPointTransformed(this, pointerId, transform_abi, &_result))
        return WindowsUIInput_PointerPointBinding.fromABI(consuming: &_result)
    }

    public func getIntermediatePointsTransformed(_ pointerId: Swift.UInt32, _ transform: WindowsUIInput_IPointerPointTransform?) throws -> WindowsFoundationCollections_IVector<WindowsUIInput_PointerPoint?>? {
        var transform_abi = try WindowsUIInput_IPointerPointTransformBinding.toABI(transform)
        defer { WindowsUIInput_IPointerPointTransformBinding.release(&transform_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundationCollections_IVector_WindowsUIInput_PointerPoint>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetIntermediatePointsTransformed(this, pointerId, transform_abi, &_result))
        return WindowsFoundationCollections_IVectorBinding.PointerPoint.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.Input.IPointerPointTransform

public func uuidof(_: SWRT_WindowsUIInput_IPointerPointTransform.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4D5FE14F, 0xB87C, 0x4028, 0xBC9C, 0x59E9947FB056)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIInput_IPointerPointTransform {
    public func get_Inverse() throws -> WindowsUIInput_IPointerPointTransform? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsUIInput_IPointerPointTransform>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Inverse(this, &_result))
        return WindowsUIInput_IPointerPointTransformBinding.fromABI(consuming: &_result)
    }

    public func tryTransform(_ inPoint: WindowsFoundation_Point, _ outPoint: inout WindowsFoundation_Point) throws -> Swift.Bool {
        let inPoint_abi = WindowsFoundation_Point.toABI(inPoint)
        var outPoint_abi: SWRT_WindowsFoundation_Point = .init()
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TryTransform(this, inPoint_abi, &outPoint_abi, &_result))
        outPoint = WindowsFoundation_Point.fromABI(outPoint_abi)
        return _result
    }

    public func transformBounds(_ rect: WindowsFoundation_Rect) throws -> WindowsFoundation_Rect {
        let rect_abi = WindowsFoundation_Rect.toABI(rect)
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.TransformBounds(this, rect_abi, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }
}

// MARK: Windows.UI.Notifications.IShownTileNotification

public func uuidof(_: SWRT_WindowsUINotifications_IShownTileNotification.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x342D8988, 0x5AF2, 0x481A, 0xA6A3, 0xF2FDC78DE88E)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUINotifications_IShownTileNotification {
    public func get_Arguments() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Arguments(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}

// MARK: Windows.UI.ViewManagement.IActivationViewSwitcher

public func uuidof(_: SWRT_WindowsUIViewManagement_IActivationViewSwitcher.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDCA71BB6, 0x7350, 0x492B, 0xAAC7, 0xC8A13D7224AD)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsUIViewManagement_IActivationViewSwitcher {
    public func showAsStandaloneAsync(_ viewId: Swift.Int32) throws -> WindowsFoundation_IAsyncAction? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ShowAsStandaloneAsync(this, viewId, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func showAsStandaloneWithSizePreferenceAsync(_ viewId: Swift.Int32, _ sizePreference: WindowsUIViewManagement_ViewSizePreference) throws -> WindowsFoundation_IAsyncAction? {
        let sizePreference_abi = WindowsUIViewManagement_ViewSizePreference.toABI(sizePreference)
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IAsyncAction>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ShowAsStandaloneWithSizePreferenceAsync(this, viewId, sizePreference_abi, &_result))
        return WindowsFoundation_IAsyncActionBinding.fromABI(consuming: &_result)
    }

    public func isViewPresentedOnActivationVirtualDesktop(_ viewId: Swift.Int32) throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsViewPresentedOnActivationVirtualDesktop(this, viewId, &_result))
        return _result
    }
}