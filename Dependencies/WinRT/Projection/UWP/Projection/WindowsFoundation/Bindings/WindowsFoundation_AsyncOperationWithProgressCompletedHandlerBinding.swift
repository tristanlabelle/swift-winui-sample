// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

public enum WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding {
}

// MARK: Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer, UInt32>

extension WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding {
    internal enum IBuffer_UInt32: WindowsRuntime.DelegateBinding {
        public typealias SwiftObject = WindowsFoundation_AsyncOperationWithProgressCompletedHandler<WindowsStorageStreams_IBuffer?, Swift.UInt32>
        public typealias ABIStruct = SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_WindowsStorageStreams_IBuffer_UInt32

        public static let typeName = "Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer, UInt32>"

        public static var interfaceID: COM.COMInterfaceID {
            uuidof(ABIStruct.self)
        }

        public static var ireferenceID: COM.COMInterfaceID {
            COMInterfaceID(0x7FAEF9D2, 0x8EE6, 0x5019, 0x8C3F, 0x3EDC81EA1A96)
        }

        public static var ireferenceArrayID: COM.COMInterfaceID {
            COMInterfaceID(0x2B068B18, 0x6B44, 0x5B0B, 0x9455, 0xC1EDE92FFAF9)
        }

        public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
            Import(_wrapping: consume reference).invoke
        }

        public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
            ExportedDelegate<Self>(object).toCOM()
        }

        private final class Import: COMImport<IBuffer_UInt32> {
            public func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IBuffer?, Swift.UInt32>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
                try _interop.invoke(asyncInfo, asyncStatus)
            }
        }

        public static var virtualTablePointer: UnsafeRawPointer {
            .init(withUnsafePointer(to: &virtualTable) { $0 })
        }

        private static var virtualTable = SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_WindowsStorageStreams_IBuffer_UInt32_VirtualTable(
            QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
            AddRef: { IUnknownVirtualTable.AddRef($0) },
            Release: { IUnknownVirtualTable.Release($0) },
            Invoke: { this, asyncInfo, asyncStatus in _implement(this) { this in
                let asyncInfo_swift = WindowsFoundation_IAsyncOperationWithProgressBinding.IBuffer_UInt32.fromABI(asyncInfo)
                let asyncStatus_swift = WindowsFoundation_AsyncStatus.fromABI(asyncStatus)
                try this(asyncInfo_swift, asyncStatus_swift)
            } }
        )
    }
}

// MARK: Windows.Foundation.AsyncOperationWithProgressCompletedHandler<UInt32, UInt32>

extension WindowsFoundation_AsyncOperationWithProgressCompletedHandlerBinding {
    internal enum UInt32_UInt32: WindowsRuntime.DelegateBinding {
        public typealias SwiftObject = WindowsFoundation_AsyncOperationWithProgressCompletedHandler<Swift.UInt32, Swift.UInt32>
        public typealias ABIStruct = SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_UInt32_UInt32

        public static let typeName = "Windows.Foundation.AsyncOperationWithProgressCompletedHandler<UInt32, UInt32>"

        public static var interfaceID: COM.COMInterfaceID {
            uuidof(ABIStruct.self)
        }

        public static var ireferenceID: COM.COMInterfaceID {
            COMInterfaceID(0x25A5A66A, 0x7307, 0x52F4, 0x85F6, 0x0F572C7DA622)
        }

        public static var ireferenceArrayID: COM.COMInterfaceID {
            COMInterfaceID(0x95C5FB37, 0x7B96, 0x561C, 0x8C6C, 0xA6029895CC11)
        }

        public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
            Import(_wrapping: consume reference).invoke
        }

        public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
            ExportedDelegate<Self>(object).toCOM()
        }

        private final class Import: COMImport<UInt32_UInt32> {
            public func invoke(_ asyncInfo: WindowsFoundation_IAsyncOperationWithProgress<Swift.UInt32, Swift.UInt32>?, _ asyncStatus: WindowsFoundation_AsyncStatus) throws {
                try _interop.invoke(asyncInfo, asyncStatus)
            }
        }

        public static var virtualTablePointer: UnsafeRawPointer {
            .init(withUnsafePointer(to: &virtualTable) { $0 })
        }

        private static var virtualTable = SWRT_WindowsFoundation_AsyncOperationWithProgressCompletedHandler_UInt32_UInt32_VirtualTable(
            QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
            AddRef: { IUnknownVirtualTable.AddRef($0) },
            Release: { IUnknownVirtualTable.Release($0) },
            Invoke: { this, asyncInfo, asyncStatus in _implement(this) { this in
                let asyncInfo_swift = WindowsFoundation_IAsyncOperationWithProgressBinding.UInt32_UInt32.fromABI(asyncInfo)
                let asyncStatus_swift = WindowsFoundation_AsyncStatus.fromABI(asyncStatus)
                try this(asyncInfo_swift, asyncStatus_swift)
            } }
        )
    }
}