// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Provides random access of data in input and output streams for a file.
public final class WindowsStorageStreams_RandomAccessStreamReference: WindowsRuntime.WinRTImport<WindowsStorageStreams_RandomAccessStreamReferenceBinding>, WindowsStorageStreams_IRandomAccessStreamReferenceProtocol, @unchecked Sendable {
    // MARK: Windows.Storage.Streams.IRandomAccessStreamReference members

    /// Opens a stream for random access.
    /// - Returns: The asynchronous operation.
    public func openReadAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamWithContentType?> {
        try COM.NullResult.unwrap(_interop.openReadAsync())
    }

    /// Creates a random access stream around a file.
    /// - Parameter file: The file to create a stream around.
    /// - Returns: The stream that encapsulates *file*.
    public static func createFromFile(_ file: WindowsStorage_IStorageFile?) throws -> WindowsStorageStreams_RandomAccessStreamReference {
        try COM.NullResult.unwrap(_irandomAccessStreamReferenceStatics.createFromFile(file))
    }

    /// Creates a random access stream around the specified URI.
    /// - Parameter uri: The Uniform Resource Identifier (URI) to create the stream around. The valid Uniform Resource Identifier (URI) schemes are  http, https, ms-appx, and ms-appdata.
    /// - Returns: The random access stream that encapsulates *uri*.
    public static func createFromUri(_ uri: WindowsFoundation_Uri?) throws -> WindowsStorageStreams_RandomAccessStreamReference {
        try COM.NullResult.unwrap(_irandomAccessStreamReferenceStatics.createFromUri(uri))
    }

    /// Creates a random access stream around the specified stream.
    /// - Parameter stream: The source stream.
    /// - Returns: The random access stream that encapsulates *stream*.
    public static func createFromStream(_ stream: WindowsStorageStreams_IRandomAccessStream?) throws -> WindowsStorageStreams_RandomAccessStreamReference {
        try COM.NullResult.unwrap(_irandomAccessStreamReferenceStatics.createFromStream(stream))
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsStorageStreams_IRandomAccessStreamReference>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.Storage.Streams.RandomAccessStreamReference")
            }
        }
    }

    private static var _lazyIRandomAccessStreamReferenceStatics: COM.COMReference<SWRT_WindowsStorageStreams_IRandomAccessStreamReferenceStatics>.Optional = .none

    internal static var _irandomAccessStreamReferenceStatics: COM.COMInterop<SWRT_WindowsStorageStreams_IRandomAccessStreamReferenceStatics> {
        get throws {
            try _lazyIRandomAccessStreamReferenceStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WindowsStorageStreams_IRandomAccessStreamReferenceStatics.self)).cast()
            }
        }
    }
}