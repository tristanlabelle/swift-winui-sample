// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Contains info about the action that a target app completed during a paste operation.
public final class WindowsApplicationModelDataTransfer_OperationCompletedEventArgs: WindowsRuntime.WinRTImport<WindowsApplicationModelDataTransfer_OperationCompletedEventArgsBinding>, @unchecked Sendable {
    /// An enumeration that specifies what operation (such as copy or move) was completed. At most one operation flag can be set.
    public var operation: WindowsApplicationModelDataTransfer_DataPackageOperation {
        get throws {
            try _interop.get_Operation()
        }
    }

    /// Specifies the operation that the target app completed.
    public var operation_: WindowsApplicationModelDataTransfer_DataPackageOperation {
        try! self.operation
    }

    /// The accepted format Id.
    public var acceptedFormatId: Swift.String {
        get throws {
            try _ioperationCompletedEventArgs2.get_AcceptedFormatId()
        }
    }

    /// Gets the accepted format Id.
    public var acceptedFormatId_: Swift.String {
        try! self.acceptedFormatId
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs>) {
        super.init(_wrapping: consume inner)
    }

    private var _lazyIOperationCompletedEventArgs2: COM.COMReference<SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs2>.Optional = .none

    internal var _ioperationCompletedEventArgs2: COM.COMInterop<SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs2> {
        get throws {
            try _lazyIOperationCompletedEventArgs2.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsApplicationModelDataTransfer_IOperationCompletedEventArgs2.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs")
            }
        }
    }
}