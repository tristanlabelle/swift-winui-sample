// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Represents the key modifiers applied to a drag and drop operation. Zero or more modifiers can be included.
public struct WindowsApplicationModelDataTransferDragDrop_DragDropModifiers: CStyleEnum {
    public var rawValue: Swift.UInt32

    public init(rawValue: Swift.UInt32 = 0) {
        self.rawValue = rawValue
    }

    /// No modifiers.
    public static let none = Self()

    /// The shift key.
    public static let shift = Self(rawValue: 1)

    /// The control key.
    public static let control = Self(rawValue: 2)

    /// The alt key.
    public static let alt = Self(rawValue: 4)

    /// The left mouse button.
    public static let leftButton = Self(rawValue: 8)

    /// The middle mouse button.
    public static let middleButton = Self(rawValue: 16)

    /// The right mouse button.
    public static let rightButton = Self(rawValue: 32)
}

// MARK: OptionSet and bitwise operators

extension WindowsApplicationModelDataTransferDragDrop_DragDropModifiers: OptionSet {
    public static prefix func ~(value: Self) -> Self {
        Self(rawValue: ~value.rawValue)
    }

    public static func |(lhs: Self, rhs: Self) -> Self {
        Self(rawValue: lhs.rawValue | rhs.rawValue)
    }

    public static func |=(lhs: inout Self, rhs: Self) {
        lhs = Self(rawValue: lhs.rawValue | rhs.rawValue)
    }

    public static func &(lhs: Self, rhs: Self) -> Self {
        Self(rawValue: lhs.rawValue & rhs.rawValue)
    }

    public static func &=(lhs: inout Self, rhs: Self) {
        lhs = Self(rawValue: lhs.rawValue & rhs.rawValue)
    }

    public static func ^(lhs: Self, rhs: Self) -> Self {
        Self(rawValue: lhs.rawValue ^ rhs.rawValue)
    }

    public static func ^=(lhs: inout Self, rhs: Self) {
        lhs = Self(rawValue: lhs.rawValue ^ rhs.rawValue)
    }
}