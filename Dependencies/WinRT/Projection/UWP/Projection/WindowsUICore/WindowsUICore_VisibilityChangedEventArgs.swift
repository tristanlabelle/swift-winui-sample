// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Contains the arguments returned by the event fired when a CoreWindow instance's visibility changes.
public final class WindowsUICore_VisibilityChangedEventArgs: WindowsRuntime.WinRTImport<WindowsUICore_VisibilityChangedEventArgsBinding>, WindowsUICore_ICoreWindowEventArgsProtocol {
    /// True if the window is visible; otherwise, false.
    public var visible: Swift.Bool {
        get throws {
            try _interop.get_Visible()
        }
    }

    /// Gets whether the window is visible or not.
    public var visible_: Swift.Bool {
        try! self.visible
    }

    // MARK: Windows.UI.Core.ICoreWindowEventArgs members

    /// True if the event is handled; otherwise, false.
    public var handled: Swift.Bool {
        get throws {
            try _icoreWindowEventArgs.get_Handled()
        }
    }

    /// Sets a value indicating whether the VisibilityChanged event was handled.
    /// - Parameter newValue: True if the event is handled; otherwise, false.
    public func handled(_ value: Swift.Bool) throws {
        try _icoreWindowEventArgs.put_Handled(value)
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_WindowsUICore_IVisibilityChangedEventArgs>) {
        super.init(_wrapping: consume inner)
    }

    private var _lazyICoreWindowEventArgs: COM.COMReference<SWRT_WindowsUICore_ICoreWindowEventArgs>.Optional = .none

    internal var _icoreWindowEventArgs: COM.COMInterop<SWRT_WindowsUICore_ICoreWindowEventArgs> {
        get throws {
            try _lazyICoreWindowEventArgs.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsUICore_ICoreWindowEventArgs.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.UI.Core.VisibilityChangedEventArgs")
            }
        }
    }
}