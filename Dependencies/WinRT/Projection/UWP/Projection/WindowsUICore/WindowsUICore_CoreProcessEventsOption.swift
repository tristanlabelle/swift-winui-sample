// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI


/// Specifies the set of exclusive event-processing options passed to ProcessEvents.
public struct WindowsUICore_CoreProcessEventsOption: CStyleEnum {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// Dispatch all currently available events in the queue. If no events are pending, wait for the next new event.
    public static let processOneAndAllPending = Self()

    /// Dispatch one event if it is currently pending in the queue. If no events are pending, do not wait for a new event to be raised but instead return immediately.
    public static let processOneIfPresent = Self(rawValue: 1)

    /// Wait for new events and dispatch all available events. Continue this behavior until the window is closed or the application calls the Close method on the CoreWindow instance.
    public static let processUntilQuit = Self(rawValue: 2)

    /// Dispatch all events currently pending in the queue. If no events are pending, do not wait for a new event to be raised but instead return immediately. This option is provided specifically for view provider implementations with IFrameworkView, and to be used in UWP app using DirectX with C++.
    public static let processAllIfPresent = Self(rawValue: 3)
}