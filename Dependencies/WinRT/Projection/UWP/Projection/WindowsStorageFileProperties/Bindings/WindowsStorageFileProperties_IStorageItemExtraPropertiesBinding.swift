// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

public enum WindowsStorageFileProperties_IStorageItemExtraPropertiesBinding: WindowsRuntime.InterfaceBinding {
    public typealias SwiftObject = WindowsStorageFileProperties_IStorageItemExtraProperties
    public typealias ABIStruct = SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties

    public static let typeName = "Windows.Storage.FileProperties.IStorageItemExtraProperties"

    public static var interfaceID: COM.COMInterfaceID {
        uuidof(ABIStruct.self)
    }

    public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
        Import(_wrapping: consume reference)
    }

    private final class Import: WinRTImport<WindowsStorageFileProperties_IStorageItemExtraPropertiesBinding>, WindowsStorageFileProperties_IStorageItemExtraPropertiesProtocol {
        public func retrievePropertiesAsync(_ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?>?> {
            try COM.NullResult.unwrap(_interop.retrievePropertiesAsync(propertiesToRetrieve))
        }

        public func savePropertiesAsync(_ propertiesToSave: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?>?) throws -> WindowsFoundation_IAsyncAction {
            try COM.NullResult.unwrap(_interop.savePropertiesAsync(propertiesToSave))
        }

        public func savePropertiesAsync() throws -> WindowsFoundation_IAsyncAction {
            try COM.NullResult.unwrap(_interop.savePropertiesAsyncOverloadDefault())
        }
    }

    public static var virtualTablePointer: UnsafeRawPointer {
        .init(withUnsafePointer(to: &virtualTable) { $0 })
    }

    private static var virtualTable = SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties_VirtualTable(
        QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
        AddRef: { IUnknownVirtualTable.AddRef($0) },
        Release: { IUnknownVirtualTable.Release($0) },
        GetIids: { IInspectableVirtualTable.GetIids($0, $1, $2) },
        GetRuntimeClassName: { IInspectableVirtualTable.GetRuntimeClassName($0, $1) },
        GetTrustLevel: { IInspectableVirtualTable.GetTrustLevel($0, $1) },
        RetrievePropertiesAsync: { this, propertiesToRetrieve, _result in _implement(this) { this in
            guard let _result else { throw COM.COMError.pointer }
            let propertiesToRetrieve_swift = WindowsFoundationCollections_IIterableBinding.String.fromABI(propertiesToRetrieve)
            let _result_swift = try COM.NullResult.`catch`(try this.retrievePropertiesAsync(propertiesToRetrieve_swift))
            _result.pointee = try WindowsFoundation_IAsyncOperationBinding.IMap_String_Object.toABI(_result_swift)
        } },
        SavePropertiesAsync: { this, propertiesToSave, _result in _implement(this) { this in
            guard let _result else { throw COM.COMError.pointer }
            let propertiesToSave_swift = WindowsFoundationCollections_IIterableBinding.IKeyValuePair_String_Object.fromABI(propertiesToSave)
            let _result_swift = try COM.NullResult.`catch`(try this.savePropertiesAsync(propertiesToSave_swift))
            _result.pointee = try WindowsFoundation_IAsyncActionBinding.toABI(_result_swift)
        } },
        SavePropertiesAsyncOverloadDefault: { this, _result in _implement(this) { this in
            guard let _result else { throw COM.COMError.pointer }
            let _result_swift = try COM.NullResult.`catch`(try this.savePropertiesAsync())
            _result.pointee = try WindowsFoundation_IAsyncActionBinding.toABI(_result_swift)
        } }
    )
}