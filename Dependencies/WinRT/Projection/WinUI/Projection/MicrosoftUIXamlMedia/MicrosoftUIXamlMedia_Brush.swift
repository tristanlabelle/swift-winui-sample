// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Defines objects used to paint graphical objects. Classes that derive from Brush describe how the area is painted.
open class MicrosoftUIXamlMedia_Brush: MicrosoftUIXaml_DependencyObject, MicrosoftUIComposition_IAnimationObjectProtocol, @unchecked Sendable {
    /// Provides base class initialization behavior for Brush-derived classes.
    public override init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXamlMedia_Brush.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._ibrushFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// The value of the Opacity property is expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.
    public var opacity: Swift.Double {
        get throws {
            try _ibrush.get_Opacity()
        }
    }

    /// Sets the degree of opacity of a Brush.
    /// - Parameter newValue: The value of the Opacity property is expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.
    public func opacity(_ value: Swift.Double) throws {
        try _ibrush.put_Opacity(value)
    }

    /// Gets or sets the degree of opacity of a Brush.
    public var opacity_: Swift.Double {
        get {
            try! self.opacity
        }
        set {
            try! self.opacity(newValue)
        }
    }

    /// The transformation that is applied to the brush using relative coordinates. The default value is null.
    public var relativeTransform: MicrosoftUIXamlMedia_Transform {
        get throws {
            try COM.NullResult.unwrap(_ibrush.get_RelativeTransform())
        }
    }

    /// Sets the transformation that is applied to the brush using relative coordinates.
    /// - Parameter newValue: The transformation that is applied to the brush using relative coordinates. The default value is null.
    public func relativeTransform(_ value: MicrosoftUIXamlMedia_Transform?) throws {
        try _ibrush.put_RelativeTransform(value)
    }

    /// Gets or sets the transformation that is applied to the brush using relative coordinates.
    public var relativeTransform_: MicrosoftUIXamlMedia_Transform! {
        get {
            try! NullResult.catch(self.relativeTransform)
        }
        set {
            try! self.relativeTransform(newValue)
        }
    }

    /// The transformation to apply to the brush.
    public var transform: MicrosoftUIXamlMedia_Transform {
        get throws {
            try COM.NullResult.unwrap(_ibrush.get_Transform())
        }
    }

    /// Sets the transformation that is applied to the brush.
    /// - Parameter newValue: The transformation to apply to the brush.
    public func transform(_ value: MicrosoftUIXamlMedia_Transform?) throws {
        try _ibrush.put_Transform(value)
    }

    /// Gets or sets the transformation that is applied to the brush.
    public var transform_: MicrosoftUIXamlMedia_Transform! {
        get {
            try! NullResult.catch(self.transform)
        }
        set {
            try! self.transform(newValue)
        }
    }

    /// When overridden in a derived class, defines a property that can be animated.
    /// - Parameter propertyName: The property that can be animated.
    /// - Parameter animationPropertyInfo: Information about the property to be animated.
    open func populatePropertyInfoOverride(_ propertyName: Swift.String, _ animationPropertyInfo: MicrosoftUIComposition_AnimationPropertyInfo?) throws {
        try _ibrushOverrides.populatePropertyInfoOverride(propertyName, animationPropertyInfo)
    }

    // MARK: Microsoft.UI.Composition.IAnimationObject members

    /// Defines a property that can be animated.
    /// - Parameter propertyName: The property that can be animated.
    /// - Parameter propertyInfo: Information about the property to be animated.
    public func populatePropertyInfo(_ propertyName: Swift.String, _ propertyInfo: MicrosoftUIComposition_AnimationPropertyInfo?) throws {
        try _ianimationObject.populatePropertyInfo(propertyName, propertyInfo)
    }

    /// The Opacity dependency property identifier.
    public static var opacityProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibrushStatics.get_OpacityProperty())
        }
    }

    /// Identifies the Opacity dependency property.
    public static var opacityProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.opacityProperty)
    }

    /// The RelativeTransform dependency property identifier.
    public static var relativeTransformProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibrushStatics.get_RelativeTransformProperty())
        }
    }

    /// Identifies the RelativeTransform dependency property.
    public static var relativeTransformProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.relativeTransformProperty)
    }

    /// The Transform dependency property identifier.
    public static var transformProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibrushStatics.get_TransformProperty())
        }
    }

    /// Identifies the Transform dependency property.
    public static var transformProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.transformProperty)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlMedia_IBrush>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIBrush: COM.COMReference<SWRT_MicrosoftUIXamlMedia_IBrush>.Optional = .none

    internal var _ibrush: COM.COMInterop<SWRT_MicrosoftUIXamlMedia_IBrush> {
        get throws {
            try _lazyIBrush.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlMedia_IBrush.self)).cast()
            }
        }
    }

    private var _lazyIBrushOverrides: COM.COMReference<SWRT_MicrosoftUIXamlMedia_IBrushOverrides>.Optional = .none

    internal var _ibrushOverrides: COM.COMInterop<SWRT_MicrosoftUIXamlMedia_IBrushOverrides> {
        get throws {
            try _lazyIBrushOverrides.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlMedia_IBrushOverrides.self)).cast()
            }
        }
    }

    private var _lazyIAnimationObject: COM.COMReference<SWRT_MicrosoftUIComposition_IAnimationObject>.Optional = .none

    internal var _ianimationObject: COM.COMInterop<SWRT_MicrosoftUIComposition_IAnimationObject> {
        get throws {
            try _lazyIAnimationObject.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIComposition_IAnimationObject.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Media.Brush")
            }
        }
    }

    private static var _lazyIBrushFactory: COM.COMReference<SWRT_MicrosoftUIXamlMedia_IBrushFactory>.Optional = .none

    internal static var _ibrushFactory: COM.COMInterop<SWRT_MicrosoftUIXamlMedia_IBrushFactory> {
        get throws {
            try _lazyIBrushFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlMedia_IBrushFactory.self)).cast()
            }
        }
    }

    private static var _lazyIBrushStatics: COM.COMReference<SWRT_MicrosoftUIXamlMedia_IBrushStatics>.Optional = .none

    internal static var _ibrushStatics: COM.COMInterop<SWRT_MicrosoftUIXamlMedia_IBrushStatics> {
        get throws {
            try _lazyIBrushStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlMedia_IBrushStatics.self)).cast()
            }
        }
    }

    // MARK: Override support

    private var _ibrushOverrides_outer: COM.COMEmbedding = .uninitialized

    public override func _queryOverridesInterface(_ id: COM.COMInterfaceID) throws -> COM.IUnknownReference.Optional {
        if id == uuidof(SWRT_MicrosoftUIXamlMedia_IBrushOverrides.self) {
            if !_ibrushOverrides_outer.isInitialized {
                _ibrushOverrides_outer.initialize(embedder: self,
                    virtualTable: &MicrosoftUIXamlMedia_BrushBinding.VirtualTables.ibrushOverrides)
            }
            return .init(_ibrushOverrides_outer.toCOM())
        }
        return .none
    }
}