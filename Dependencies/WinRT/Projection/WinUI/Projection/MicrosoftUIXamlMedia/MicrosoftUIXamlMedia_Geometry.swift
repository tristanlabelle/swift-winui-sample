// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Provides a base class for objects that define geometric shapes. Geometry objects can be used for clipping regions and as geometry definitions for rendering two-dimensional graphical data as a Path.
open class MicrosoftUIXamlMedia_Geometry: MicrosoftUIXaml_DependencyObject, @unchecked Sendable {
    /// The axis-aligned bounding box of the Geometry.
    public var bounds: WindowsFoundation_Rect {
        get throws {
            try _igeometry.get_Bounds()
        }
    }

    /// Gets a Rect that specifies the axis-aligned bounding box of the Geometry.
    public var bounds_: WindowsFoundation_Rect {
        try! self.bounds
    }

    /// The transformation applied to the Geometry. Note that this value may be a single Transform or a list of Transform items.
    public var transform: MicrosoftUIXamlMedia_Transform {
        get throws {
            try COM.NullResult.unwrap(_igeometry.get_Transform())
        }
    }

    /// Sets the Transform object applied to a Geometry.
    /// - Parameter newValue: The transformation applied to the Geometry. Note that this value may be a single Transform or a list of Transform items.
    public func transform(_ value: MicrosoftUIXamlMedia_Transform?) throws {
        try _igeometry.put_Transform(value)
    }

    /// Gets or sets the Transform object applied to a Geometry.
    public var transform_: MicrosoftUIXamlMedia_Transform! {
        get {
            try! NullResult.catch(self.transform)
        }
        set {
            try! self.transform(newValue)
        }
    }

    /// The empty geometry object.
    public static var empty: MicrosoftUIXamlMedia_Geometry {
        get throws {
            try COM.NullResult.unwrap(_igeometryStatics.get_Empty())
        }
    }

    /// Gets an empty geometry object.
    public static var empty_: MicrosoftUIXamlMedia_Geometry! {
        try! NullResult.catch(Self.empty)
    }

    /// The standard tolerance. The default value is 0.25.
    public static var standardFlatteningTolerance: Swift.Double {
        get throws {
            try _igeometryStatics.get_StandardFlatteningTolerance()
        }
    }

    /// Gets the standard tolerance used for polygonal approximation.
    public static var standardFlatteningTolerance_: Swift.Double {
        try! Self.standardFlatteningTolerance
    }

    /// The identifier for the Transform dependency property.
    public static var transformProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_igeometryStatics.get_TransformProperty())
        }
    }

    /// Identifies the Transform dependency property.
    public static var transformProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.transformProperty)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlMedia_IGeometry>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIGeometry: COM.COMReference<SWRT_MicrosoftUIXamlMedia_IGeometry>.Optional = .none

    internal var _igeometry: COM.COMInterop<SWRT_MicrosoftUIXamlMedia_IGeometry> {
        get throws {
            try _lazyIGeometry.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlMedia_IGeometry.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Media.Geometry")
            }
        }
    }

    private static var _lazyIGeometryFactory: COM.COMReference<SWRT_MicrosoftUIXamlMedia_IGeometryFactory>.Optional = .none

    internal static var _igeometryFactory: COM.COMInterop<SWRT_MicrosoftUIXamlMedia_IGeometryFactory> {
        get throws {
            try _lazyIGeometryFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlMedia_IGeometryFactory.self)).cast()
            }
        }
    }

    private static var _lazyIGeometryStatics: COM.COMReference<SWRT_MicrosoftUIXamlMedia_IGeometryStatics>.Optional = .none

    internal static var _igeometryStatics: COM.COMInterop<SWRT_MicrosoftUIXamlMedia_IGeometryStatics> {
        get throws {
            try _lazyIGeometryStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlMedia_IGeometryStatics.self)).cast()
            }
        }
    }
}