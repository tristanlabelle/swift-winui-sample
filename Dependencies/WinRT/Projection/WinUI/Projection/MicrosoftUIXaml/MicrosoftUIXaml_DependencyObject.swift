// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Represents an object that participates in the dependency property system.
open class MicrosoftUIXaml_DependencyObject: WindowsRuntime.ComposableClass, @unchecked Sendable {
    /// Provides base class initialization behavior for DependencyObject derived classes.
    public init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXaml_DependencyObject.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._idependencyObjectFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// Returns the current effective value of a dependency property from a DependencyObject.
    /// - Parameter dp: The DependencyProperty identifier of the property for which to retrieve the value.
    /// - Returns: Returns the current effective value.
    public func getValue(_ dp: MicrosoftUIXaml_DependencyProperty?) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_idependencyObject.getValue(dp))
    }

    /// Sets the local value of a dependency property on a DependencyObject.
    /// - Parameter dp: The identifier of the dependency property to set.
    /// - Parameter value: The new local value.
    public func setValue(_ dp: MicrosoftUIXaml_DependencyProperty?, _ value: WindowsRuntime.IInspectable?) throws {
        try _idependencyObject.setValue(dp, value)
    }

    /// Clears the local value of a dependency property.
    /// - Parameter dp: The DependencyProperty identifier of the property for which to clear the value.
    public func clearValue(_ dp: MicrosoftUIXaml_DependencyProperty?) throws {
        try _idependencyObject.clearValue(dp)
    }

    /// Returns the local value of a dependency property, if a local value is set.
    /// - Parameter dp: The DependencyProperty identifier of the property for which to retrieve the local value.
    /// - Returns: Returns the local value, or returns the sentinel value UnsetValue if no local value is set.
    public func readLocalValue(_ dp: MicrosoftUIXaml_DependencyProperty?) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_idependencyObject.readLocalValue(dp))
    }

    /// Returns any base value established for a dependency property, which would apply in cases where an animation is not active.
    /// - Parameter dp: The identifier for the desired dependency property.
    /// - Returns: The returned base value.
    public func getAnimationBaseValue(_ dp: MicrosoftUIXaml_DependencyProperty?) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_idependencyObject.getAnimationBaseValue(dp))
    }

    /// Registers a notification function for listening to changes to a specific DependencyProperty on this DependencyObject instance.
    /// - Parameter dp: The dependency property identifier of the property to register for property-changed notification.
    /// - Parameter callback: A callback based on the DependencyPropertyChangedCallback delegate, which the system invokes when the value of the specified property changes.
    /// - Returns: A token that represents the callback, used to identify the callback in calls to UnregisterPropertyChangedCallback.
    public func registerPropertyChangedCallback(_ dp: MicrosoftUIXaml_DependencyProperty?, _ callback: MicrosoftUIXaml_DependencyPropertyChangedCallback?) throws -> Swift.Int64 {
        try _idependencyObject.registerPropertyChangedCallback(dp, callback)
    }

    /// Cancels a change notification that was previously registered by calling RegisterPropertyChangedCallback.
    /// - Parameter dp: The dependency property identifier of the property to unregister for property-changed notification.
    /// - Parameter token: A token that represents the callback (returned by RegisterPropertyChangedCallback).
    public func unregisterPropertyChangedCallback(_ dp: MicrosoftUIXaml_DependencyProperty?, _ token: Swift.Int64) throws {
        try _idependencyObject.unregisterPropertyChangedCallback(dp, token)
    }

    /// Always null in a Windows App SDK app. Use DispatcherQueue instead.
    public var dispatcher: WindowsUICore_CoreDispatcher {
        get throws {
            try COM.NullResult.unwrap(_idependencyObject.get_Dispatcher())
        }
    }

    /// Always returns null in a Windows App SDK app. Use DispatcherQueue instead.
    public var dispatcher_: WindowsUICore_CoreDispatcher! {
        try! NullResult.catch(self.dispatcher)
    }

    /// Gets the DispatcherQueue that this object is associated with. The DispatcherQueue represents a facility that can access the DependencyObject on the UI thread even if the code is initiated by a non-UI thread.
    public var dispatcherQueue: MicrosoftUIDispatching_DispatcherQueue {
        get throws {
            try COM.NullResult.unwrap(_idependencyObject.get_DispatcherQueue())
        }
    }

    /// Gets the DispatcherQueue that this object is associated with. The DispatcherQueue represents a facility that can access the DependencyObject on the UI thread even if the code is initiated by a non-UI thread.
    public var dispatcherQueue_: MicrosoftUIDispatching_DispatcherQueue! {
        try! NullResult.catch(self.dispatcherQueue)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXaml_IDependencyObject>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIDependencyObject: COM.COMReference<SWRT_MicrosoftUIXaml_IDependencyObject>.Optional = .none

    internal var _idependencyObject: COM.COMInterop<SWRT_MicrosoftUIXaml_IDependencyObject> {
        get throws {
            try _lazyIDependencyObject.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXaml_IDependencyObject.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.DependencyObject")
            }
        }
    }

    private static var _lazyIDependencyObjectFactory: COM.COMReference<SWRT_MicrosoftUIXaml_IDependencyObjectFactory>.Optional = .none

    internal static var _idependencyObjectFactory: COM.COMInterop<SWRT_MicrosoftUIXaml_IDependencyObjectFactory> {
        get throws {
            try _lazyIDependencyObjectFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXaml_IDependencyObjectFactory.self)).cast()
            }
        }
    }
}