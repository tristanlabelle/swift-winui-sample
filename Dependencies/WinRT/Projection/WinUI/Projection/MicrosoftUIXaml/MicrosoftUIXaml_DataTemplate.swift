// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Describes the visual structure of a data object. Use data binding for specific elements in the template that display the data values.
open class MicrosoftUIXaml_DataTemplate: MicrosoftUIXaml_FrameworkTemplate, MicrosoftUIXaml_IElementFactoryProtocol, @unchecked Sendable {
    /// Initializes a new instance of the DataTemplate class.
    public override init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXaml_DataTemplate.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._idataTemplateFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// Creates the UIElement objects in the DataTemplate.
    /// - Returns: The root UIElement of the DataTemplate.
    public func loadContent() throws -> MicrosoftUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_idataTemplate.loadContent())
    }

    // MARK: Microsoft.UI.Xaml.IElementFactory members

    /// Creates or retrieves an existing instance of the UIElement object declared in the DataTemplate.
    /// - Parameter args: An instance of ElementFactoryGetArgs.
    /// - Returns: An instance of the root UIElement declared in the DataTemplate or null if the root of the DataTemplate is not a UIElement.
    public func getElement(_ args: MicrosoftUIXaml_ElementFactoryGetArgs?) throws -> MicrosoftUIXaml_UIElement {
        try COM.NullResult.unwrap(_ielementFactory.getElement(args))
    }

    /// Recycles a UIElement that was previously retrieved using GetElement.
    /// - Parameter args: An instance of ElementFactoryRecycleArgs.
    public func recycleElement(_ args: MicrosoftUIXaml_ElementFactoryRecycleArgs?) throws {
        try _ielementFactory.recycleElement(args)
    }

    /// Gets the value of the DataTemplate.ExtensionInstance XAML attached property for the target element.
    /// - Parameter element: The object from which the property value is read.
    /// - Returns: The DataTemplate.ExtensionInstance XAML attached property value of the specified object.
    public static func getExtensionInstance(_ element: MicrosoftUIXaml_FrameworkElement?) throws -> MicrosoftUIXaml_IDataTemplateExtension {
        try COM.NullResult.unwrap(_idataTemplateStatics.getExtensionInstance(element))
    }

    /// Sets the value of the DataTemplate.ExtensionInstance XAML attached property for a target element.
    /// - Parameter element: The object to which the property value is written.
    /// - Parameter value: The value to set.
    public static func setExtensionInstance(_ element: MicrosoftUIXaml_FrameworkElement?, _ value: MicrosoftUIXaml_IDataTemplateExtension?) throws {
        try _idataTemplateStatics.setExtensionInstance(element, value)
    }

    /// The identifier for the ExtensionInstance XAML attached property.
    public static var extensionInstanceProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idataTemplateStatics.get_ExtensionInstanceProperty())
        }
    }

    /// Identifies the ExtensionInstance XAML attached property.
    public static var extensionInstanceProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.extensionInstanceProperty)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXaml_IDataTemplate>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIDataTemplate: COM.COMReference<SWRT_MicrosoftUIXaml_IDataTemplate>.Optional = .none

    internal var _idataTemplate: COM.COMInterop<SWRT_MicrosoftUIXaml_IDataTemplate> {
        get throws {
            try _lazyIDataTemplate.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXaml_IDataTemplate.self)).cast()
            }
        }
    }

    private var _lazyIElementFactory: COM.COMReference<SWRT_MicrosoftUIXaml_IElementFactory>.Optional = .none

    internal var _ielementFactory: COM.COMInterop<SWRT_MicrosoftUIXaml_IElementFactory> {
        get throws {
            try _lazyIElementFactory.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXaml_IElementFactory.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.DataTemplate")
            }
        }
    }

    private static var _lazyIDataTemplateFactory: COM.COMReference<SWRT_MicrosoftUIXaml_IDataTemplateFactory>.Optional = .none

    internal static var _idataTemplateFactory: COM.COMInterop<SWRT_MicrosoftUIXaml_IDataTemplateFactory> {
        get throws {
            try _lazyIDataTemplateFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXaml_IDataTemplateFactory.self)).cast()
            }
        }
    }

    private static var _lazyIDataTemplateStatics: COM.COMReference<SWRT_MicrosoftUIXaml_IDataTemplateStatics>.Optional = .none

    internal static var _idataTemplateStatics: COM.COMInterop<SWRT_MicrosoftUIXaml_IDataTemplateStatics> {
        get throws {
            try _lazyIDataTemplateStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXaml_IDataTemplateStatics.self)).cast()
            }
        }
    }
}