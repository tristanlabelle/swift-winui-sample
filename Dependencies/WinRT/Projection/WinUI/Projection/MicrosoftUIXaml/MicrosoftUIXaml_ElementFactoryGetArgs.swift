// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Represents the optional arguments to use when calling an implementation of the IElementFactory's GetElement method.
open class MicrosoftUIXaml_ElementFactoryGetArgs: WindowsRuntime.ComposableClass, @unchecked Sendable {
    /// Initializes a new instance of the ElementFactoryGetArgs class.
    public init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXaml_ElementFactoryGetArgs.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._ielementFactoryGetArgsFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// A reference to the data item for which a UIElement should be realized.
    public var data: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_ielementFactoryGetArgs.get_Data())
        }
    }

    /// Sets the data item for which an appropriate element tree should be realized when calling GetElement.
    /// - Parameter newValue: A reference to the data item for which a UIElement should be realized.
    public func data(_ value: WindowsRuntime.IInspectable?) throws {
        try _ielementFactoryGetArgs.put_Data(value)
    }

    /// Gets or sets the data item for which an appropriate element tree should be realized when calling GetElement.
    public var data_: WindowsRuntime.IInspectable! {
        get {
            try! NullResult.catch(self.data)
        }
        set {
            try! self.data(newValue)
        }
    }

    /// The UIElement object expected to be the parent of the realized UIElement or null.  By default, it is null.
    public var parent: MicrosoftUIXaml_UIElement {
        get throws {
            try COM.NullResult.unwrap(_ielementFactoryGetArgs.get_Parent())
        }
    }

    /// Sets the UIElement that is expected to be the parent of the realized element from GetElement.
    /// - Parameter newValue: The UIElement object expected to be the parent of the realized UIElement or null.  By default, it is null.
    public func parent(_ value: MicrosoftUIXaml_UIElement?) throws {
        try _ielementFactoryGetArgs.put_Parent(value)
    }

    /// Gets or sets the UIElement that is expected to be the parent of the realized element from GetElement.
    public var parent_: MicrosoftUIXaml_UIElement! {
        get {
            try! NullResult.catch(self.parent)
        }
        set {
            try! self.parent(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXaml_IElementFactoryGetArgs>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIElementFactoryGetArgs: COM.COMReference<SWRT_MicrosoftUIXaml_IElementFactoryGetArgs>.Optional = .none

    internal var _ielementFactoryGetArgs: COM.COMInterop<SWRT_MicrosoftUIXaml_IElementFactoryGetArgs> {
        get throws {
            try _lazyIElementFactoryGetArgs.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXaml_IElementFactoryGetArgs.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.ElementFactoryGetArgs")
            }
        }
    }

    private static var _lazyIElementFactoryGetArgsFactory: COM.COMReference<SWRT_MicrosoftUIXaml_IElementFactoryGetArgsFactory>.Optional = .none

    internal static var _ielementFactoryGetArgsFactory: COM.COMInterop<SWRT_MicrosoftUIXaml_IElementFactoryGetArgsFactory> {
        get throws {
            try _lazyIElementFactoryGetArgsFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXaml_IElementFactoryGetArgsFactory.self)).cast()
            }
        }
    }
}