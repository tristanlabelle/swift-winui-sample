// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Represents the options that can be applied when an element is brought into view.
public final class MicrosoftUIXaml_BringIntoViewOptions: WindowsRuntime.WinRTImport<MicrosoftUIXaml_BringIntoViewOptionsBinding>, @unchecked Sendable {
    /// Initializes a new instance of the BringIntoViewOptions class.
    public init() throws {
        let _instance = COM.COMReference(transferringRef: try Self._iactivationFactory.activateInstance(binding: MicrosoftUIXaml_BringIntoViewOptionsBinding.self))
        super.init(_wrapping: consume _instance)
    }

    /// true to use animation; otherwise, false. The default is true.
    public var animationDesired: Swift.Bool {
        get throws {
            try _interop.get_AnimationDesired()
        }
    }

    /// Sets a value that indicates whether to use animation when the element is brought into view.
    /// - Parameter newValue: true to use animation; otherwise, false. The default is true.
    public func animationDesired(_ value: Swift.Bool) throws {
        try _interop.put_AnimationDesired(value)
    }

    /// Gets or sets a value that indicates whether to use animation when the element is brought into view.
    public var animationDesired_: Swift.Bool {
        get {
            try! self.animationDesired
        }
        set {
            try! self.animationDesired(newValue)
        }
    }

    /// A value that specifies the positioning of the vertical axis of the TargetRect with respect to the vertical axis of the viewport. The default is 0.0f.
    public var horizontalAlignmentRatio: Swift.Double {
        get throws {
            try _interop.get_HorizontalAlignmentRatio()
        }
    }

    /// Controls the positioning of the vertical axis of the TargetRect with respect to the vertical axis of the viewport. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge. By default this is set to 0.0f.
    /// - Parameter newValue: A value that specifies the positioning of the vertical axis of the TargetRect with respect to the vertical axis of the viewport. The default is 0.0f.
    public func horizontalAlignmentRatio(_ value: Swift.Double) throws {
        try _interop.put_HorizontalAlignmentRatio(value)
    }

    /// Controls the positioning of the vertical axis of the TargetRect with respect to the vertical axis of the viewport. The value is clamped from 0.0f to 1.0f with 0.0f representing the left vertical edge and 1.0f representing the right vertical edge. By default this is set to 0.0f.
    public var horizontalAlignmentRatio_: Swift.Double {
        get {
            try! self.horizontalAlignmentRatio
        }
        set {
            try! self.horizontalAlignmentRatio(newValue)
        }
    }

    /// The horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.
    public var horizontalOffset: Swift.Double {
        get throws {
            try _interop.get_HorizontalOffset()
        }
    }

    /// Sets the horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.
    /// - Parameter newValue: The horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.
    public func horizontalOffset(_ value: Swift.Double) throws {
        try _interop.put_HorizontalOffset(value)
    }

    /// Gets or sets the horizontal distance to add to the viewport-relative position of the TargetRect after satisfying the requested HorizontalAlignmentRatio.
    public var horizontalOffset_: Swift.Double {
        get {
            try! self.horizontalOffset
        }
        set {
            try! self.horizontalOffset(newValue)
        }
    }

    /// A rectangle that defines the area of an element to bring into view.
    public var targetRect: WindowsFoundation_Rect? {
        get throws {
            try _interop.get_TargetRect()
        }
    }

    /// Sets the area of an element to bring into view.
    /// - Parameter newValue: A rectangle that defines the area of an element to bring into view.
    public func targetRect(_ value: WindowsFoundation_Rect?) throws {
        try _interop.put_TargetRect(value)
    }

    /// Gets or sets the area of an element to bring into view.
    public var targetRect_: WindowsFoundation_Rect? {
        get {
            try! self.targetRect
        }
        set {
            try! self.targetRect(newValue)
        }
    }

    /// A value that specifies the positioning of the horizontal axis of the TargetRect with respect to the horizontal axis of the viewport. The default is 0.0f.
    public var verticalAlignmentRatio: Swift.Double {
        get throws {
            try _interop.get_VerticalAlignmentRatio()
        }
    }

    /// Controls the positioning of the horizontal axis of the TargetRect with respect to the horizontal axis of the viewport. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge. By default this is set to 0.0f.
    /// - Parameter newValue: A value that specifies the positioning of the horizontal axis of the TargetRect with respect to the horizontal axis of the viewport. The default is 0.0f.
    public func verticalAlignmentRatio(_ value: Swift.Double) throws {
        try _interop.put_VerticalAlignmentRatio(value)
    }

    /// Controls the positioning of the horizontal axis of the TargetRect with respect to the horizontal axis of the viewport. The value is clamped from 0.0f to 1.0f with 0.0f representing the top horizontal edge and 1.0f representing the bottom horizontal edge. By default this is set to 0.0f.
    public var verticalAlignmentRatio_: Swift.Double {
        get {
            try! self.verticalAlignmentRatio
        }
        set {
            try! self.verticalAlignmentRatio(newValue)
        }
    }

    /// The vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.
    public var verticalOffset: Swift.Double {
        get throws {
            try _interop.get_VerticalOffset()
        }
    }

    /// Sets the vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.
    /// - Parameter newValue: The vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.
    public func verticalOffset(_ value: Swift.Double) throws {
        try _interop.put_VerticalOffset(value)
    }

    /// Gets or sets the vertical distance to add to the viewport-relative position of the TargetRect after satisfying the requested VerticalAlignmentRatio.
    public var verticalOffset_: Swift.Double {
        get {
            try! self.verticalOffset
        }
        set {
            try! self.verticalOffset(newValue)
        }
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXaml_IBringIntoViewOptions>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.BringIntoViewOptions")
            }
        }
    }
}