// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK

public enum MicrosoftUIXaml_PropertyChangedCallbackBinding: WindowsRuntime.DelegateBinding {
    public typealias SwiftObject = MicrosoftUIXaml_PropertyChangedCallback
    public typealias ABIStruct = SWRT_MicrosoftUIXaml_PropertyChangedCallback

    public static let typeName = "Microsoft.UI.Xaml.IPropertyChangedCallback"

    public static var interfaceID: COM.COMInterfaceID {
        uuidof(ABIStruct.self)
    }

    public static var ireferenceID: COM.COMInterfaceID {
        COMInterfaceID(0xD877F94B, 0x32E6, 0x51C7, 0xB5EE, 0xDA9587D9630B)
    }

    public static var ireferenceArrayID: COM.COMInterfaceID {
        COMInterfaceID(0x9A040547, 0x3994, 0x53C4, 0x8971, 0xD0F8BDE5D790)
    }

    public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
        Import(_wrapping: consume reference).invoke
    }

    public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
        ExportedDelegate<Self>(object).toCOM()
    }

    private final class Import: COMImport<MicrosoftUIXaml_PropertyChangedCallbackBinding> {
        public func invoke(_ d: MicrosoftUIXaml_DependencyObject?, _ e: MicrosoftUIXaml_DependencyPropertyChangedEventArgs?) throws {
            try _interop.invoke(d, e)
        }
    }

    public static var virtualTablePointer: UnsafeRawPointer {
        .init(withUnsafePointer(to: &virtualTable) { $0 })
    }

    private static var virtualTable = SWRT_MicrosoftUIXaml_PropertyChangedCallback_VirtualTable(
        QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
        AddRef: { IUnknownVirtualTable.AddRef($0) },
        Release: { IUnknownVirtualTable.Release($0) },
        Invoke: { this, d, e in _implement(this) { this in
            let d_swift = MicrosoftUIXaml_DependencyObjectBinding.fromABI(d)
            let e_swift = MicrosoftUIXaml_DependencyPropertyChangedEventArgsBinding.fromABI(e)
            try this(d_swift, e_swift)
        } }
    )
}