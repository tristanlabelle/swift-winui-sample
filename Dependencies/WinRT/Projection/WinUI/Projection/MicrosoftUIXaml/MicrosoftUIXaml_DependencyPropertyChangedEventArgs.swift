// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Provides data for a PropertyChangedCallback implementation that is invoked when a dependency property changes its value. Also provides event data for the Control.IsEnabledChanged event and any other event that uses the DependencyPropertyChangedEventHandler delegate.
public final class MicrosoftUIXaml_DependencyPropertyChangedEventArgs: WindowsRuntime.WinRTImport<MicrosoftUIXaml_DependencyPropertyChangedEventArgsBinding>, @unchecked Sendable {
    /// The dependency property value after the change.
    public var newValue: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_NewValue())
        }
    }

    /// Gets the value of the dependency property after the reported change.
    public var newValue_: WindowsRuntime.IInspectable! {
        try! NullResult.catch(self.newValue)
    }

    /// The dependency property value before the change.
    public var oldValue: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_OldValue())
        }
    }

    /// Gets the value of the dependency property before the reported change.
    public var oldValue_: WindowsRuntime.IInspectable! {
        try! NullResult.catch(self.oldValue)
    }

    /// The identifier field of the dependency property where the value change occurred.
    public var property: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Property())
        }
    }

    /// Gets the identifier for the dependency property where the value change occurred.
    public var property_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(self.property)
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXaml_IDependencyPropertyChangedEventArgs>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs")
            }
        }
    }
}