// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Provides a source object for properties that use a bitmap-format image source.
open class MicrosoftUIXamlMediaImaging_BitmapSource: MicrosoftUIXamlMedia_ImageSource, @unchecked Sendable {
    /// Provides base class initialization behavior for BitmapSource-derived classes.
    public init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXamlMediaImaging_BitmapSource.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._ibitmapSourceFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// Sets the source image for a BitmapSource by accessing a stream. Most callers should use SetSourceAsync instead.
    /// - Parameter streamSource: The stream source that sets the image source value.
    public func setSource(_ streamSource: WindowsStorageStreams_IRandomAccessStream?) throws {
        try _ibitmapSource.setSource(streamSource)
    }

    /// Sets the source image for a BitmapSource by accessing a stream and processing the result asynchronously.
    /// - Parameter streamSource: The stream source that sets the image source value.
    /// - Returns: An asynchronous handler called when the operation is complete.
    public func setSourceAsync(_ streamSource: WindowsStorageStreams_IRandomAccessStream?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_ibitmapSource.setSourceAsync(streamSource))
    }

    /// The height of the bitmap in pixels.
    public var pixelHeight: Swift.Int32 {
        get throws {
            try _ibitmapSource.get_PixelHeight()
        }
    }

    /// Gets the height of the bitmap in pixels.
    public var pixelHeight_: Swift.Int32 {
        try! self.pixelHeight
    }

    /// The width of the bitmap in pixels.
    public var pixelWidth: Swift.Int32 {
        get throws {
            try _ibitmapSource.get_PixelWidth()
        }
    }

    /// Gets the width of the bitmap in pixels.
    public var pixelWidth_: Swift.Int32 {
        try! self.pixelWidth
    }

    /// The identifier for the PixelHeight dependency property.
    public static var pixelHeightProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibitmapSourceStatics.get_PixelHeightProperty())
        }
    }

    /// Identifies the PixelHeight dependency property.
    public static var pixelHeightProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.pixelHeightProperty)
    }

    /// The identifier for the PixelWidth dependency property.
    public static var pixelWidthProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibitmapSourceStatics.get_PixelWidthProperty())
        }
    }

    /// Identifies the PixelWidth dependency property.
    public static var pixelWidthProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.pixelWidthProperty)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlMediaImaging_IBitmapSource>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIBitmapSource: COM.COMReference<SWRT_MicrosoftUIXamlMediaImaging_IBitmapSource>.Optional = .none

    internal var _ibitmapSource: COM.COMInterop<SWRT_MicrosoftUIXamlMediaImaging_IBitmapSource> {
        get throws {
            try _lazyIBitmapSource.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlMediaImaging_IBitmapSource.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Media.Imaging.BitmapSource")
            }
        }
    }

    private static var _lazyIBitmapSourceFactory: COM.COMReference<SWRT_MicrosoftUIXamlMediaImaging_IBitmapSourceFactory>.Optional = .none

    internal static var _ibitmapSourceFactory: COM.COMInterop<SWRT_MicrosoftUIXamlMediaImaging_IBitmapSourceFactory> {
        get throws {
            try _lazyIBitmapSourceFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlMediaImaging_IBitmapSourceFactory.self)).cast()
            }
        }
    }

    private static var _lazyIBitmapSourceStatics: COM.COMReference<SWRT_MicrosoftUIXamlMediaImaging_IBitmapSourceStatics>.Optional = .none

    internal static var _ibitmapSourceStatics: COM.COMInterop<SWRT_MicrosoftUIXamlMediaImaging_IBitmapSourceStatics> {
        get throws {
            try _lazyIBitmapSourceStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlMediaImaging_IBitmapSourceStatics.self)).cast()
            }
        }
    }
}