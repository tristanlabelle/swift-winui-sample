// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK

// MARK: Windows.Foundation.Collections.VectorChangedEventHandler<Object>

extension WindowsFoundationCollections_VectorChangedEventHandlerBinding {
    internal enum Object: WindowsRuntime.DelegateBinding {
        public typealias SwiftObject = WindowsFoundationCollections_VectorChangedEventHandler<WindowsRuntime.IInspectable?>
        public typealias ABIStruct = SWRT_WindowsFoundationCollections_VectorChangedEventHandler_IInspectable

        public static let typeName = "Windows.Foundation.Collections.VectorChangedEventHandler<Object>"

        public static var interfaceID: COM.COMInterfaceID {
            uuidof(ABIStruct.self)
        }

        public static var ireferenceID: COM.COMInterfaceID {
            COMInterfaceID(0xBDDA5A74, 0x0F2E, 0x5677, 0xBD8B, 0x77ACAF3B34BE)
        }

        public static var ireferenceArrayID: COM.COMInterfaceID {
            COMInterfaceID(0xA06F62CA, 0xB5BD, 0x58F2, 0x90E3, 0xA0B53B6FF113)
        }

        public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
            Import(_wrapping: consume reference).invoke
        }

        public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
            ExportedDelegate<Self>(object).toCOM()
        }

        private final class Import: COMImport<Object> {
            public func invoke(_ sender: WindowsFoundationCollections_IObservableVector<WindowsRuntime.IInspectable?>?, _ event: WindowsFoundationCollections_IVectorChangedEventArgs?) throws {
                try _interop.invoke(sender, event)
            }
        }

        public static var virtualTablePointer: UnsafeRawPointer {
            .init(withUnsafePointer(to: &virtualTable) { $0 })
        }

        private static var virtualTable = SWRT_WindowsFoundationCollections_VectorChangedEventHandler_IInspectable_VirtualTable(
            QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
            AddRef: { IUnknownVirtualTable.AddRef($0) },
            Release: { IUnknownVirtualTable.Release($0) },
            Invoke: { this, sender, event in _implement(this) { this in
                let sender_swift = WindowsFoundationCollections_IObservableVectorBinding.Object.fromABI(sender)
                let event_swift = WindowsFoundationCollections_IVectorChangedEventArgsBinding.fromABI(event)
                try this(sender_swift, event_swift)
            } }
        )
    }
}

// MARK: Windows.Foundation.Collections.VectorChangedEventHandler<Microsoft.UI.Xaml.Controls.GroupStyle>

extension WindowsFoundationCollections_VectorChangedEventHandlerBinding {
    internal enum GroupStyle: WindowsRuntime.DelegateBinding {
        public typealias SwiftObject = WindowsFoundationCollections_VectorChangedEventHandler<MicrosoftUIXamlControls_GroupStyle?>
        public typealias ABIStruct = SWRT_WindowsFoundationCollections_VectorChangedEventHandler_MicrosoftUIXamlControls_GroupStyle

        public static let typeName = "Windows.Foundation.Collections.VectorChangedEventHandler<Microsoft.UI.Xaml.Controls.GroupStyle>"

        public static var interfaceID: COM.COMInterfaceID {
            uuidof(ABIStruct.self)
        }

        public static var ireferenceID: COM.COMInterfaceID {
            COMInterfaceID(0xE16D9BAB, 0xD700, 0x5140, 0xAA14, 0xAE2208800A33)
        }

        public static var ireferenceArrayID: COM.COMInterfaceID {
            COMInterfaceID(0x3953DB7F, 0x436D, 0x5425, 0xB87C, 0x4DE4A30A6356)
        }

        public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
            Import(_wrapping: consume reference).invoke
        }

        public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
            ExportedDelegate<Self>(object).toCOM()
        }

        private final class Import: COMImport<GroupStyle> {
            public func invoke(_ sender: WindowsFoundationCollections_IObservableVector<MicrosoftUIXamlControls_GroupStyle?>?, _ event: WindowsFoundationCollections_IVectorChangedEventArgs?) throws {
                try _interop.invoke(sender, event)
            }
        }

        public static var virtualTablePointer: UnsafeRawPointer {
            .init(withUnsafePointer(to: &virtualTable) { $0 })
        }

        private static var virtualTable = SWRT_WindowsFoundationCollections_VectorChangedEventHandler_MicrosoftUIXamlControls_GroupStyle_VirtualTable(
            QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
            AddRef: { IUnknownVirtualTable.AddRef($0) },
            Release: { IUnknownVirtualTable.Release($0) },
            Invoke: { this, sender, event in _implement(this) { this in
                let sender_swift = WindowsFoundationCollections_IObservableVectorBinding.GroupStyle.fromABI(sender)
                let event_swift = WindowsFoundationCollections_IVectorChangedEventArgsBinding.fromABI(event)
                try this(sender_swift, event_swift)
            } }
        )
    }
}