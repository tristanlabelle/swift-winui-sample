// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Provides event data for the ListViewBase.ChoosingItemContainer event.
public final class MicrosoftUIXamlControls_ChoosingItemContainerEventArgs: WindowsRuntime.WinRTImport<MicrosoftUIXamlControls_ChoosingItemContainerEventArgsBinding>, @unchecked Sendable {
    /// Initializes a new instance of the ChoosingItemContainerEventArgs class.
    public init() throws {
        let _instance = COM.COMReference(transferringRef: try Self._iactivationFactory.activateInstance(binding: MicrosoftUIXamlControls_ChoosingItemContainerEventArgsBinding.self))
        super.init(_wrapping: consume _instance)
    }

    /// true if the container is ready for use; otherwise, false.
    public var isContainerPrepared: Swift.Bool {
        get throws {
            try _interop.get_IsContainerPrepared()
        }
    }

    /// Sets a value that indicates whether the container is ready for use.
    /// - Parameter newValue: true if the container is ready for use; otherwise, false.
    public func isContainerPrepared(_ value: Swift.Bool) throws {
        try _interop.put_IsContainerPrepared(value)
    }

    /// Gets or sets a value that indicates whether the container is ready for use.
    public var isContainerPrepared_: Swift.Bool {
        get {
            try! self.isContainerPrepared
        }
        set {
            try! self.isContainerPrepared(newValue)
        }
    }

    /// The data item associated with this ItemContainer.
    public var item: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Item())
        }
    }

    /// Gets the data item associated with this ItemContainer.
    public var item_: WindowsRuntime.IInspectable! {
        try! NullResult.catch(self.item)
    }

    /// The UI container that will be used to display the current data item.
    public var itemContainer: MicrosoftUIXamlControlsPrimitives_SelectorItem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ItemContainer())
        }
    }

    /// Sets the UI container that will be used to display the current data item.
    /// - Parameter newValue: The UI container that will be used to display the current data item.
    public func itemContainer(_ value: MicrosoftUIXamlControlsPrimitives_SelectorItem?) throws {
        try _interop.put_ItemContainer(value)
    }

    /// Gets or sets the UI container that will be used to display the current data item.
    public var itemContainer_: MicrosoftUIXamlControlsPrimitives_SelectorItem! {
        get {
            try! NullResult.catch(self.itemContainer)
        }
        set {
            try! self.itemContainer(newValue)
        }
    }

    /// The index in the ItemsSource of the data item for which a container is being selected.
    public var itemIndex: Swift.Int32 {
        get throws {
            try _interop.get_ItemIndex()
        }
    }

    /// Gets the index in the ItemsSource of the data item for which a container is being selected.
    public var itemIndex_: Swift.Int32 {
        try! self.itemIndex
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlControls_IChoosingItemContainerEventArgs>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs")
            }
        }
    }
}