// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK

public class MicrosoftUIXamlControls_ControlBinding: WindowsRuntime.ComposableClassBinding {
    public typealias SwiftObject = MicrosoftUIXamlControls_Control
    public typealias ABIStruct = SWRT_MicrosoftUIXamlControls_IControl

    public static let typeName = "Microsoft.UI.Xaml.Controls.Control"

    public static var interfaceID: COM.COMInterfaceID {
        uuidof(ABIStruct.self)
    }

    public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
        MicrosoftUIXamlControls_Control(_wrapping: consume reference)
    }

    internal enum VirtualTables {
        internal static var icontrolOverrides = SWRT_MicrosoftUIXamlControls_IControlOverrides_VirtualTable(
            QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
            AddRef: { IUnknownVirtualTable.AddRef($0) },
            Release: { IUnknownVirtualTable.Release($0) },
            GetIids: { IInspectableVirtualTable.GetIids($0, $1, $2) },
            GetRuntimeClassName: { IInspectableVirtualTable.GetRuntimeClassName($0, $1) },
            GetTrustLevel: { IInspectableVirtualTable.GetTrustLevel($0, $1) },
            OnPointerEntered: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerEntered(e_swift)
            } },
            OnPointerPressed: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerPressed(e_swift)
            } },
            OnPointerMoved: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerMoved(e_swift)
            } },
            OnPointerReleased: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerReleased(e_swift)
            } },
            OnPointerExited: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerExited(e_swift)
            } },
            OnPointerCaptureLost: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerCaptureLost(e_swift)
            } },
            OnPointerCanceled: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerCanceled(e_swift)
            } },
            OnPointerWheelChanged: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_PointerRoutedEventArgsBinding.fromABI(e)
                try this.onPointerWheelChanged(e_swift)
            } },
            OnTapped: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_TappedRoutedEventArgsBinding.fromABI(e)
                try this.onTapped(e_swift)
            } },
            OnDoubleTapped: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_DoubleTappedRoutedEventArgsBinding.fromABI(e)
                try this.onDoubleTapped(e_swift)
            } },
            OnHolding: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_HoldingRoutedEventArgsBinding.fromABI(e)
                try this.onHolding(e_swift)
            } },
            OnRightTapped: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_RightTappedRoutedEventArgsBinding.fromABI(e)
                try this.onRightTapped(e_swift)
            } },
            OnManipulationStarting: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_ManipulationStartingRoutedEventArgsBinding.fromABI(e)
                try this.onManipulationStarting(e_swift)
            } },
            OnManipulationInertiaStarting: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_ManipulationInertiaStartingRoutedEventArgsBinding.fromABI(e)
                try this.onManipulationInertiaStarting(e_swift)
            } },
            OnManipulationStarted: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_ManipulationStartedRoutedEventArgsBinding.fromABI(e)
                try this.onManipulationStarted(e_swift)
            } },
            OnManipulationDelta: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_ManipulationDeltaRoutedEventArgsBinding.fromABI(e)
                try this.onManipulationDelta(e_swift)
            } },
            OnManipulationCompleted: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_ManipulationCompletedRoutedEventArgsBinding.fromABI(e)
                try this.onManipulationCompleted(e_swift)
            } },
            OnKeyUp: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_KeyRoutedEventArgsBinding.fromABI(e)
                try this.onKeyUp(e_swift)
            } },
            OnKeyDown: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_KeyRoutedEventArgsBinding.fromABI(e)
                try this.onKeyDown(e_swift)
            } },
            OnPreviewKeyDown: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_KeyRoutedEventArgsBinding.fromABI(e)
                try this.onPreviewKeyDown(e_swift)
            } },
            OnPreviewKeyUp: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_KeyRoutedEventArgsBinding.fromABI(e)
                try this.onPreviewKeyUp(e_swift)
            } },
            OnGotFocus: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXaml_RoutedEventArgsBinding.fromABI(e)
                try this.onGotFocus(e_swift)
            } },
            OnLostFocus: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXaml_RoutedEventArgsBinding.fromABI(e)
                try this.onLostFocus(e_swift)
            } },
            OnCharacterReceived: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXamlInput_CharacterReceivedRoutedEventArgsBinding.fromABI(e)
                try this.onCharacterReceived(e_swift)
            } },
            OnDragEnter: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXaml_DragEventArgsBinding.fromABI(e)
                try this.onDragEnter(e_swift)
            } },
            OnDragLeave: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXaml_DragEventArgsBinding.fromABI(e)
                try this.onDragLeave(e_swift)
            } },
            OnDragOver: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXaml_DragEventArgsBinding.fromABI(e)
                try this.onDragOver(e_swift)
            } },
            OnDrop: { this, e in _implement(this) { this in
                let e_swift = MicrosoftUIXaml_DragEventArgsBinding.fromABI(e)
                try this.onDrop(e_swift)
            } }
        )
    }
}