// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Provides mappings between the items of an ItemsControl and their container elements.
public final class MicrosoftUIXamlControls_ItemContainerGenerator: WindowsRuntime.WinRTImport<MicrosoftUIXamlControls_ItemContainerGeneratorBinding>, @unchecked Sendable {
    /// > [!NOTE]
    /// > ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.

    /// Returns the item that corresponds to the specified, generated container.
    /// - Parameter container: The DependencyObject that corresponds to the item to be returned.
    /// - Returns: The contained item, or the container if it does not contain an item.
    public func itemFromContainer(_ container: MicrosoftUIXaml_DependencyObject?) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_interop.itemFromContainer(container))
    }

    /// > [!NOTE]
    /// > ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.

    /// Returns the container corresponding to the specified item.
    /// - Parameter item: The item to retrieve the container for.
    /// - Returns: A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, null.
    public func containerFromItem(_ item: WindowsRuntime.IInspectable?) throws -> MicrosoftUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_interop.containerFromItem(item))
    }

    /// > [!NOTE]
    /// > IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.

    /// Returns the index to the item that has the specified, generated container.
    /// - Parameter container: The generated container to retrieve the item index for.
    /// - Returns: The index to the item that corresponds to the specified generated container.
    public func indexFromContainer(_ container: MicrosoftUIXaml_DependencyObject?) throws -> Swift.Int32 {
        try _interop.indexFromContainer(container)
    }

    /// > [!NOTE]
    /// > ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.

    /// Returns the container for the item at the specified index within the ItemCollection.
    /// - Parameter index: The index of the item to retrieve.
    /// - Returns: The container for the item at the specified index within the item collection, if the item has a container; otherwise, null.
    public func containerFromIndex(_ index: Swift.Int32) throws -> MicrosoftUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_interop.containerFromIndex(index))
    }

    /// Returns the ItemContainerGenerator that is appropriate for use by the specified panel.
    /// - Parameter panel: The panel for which to return an appropriate ItemContainerGenerator.
    /// - Returns: An ItemContainerGenerator appropriate for use by the specified panel.
    public func getItemContainerGeneratorForPanel(_ panel: MicrosoftUIXamlControls_Panel?) throws -> MicrosoftUIXamlControls_ItemContainerGenerator {
        try COM.NullResult.unwrap(_interop.getItemContainerGeneratorForPanel(panel))
    }

    /// Prepares the generator to generate items, starting at the specified GeneratorPosition and moving in the specified GeneratorDirection. This method also controls whether or not to start at a generated (realized) item.
    /// - Parameter position: A GeneratorPosition that specifies the position of the item to start generating items at.
    /// - Parameter direction: Specifies the position of the item to start generating items at.
    /// - Parameter allowStartAtRealizedItem: Specifies whether to start at a generated (realized) item.
    public func startAt(_ position: MicrosoftUIXamlControlsPrimitives_GeneratorPosition, _ direction: MicrosoftUIXamlControlsPrimitives_GeneratorDirection, _ allowStartAtRealizedItem: Swift.Bool) throws {
        try _interop.startAt(position, direction, allowStartAtRealizedItem)
    }

    /// Disposes the ItemContainerGenerator. 

    public func stop() throws {
        try _interop.stop()
    }

    /// Returns the container element used to display the next item, and indicates whether the container element has been newly generated (realized).
    /// - Parameter isNewlyRealized: true if the returned DependencyObject is newly generated (realized); otherwise, false.
    /// - Returns: A DependencyObject that is the container element that is used to display the next item.
    public func generateNext(_ isNewlyRealized: inout Swift.Bool) throws -> MicrosoftUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_interop.generateNext(&isNewlyRealized))
    }

    /// Prepares the specified element as the container for the corresponding item.
    /// - Parameter container: The container to prepare. Typically, container is the result of the previous call to BooleanGenerateNext.
    public func prepareItemContainer(_ container: MicrosoftUIXaml_DependencyObject?) throws {
        try _interop.prepareItemContainer(container)
    }

    /// Removes all generated (realized) items.
    public func removeAll() throws {
        try _interop.removeAll()
    }

    /// Removes one or more generated (realized) items.
    /// - Parameter position: The index of the element to remove. position must refer to a previously generated (realized) item, which means its offset must be zero.
    /// - Parameter count: The number of elements to remove, starting at position.
    public func remove(_ position: MicrosoftUIXamlControlsPrimitives_GeneratorPosition, _ count: Swift.Int32) throws {
        try _interop.remove(position, count)
    }

    /// Gets the generated position of the item at the specified index.
    /// - Parameter itemIndex: The index of the item to retrieve the position of.
    /// - Returns: The position of the item as generated by the ItemContainerGenerator.
    public func generatorPositionFromIndex(_ itemIndex: Swift.Int32) throws -> MicrosoftUIXamlControlsPrimitives_GeneratorPosition {
        try _interop.generatorPositionFromIndex(itemIndex)
    }

    /// Returns the index that maps to the specified GeneratorPosition.
    /// - Parameter position: The GeneratorPosition for the desired index.
    /// - Returns: The index that maps to the specified GeneratorPosition.
    public func indexFromGeneratorPosition(_ position: MicrosoftUIXamlControlsPrimitives_GeneratorPosition) throws -> Swift.Int32 {
        try _interop.indexFromGeneratorPosition(position)
    }

    /// Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.
    /// - Parameter position: The zero-based index of the first element to reuse. position must refer to a previously generated (realized) item.
    /// - Parameter count: The number of elements to reuse, starting at position.
    public func recycle(_ position: MicrosoftUIXamlControlsPrimitives_GeneratorPosition, _ count: Swift.Int32) throws {
        try _interop.recycle(position, count)
    }

    /// Occurs when the contents of the items collection changes.
    @discardableResult
    public func itemsChanged(adding handler: MicrosoftUIXamlControlsPrimitives_ItemsChangedEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ItemsChanged(handler)
        return WindowsRuntime.EventRegistration(source: self, token: _token, remover: { this, token in try (this as! Self).itemsChanged(removing: token) })
    }

    public func itemsChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ItemsChanged(token)
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlControls_IItemContainerGenerator>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Controls.ItemContainerGenerator")
            }
        }
    }
}