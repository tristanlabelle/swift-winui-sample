// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Enables custom item style selection logic as a function of the content data and its specific item container.
open class MicrosoftUIXamlControls_StyleSelector: WindowsRuntime.ComposableClass, @unchecked Sendable {
    /// Initializes a new instance of the StyleSelector class.
    public init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXamlControls_StyleSelector.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._istyleSelectorFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// Returns a specific Style based on custom logic.
    /// - Parameter item: The content.
    /// - Parameter container: The element to which the style is applied.
    /// - Returns: An application-specific style to apply; may also return null.
    public func selectStyle(_ item: WindowsRuntime.IInspectable?, _ container: MicrosoftUIXaml_DependencyObject?) throws -> MicrosoftUIXaml_Style {
        try COM.NullResult.unwrap(_istyleSelector.selectStyle(item, container))
    }

    /// When implemented by a derived class, returns a specific Style based on custom logic.
    /// - Parameter item: The content.
    /// - Parameter container: The element to which the style is applied.
    /// - Returns: An application-specific style to apply; may also return null.
    open func selectStyleCore(_ item: WindowsRuntime.IInspectable?, _ container: MicrosoftUIXaml_DependencyObject?) throws -> MicrosoftUIXaml_Style {
        try COM.NullResult.unwrap(_istyleSelectorOverrides.selectStyleCore(item, container))
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlControls_IStyleSelector>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIStyleSelector: COM.COMReference<SWRT_MicrosoftUIXamlControls_IStyleSelector>.Optional = .none

    internal var _istyleSelector: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IStyleSelector> {
        get throws {
            try _lazyIStyleSelector.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlControls_IStyleSelector.self)).cast()
            }
        }
    }

    private var _lazyIStyleSelectorOverrides: COM.COMReference<SWRT_MicrosoftUIXamlControls_IStyleSelectorOverrides>.Optional = .none

    internal var _istyleSelectorOverrides: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IStyleSelectorOverrides> {
        get throws {
            try _lazyIStyleSelectorOverrides.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlControls_IStyleSelectorOverrides.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Controls.StyleSelector")
            }
        }
    }

    private static var _lazyIStyleSelectorFactory: COM.COMReference<SWRT_MicrosoftUIXamlControls_IStyleSelectorFactory>.Optional = .none

    internal static var _istyleSelectorFactory: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IStyleSelectorFactory> {
        get throws {
            try _lazyIStyleSelectorFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlControls_IStyleSelectorFactory.self)).cast()
            }
        }
    }

    // MARK: Override support

    private var _istyleSelectorOverrides_outer: COM.COMEmbedding = .uninitialized

    public override func _queryOverridesInterface(_ id: COM.COMInterfaceID) throws -> COM.IUnknownReference.Optional {
        if id == uuidof(SWRT_MicrosoftUIXamlControls_IStyleSelectorOverrides.self) {
            if !_istyleSelectorOverrides_outer.isInitialized {
                _istyleSelectorOverrides_outer.initialize(embedder: self,
                    virtualTable: &MicrosoftUIXamlControls_StyleSelectorBinding.VirtualTables.istyleSelectorOverrides)
            }
            return .init(_istyleSelectorOverrides_outer.toCOM())
        }
        return .none
    }
}