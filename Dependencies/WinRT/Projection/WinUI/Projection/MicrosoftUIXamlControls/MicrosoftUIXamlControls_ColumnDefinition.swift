// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Defines column-specific properties that apply to Grid objects.
public final class MicrosoftUIXamlControls_ColumnDefinition: MicrosoftUIXaml_DependencyObject, @unchecked Sendable {
    /// Initializes a new instance of the ColumnDefinition class.
    public override init() throws {
        let _instance = COM.COMReference(transferringRef: try Self._iactivationFactory.activateInstance(binding: MicrosoftUIXamlControls_ColumnDefinitionBinding.self))
        super.init(_wrapping: _instance.cast()) // Transitively casts down to IInspectable
    }

    /// A Double that represents the actual calculated width in pixels. The default is 0.
    public var actualWidth: Swift.Double {
        get throws {
            try _icolumnDefinition.get_ActualWidth()
        }
    }

    /// Gets a value that represents the actual calculated width of a ColumnDefinition.
    public var actualWidth_: Swift.Double {
        try! self.actualWidth
    }

    /// A Double.
    public var maxWidth: Swift.Double {
        get throws {
            try _icolumnDefinition.get_MaxWidth()
        }
    }

    /// Sets a value that represents the maximum width of a ColumnDefinition.
    /// - Parameter newValue: A Double.
    public func maxWidth(_ value: Swift.Double) throws {
        try _icolumnDefinition.put_MaxWidth(value)
    }

    /// Gets or sets a value that represents the maximum width of a ColumnDefinition.
    public var maxWidth_: Swift.Double {
        get {
            try! self.maxWidth
        }
        set {
            try! self.maxWidth(newValue)
        }
    }

    /// A Double that represents the minimum width in pixels. The default is 0.
    public var minWidth: Swift.Double {
        get throws {
            try _icolumnDefinition.get_MinWidth()
        }
    }

    /// Sets a value that represents the minimum width of a ColumnDefinition.
    /// - Parameter newValue: A Double that represents the minimum width in pixels. The default is 0.
    public func minWidth(_ value: Swift.Double) throws {
        try _icolumnDefinition.put_MinWidth(value)
    }

    /// Gets or sets a value that represents the minimum width of a ColumnDefinition.
    public var minWidth_: Swift.Double {
        get {
            try! self.minWidth
        }
        set {
            try! self.minWidth(newValue)
        }
    }

    /// The GridLength that represents the width of the column. The default value is a GridLength representing a "1*" sizing.
    public var width: MicrosoftUIXaml_GridLength {
        get throws {
            try _icolumnDefinition.get_Width()
        }
    }

    /// Gets the calculated width of a ColumnDefinition element, or sets the GridLength value of a column that is defined by the ColumnDefinition. This is the content property of ColumnDefinition.
    /// - Parameter newValue: The GridLength that represents the width of the column. The default value is a GridLength representing a "1*" sizing.
    public func width(_ value: MicrosoftUIXaml_GridLength) throws {
        try _icolumnDefinition.put_Width(value)
    }

    /// Gets the calculated width of a ColumnDefinition element, or sets the GridLength value of a column that is defined by the ColumnDefinition. This is the content property of ColumnDefinition.
    public var width_: MicrosoftUIXaml_GridLength {
        get {
            try! self.width
        }
        set {
            try! self.width(newValue)
        }
    }

    /// The identifier for the MaxWidth dependency property.
    public static var maxWidthProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icolumnDefinitionStatics.get_MaxWidthProperty())
        }
    }

    /// Identifies the MaxWidth dependency property.
    public static var maxWidthProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.maxWidthProperty)
    }

    /// The identifier for the MinWidth dependency property.
    public static var minWidthProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icolumnDefinitionStatics.get_MinWidthProperty())
        }
    }

    /// Identifies the MinWidth dependency property.
    public static var minWidthProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.minWidthProperty)
    }

    /// The identifier for the Width dependency property.
    public static var widthProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icolumnDefinitionStatics.get_WidthProperty())
        }
    }

    /// Identifies the Width dependency property.
    public static var widthProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.widthProperty)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlControls_IColumnDefinition>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyIColumnDefinition: COM.COMReference<SWRT_MicrosoftUIXamlControls_IColumnDefinition>.Optional = .none

    internal var _icolumnDefinition: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IColumnDefinition> {
        get throws {
            try _lazyIColumnDefinition.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_MicrosoftUIXamlControls_IColumnDefinition.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Controls.ColumnDefinition")
            }
        }
    }

    private static var _lazyIColumnDefinitionStatics: COM.COMReference<SWRT_MicrosoftUIXamlControls_IColumnDefinitionStatics>.Optional = .none

    internal static var _icolumnDefinitionStatics: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IColumnDefinitionStatics> {
        get throws {
            try _lazyIColumnDefinitionStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlControls_IColumnDefinitionStatics.self)).cast()
            }
        }
    }
}