// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Provides a base class for all Panel elements. Use Panel elements to position and arrange child objects in a UI page.
open class MicrosoftUIXamlControls_Panel: MicrosoftUIXaml_FrameworkElement, @unchecked Sendable {
    /// Provides base class initialization behavior for Panel derived classes.
    public override init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXamlControls_Panel.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._ipanelFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// The brush that fills the panel content area. The default is null, (a null brush) which is evaluated as Transparent for rendering.
    public var background: MicrosoftUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_ipanel.get_Background())
        }
    }

    /// Sets a Brush that fills the panel content area.
    /// - Parameter newValue: The brush that fills the panel content area. The default is null, (a null brush) which is evaluated as Transparent for rendering.
    public func background(_ value: MicrosoftUIXamlMedia_Brush?) throws {
        try _ipanel.put_Background(value)
    }

    /// Gets or sets a Brush that fills the panel content area.
    public var background_: MicrosoftUIXamlMedia_Brush! {
        get {
            try! NullResult.catch(self.background)
        }
        set {
            try! self.background(newValue)
        }
    }

    /// An instance of BrushTransition to automatically animate changes to the Background; otherwise, null. The default is null.
    public var backgroundTransition: MicrosoftUIXaml_BrushTransition {
        get throws {
            try COM.NullResult.unwrap(_ipanel.get_BackgroundTransition())
        }
    }

    /// Sets an instance of BrushTransition to automatically animate changes to the Background property.
    /// - Parameter newValue: An instance of BrushTransition to automatically animate changes to the Background; otherwise, null. The default is null.
    public func backgroundTransition(_ value: MicrosoftUIXaml_BrushTransition?) throws {
        try _ipanel.put_BackgroundTransition(value)
    }

    /// Gets or sets an instance of BrushTransition to automatically animate changes to the Background property.
    public var backgroundTransition_: MicrosoftUIXaml_BrushTransition! {
        get {
            try! NullResult.catch(self.backgroundTransition)
        }
        set {
            try! self.backgroundTransition(newValue)
        }
    }

    /// The collection of child objects. The default is an empty collection.
    public var children: MicrosoftUIXamlControls_UIElementCollection {
        get throws {
            try COM.NullResult.unwrap(_ipanel.get_Children())
        }
    }

    /// Gets the collection of child elements of the panel.
    public var children_: MicrosoftUIXamlControls_UIElementCollection! {
        try! NullResult.catch(self.children)
    }

    /// The strongly typed collection of Transition style elements.
    public var childrenTransitions: MicrosoftUIXamlMediaAnimation_TransitionCollection {
        get throws {
            try COM.NullResult.unwrap(_ipanel.get_ChildrenTransitions())
        }
    }

    /// Sets the collection of Transition style elements that apply to child content of a Panel subclass.
    /// - Parameter newValue: The strongly typed collection of Transition style elements.
    public func childrenTransitions(_ value: MicrosoftUIXamlMediaAnimation_TransitionCollection?) throws {
        try _ipanel.put_ChildrenTransitions(value)
    }

    /// Gets or sets the collection of Transition style elements that apply to child content of a Panel subclass.
    public var childrenTransitions_: MicrosoftUIXamlMediaAnimation_TransitionCollection! {
        get {
            try! NullResult.catch(self.childrenTransitions)
        }
        set {
            try! self.childrenTransitions(newValue)
        }
    }

    /// true if this instance of Panel is an items host; otherwise, false. The default is false.
    public var isItemsHost: Swift.Bool {
        get throws {
            try _ipanel.get_IsItemsHost()
        }
    }

    /// Gets a value that indicates whether this Panel is a container for UI items that are generated by an ItemsControl.
    public var isItemsHost_: Swift.Bool {
        try! self.isItemsHost
    }

    /// The identifier for the Background  dependency property.
    public static var backgroundProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipanelStatics.get_BackgroundProperty())
        }
    }

    /// Identifies the Background  dependency property.
    public static var backgroundProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.backgroundProperty)
    }

    /// The identifier for the ChildrenTransitions dependency property.
    public static var childrenTransitionsProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipanelStatics.get_ChildrenTransitionsProperty())
        }
    }

    /// Identifies the ChildrenTransitions dependency property.
    public static var childrenTransitionsProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.childrenTransitionsProperty)
    }

    /// The identifier for the IsItemsHost dependency property.
    public static var isItemsHostProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipanelStatics.get_IsItemsHostProperty())
        }
    }

    /// Identifies the IsItemsHost dependency property.
    public static var isItemsHostProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.isItemsHostProperty)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlControls_IPanel>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIPanel: COM.COMReference<SWRT_MicrosoftUIXamlControls_IPanel>.Optional = .none

    internal var _ipanel: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IPanel> {
        get throws {
            try _lazyIPanel.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlControls_IPanel.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Controls.Panel")
            }
        }
    }

    private static var _lazyIPanelFactory: COM.COMReference<SWRT_MicrosoftUIXamlControls_IPanelFactory>.Optional = .none

    internal static var _ipanelFactory: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IPanelFactory> {
        get throws {
            try _lazyIPanelFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlControls_IPanelFactory.self)).cast()
            }
        }
    }

    private static var _lazyIPanelStatics: COM.COMReference<SWRT_MicrosoftUIXamlControls_IPanelStatics>.Optional = .none

    internal static var _ipanelStatics: COM.COMInterop<SWRT_MicrosoftUIXamlControls_IPanelStatics> {
        get throws {
            try _lazyIPanelStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlControls_IPanelStatics.self)).cast()
            }
        }
    }
}