// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Specifies how a target UI element interprets manipulation events. This enumeration is flagwise, so you can set multiple modes for the ManipulationMode property.
public struct MicrosoftUIXamlInput_ManipulationModes: CStyleEnum {
    public var rawValue: Swift.UInt32

    public init(rawValue: Swift.UInt32 = 0) {
        self.rawValue = rawValue
    }

    /// Do not present graphic interaction with manipulation events.
    public static let none = Self()

    /// Permit manipulation actions that translate the target on the X axis.
    public static let translateX = Self(rawValue: 1)

    /// Permit manipulation actions that translate the target on the Y axis.
    public static let translateY = Self(rawValue: 2)

    /// Permit manipulation actions that translate the target on the X axis but using a rails mode.
    public static let translateRailsX = Self(rawValue: 4)

    /// Permit manipulation actions that translate the target on the Y axis but using a rails mode.
    public static let translateRailsY = Self(rawValue: 8)

    /// Permit manipulation actions that rotate the target.
    public static let rotate = Self(rawValue: 16)

    /// Permit manipulation actions that scale the target.
    public static let scale = Self(rawValue: 32)

    /// Apply inertia to translate actions.
    public static let translateInertia = Self(rawValue: 64)

    /// Apply inertia to rotate actions.
    public static let rotateInertia = Self(rawValue: 128)

    /// Apply inertia to scale actions.
    public static let scaleInertia = Self(rawValue: 256)

    /// Enable all manipulation interaction modes except those supported through Direct Manipulation
    public static let all = Self(rawValue: 65535)

    /// Enable system-driven touch interactions supported through Direct Manipulation.
    public static let system = Self(rawValue: 65536)
}

// MARK: OptionSet and bitwise operators

extension MicrosoftUIXamlInput_ManipulationModes: OptionSet {
    public static prefix func ~(value: Self) -> Self {
        Self(rawValue: ~value.rawValue)
    }

    public static func |(lhs: Self, rhs: Self) -> Self {
        Self(rawValue: lhs.rawValue | rhs.rawValue)
    }

    public static func |=(lhs: inout Self, rhs: Self) {
        lhs = Self(rawValue: lhs.rawValue | rhs.rawValue)
    }

    public static func &(lhs: Self, rhs: Self) -> Self {
        Self(rawValue: lhs.rawValue & rhs.rawValue)
    }

    public static func &=(lhs: inout Self, rhs: Self) {
        lhs = Self(rawValue: lhs.rawValue & rhs.rawValue)
    }

    public static func ^(lhs: Self, rhs: Self) -> Self {
        Self(rawValue: lhs.rawValue ^ rhs.rawValue)
    }

    public static func ^=(lhs: inout Self, rhs: Self) {
        lhs = Self(rawValue: lhs.rawValue ^ rhs.rawValue)
    }
}