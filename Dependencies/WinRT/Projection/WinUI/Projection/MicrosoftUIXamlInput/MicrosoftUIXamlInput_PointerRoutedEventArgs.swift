// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Contains the arguments returned by the last pointer event message.
public final class MicrosoftUIXamlInput_PointerRoutedEventArgs: MicrosoftUIXaml_RoutedEventArgs, @unchecked Sendable {
    /// Retrieves a PointerPoint object that provides basic info about the pointer associated with the event.
    /// - Parameter relativeTo: Any UIElement-derived object that is connected to the same object tree. To specify the object relative to the overall coordinate system, use a relativeTo value of null.
    /// - Returns: A PointerPoint value that represents the pointer point associated with this event. If null was passed as relativeTo, the coordinates are in the frame of reference of the overall window. If a relativeTo value other than null was passed, the coordinates are relative to the object referenced by relativeTo.
    public func getCurrentPoint(_ relativeTo: MicrosoftUIXaml_UIElement?) throws -> MicrosoftUIInput_PointerPoint {
        try COM.NullResult.unwrap(_ipointerRoutedEventArgs.getCurrentPoint(relativeTo))
    }

    /// Retrieves a collection of PointerPoint objects that represent the pointer history from the last pointer event up to and including the current pointer event. Each PointerPoint in the collection provides basic info about the pointer associated with the event. The last item in the collection is equivalent to the PointerPoint object returned by GetCurrentPoint.
    /// - Parameter relativeTo: Provides the context for the pointer data. Can be any UIElement-derived object that is connected to the same object tree. If null, location coordinates are in the context of the app.
    /// - Returns: The collection of PointerPoint objects corresponding to the pointer history associated with the event. If relativeTo is null, location coordinates are in the context of the app. Otherwise, the coordinates are relative to the object referenced by relativeTo.
    public func getIntermediatePoints(_ relativeTo: MicrosoftUIXaml_UIElement?) throws -> WindowsFoundationCollections_IVector<MicrosoftUIInput_PointerPoint?> {
        try COM.NullResult.unwrap(_ipointerRoutedEventArgs.getIntermediatePoints(relativeTo))
    }

    /// true to mark the routed event handled. false to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is false.
    public var handled: Swift.Bool {
        get throws {
            try _ipointerRoutedEventArgs.get_Handled()
        }
    }

    /// Sets a value that marks the routed event as handled, and prevents most handlers along the event route from handling the same event again.
    /// - Parameter newValue: true to mark the routed event handled. false to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is false.
    public func handled(_ value: Swift.Bool) throws {
        try _ipointerRoutedEventArgs.put_Handled(value)
    }

    /// Gets or sets a value that marks the routed event as handled, and prevents most handlers along the event route from handling the same event again.
    public var handled_: Swift.Bool {
        get {
            try! self.handled
        }
        set {
            try! self.handled(newValue)
        }
    }

    /// true if the event was generated by the platform; otherwise, false.
    public var isGenerated: Swift.Bool {
        get throws {
            try _ipointerRoutedEventArgs.get_IsGenerated()
        }
    }

    /// Gets a value that indicates whether the pointer event occurred from direct interaction with an object by the user, or was generated by the platform based on changes to the UI of the application.
    public var isGenerated_: Swift.Bool {
        try! self.isGenerated
    }

    /// A value or values of the enumeration.

    public var keyModifiers: WindowsSystem_VirtualKeyModifiers {
        get throws {
            try _ipointerRoutedEventArgs.get_KeyModifiers()
        }
    }

    /// Gets a value that indicates which key modifiers were active at the time that the pointer event was initiated.
    public var keyModifiers_: WindowsSystem_VirtualKeyModifiers {
        try! self.keyModifiers
    }

    /// A pointer token.
    public var pointer: MicrosoftUIXamlInput_Pointer {
        get throws {
            try COM.NullResult.unwrap(_ipointerRoutedEventArgs.get_Pointer())
        }
    }

    /// Gets a reference to a pointer token.
    public var pointer_: MicrosoftUIXamlInput_Pointer! {
        try! NullResult.catch(self.pointer)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlInput_IPointerRoutedEventArgs>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    private var _lazyIPointerRoutedEventArgs: COM.COMReference<SWRT_MicrosoftUIXamlInput_IPointerRoutedEventArgs>.Optional = .none

    internal var _ipointerRoutedEventArgs: COM.COMInterop<SWRT_MicrosoftUIXamlInput_IPointerRoutedEventArgs> {
        get throws {
            try _lazyIPointerRoutedEventArgs.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_MicrosoftUIXamlInput_IPointerRoutedEventArgs.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Input.PointerRoutedEventArgs")
            }
        }
    }
}