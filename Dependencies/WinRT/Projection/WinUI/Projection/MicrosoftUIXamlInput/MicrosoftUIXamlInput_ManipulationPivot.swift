// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Specifies how a rotation occurs with one point of user input.
public final class MicrosoftUIXamlInput_ManipulationPivot: WindowsRuntime.WinRTImport<MicrosoftUIXamlInput_ManipulationPivotBinding>, @unchecked Sendable {
    /// Initializes a new instance of the ManipulationPivot class with no initial values.
    public init() throws {
        let _instance = COM.COMReference(transferringRef: try Self._iactivationFactory.activateInstance(binding: MicrosoftUIXamlInput_ManipulationPivotBinding.self))
        super.init(_wrapping: consume _instance)
    }

    /// Initializes a new instance of the ManipulationPivot class with the specified center and radius values.
    /// - Parameter center: The center point of the pivot.
    /// - Parameter radius: The pivot radius.
    public init(_ center: WindowsFoundation_Point, _ radius: Swift.Double) throws {
        let _instance = try Self._imanipulationPivotFactory.createInstanceWithCenterAndRadius(center, radius)
        super.init(_wrapping: consume _instance)
    }

    /// The center point for rotation manipulations.
    public var center: WindowsFoundation_Point {
        get throws {
            try _interop.get_Center()
        }
    }

    /// Sets the center point for rotation manipulations.
    /// - Parameter newValue: The center point for rotation manipulations.
    public func center(_ value: WindowsFoundation_Point) throws {
        try _interop.put_Center(value)
    }

    /// Gets or sets the center point for rotation manipulations.
    public var center_: WindowsFoundation_Point {
        get {
            try! self.center
        }
        set {
            try! self.center(newValue)
        }
    }

    /// A value in pixels.
    public var radius: Swift.Double {
        get throws {
            try _interop.get_Radius()
        }
    }

    /// Sets the effective radius of rotation for rotation manipulations.
    /// - Parameter newValue: A value in pixels.
    public func radius(_ value: Swift.Double) throws {
        try _interop.put_Radius(value)
    }

    /// Gets or sets the effective radius of rotation for rotation manipulations.
    public var radius_: Swift.Double {
        get {
            try! self.radius
        }
        set {
            try! self.radius(newValue)
        }
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlInput_IManipulationPivot>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Input.ManipulationPivot")
            }
        }
    }

    private static var _lazyIManipulationPivotFactory: COM.COMReference<SWRT_MicrosoftUIXamlInput_IManipulationPivotFactory>.Optional = .none

    internal static var _imanipulationPivotFactory: COM.COMInterop<SWRT_MicrosoftUIXamlInput_IManipulationPivotFactory> {
        get throws {
            try _lazyIManipulationPivotFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlInput_IManipulationPivotFactory.self)).cast()
            }
        }
    }
}