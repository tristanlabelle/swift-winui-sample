// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Controls the deceleration of a resizing manipulation during inertia.
public final class MicrosoftUIXamlInput_InertiaExpansionBehavior: WindowsRuntime.WinRTImport<MicrosoftUIXamlInput_InertiaExpansionBehaviorBinding>, @unchecked Sendable {
    /// The rate that resizing slows.
    public var desiredDeceleration: Swift.Double {
        get throws {
            try _interop.get_DesiredDeceleration()
        }
    }

    /// Sets the rate that resizing slows.
    /// - Parameter newValue: The rate that resizing slows.
    public func desiredDeceleration(_ value: Swift.Double) throws {
        try _interop.put_DesiredDeceleration(value)
    }

    /// Gets or sets the rate that resizing slows.
    public var desiredDeceleration_: Swift.Double {
        get {
            try! self.desiredDeceleration
        }
        set {
            try! self.desiredDeceleration(newValue)
        }
    }

    /// The amount the element resizes at the end of inertia.
    public var desiredExpansion: Swift.Double {
        get throws {
            try _interop.get_DesiredExpansion()
        }
    }

    /// Sets the amount the element resizes at the end of inertia.
    /// - Parameter newValue: The amount the element resizes at the end of inertia.
    public func desiredExpansion(_ value: Swift.Double) throws {
        try _interop.put_DesiredExpansion(value)
    }

    /// Gets or sets the amount the element resizes at the end of inertia.
    public var desiredExpansion_: Swift.Double {
        get {
            try! self.desiredExpansion
        }
        set {
            try! self.desiredExpansion(newValue)
        }
    }

    // MARK: Implementation details

    public required init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlInput_IInertiaExpansionBehavior>) {
        super.init(_wrapping: consume inner)
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Input.InertiaExpansionBehavior")
            }
        }
    }
}