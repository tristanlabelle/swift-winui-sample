// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Represents a visual behavior that occurs for predefined actions or state changes. Specific theme transitions (various Transition derived classes) can be applied to individual elements using the UIElement.Transitions property, or applied for scenario-specific theme transition properties such as ContentControl.ContentTransitions.
open class MicrosoftUIXamlMediaAnimation_Transition: MicrosoftUIXaml_DependencyObject, @unchecked Sendable {
    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlMediaAnimation_ITransition>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyITransition: COM.COMReference<SWRT_MicrosoftUIXamlMediaAnimation_ITransition>.Optional = .none

    internal var _itransition: COM.COMInterop<SWRT_MicrosoftUIXamlMediaAnimation_ITransition> {
        get throws {
            try _lazyITransition.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlMediaAnimation_ITransition.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Media.Animation.Transition")
            }
        }
    }

    private static var _lazyITransitionFactory: COM.COMReference<SWRT_MicrosoftUIXamlMediaAnimation_ITransitionFactory>.Optional = .none

    internal static var _itransitionFactory: COM.COMInterop<SWRT_MicrosoftUIXamlMediaAnimation_ITransitionFactory> {
        get throws {
            try _lazyITransitionFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlMediaAnimation_ITransitionFactory.self)).cast()
            }
        }
    }
}