// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Represents the options used to show a flyout.
open class MicrosoftUIXamlControlsPrimitives_FlyoutShowOptions: WindowsRuntime.ComposableClass, @unchecked Sendable {
    /// Initializes a new instance of the FlyoutShowOptions class.
    public init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXamlControlsPrimitives_FlyoutShowOptions.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._iflyoutShowOptionsFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// The rectangular area that the flyout tries to not overlap.
    public var exclusionRect: WindowsFoundation_Rect? {
        get throws {
            try _iflyoutShowOptions.get_ExclusionRect()
        }
    }

    /// Sets a rectangular area that the flyout tries to not overlap.
    /// - Parameter newValue: The rectangular area that the flyout tries to not overlap.
    public func exclusionRect(_ value: WindowsFoundation_Rect?) throws {
        try _iflyoutShowOptions.put_ExclusionRect(value)
    }

    /// Gets or sets a rectangular area that the flyout tries to not overlap.
    public var exclusionRect_: WindowsFoundation_Rect? {
        get {
            try! self.exclusionRect
        }
        set {
            try! self.exclusionRect(newValue)
        }
    }

    /// A value of the enumeration that indicates where the flyout is placed in relation to it's target element.
    public var placement: MicrosoftUIXamlControlsPrimitives_FlyoutPlacementMode {
        get throws {
            try _iflyoutShowOptions.get_Placement()
        }
    }

    /// Sets a value that indicates where the flyout is placed in relation to it's target element.
    /// - Parameter newValue: A value of the enumeration that indicates where the flyout is placed in relation to it's target element.
    public func placement(_ value: MicrosoftUIXamlControlsPrimitives_FlyoutPlacementMode) throws {
        try _iflyoutShowOptions.put_Placement(value)
    }

    /// Gets or sets a value that indicates where the flyout is placed in relation to it's target element.
    public var placement_: MicrosoftUIXamlControlsPrimitives_FlyoutPlacementMode {
        get {
            try! self.placement
        }
        set {
            try! self.placement(newValue)
        }
    }

    /// The position where the flyout opens.
    public var position: WindowsFoundation_Point? {
        get throws {
            try _iflyoutShowOptions.get_Position()
        }
    }

    /// Sets the position where the flyout opens.
    /// - Parameter newValue: The position where the flyout opens.
    public func position(_ value: WindowsFoundation_Point?) throws {
        try _iflyoutShowOptions.put_Position(value)
    }

    /// Gets or sets the position where the flyout opens.
    public var position_: WindowsFoundation_Point? {
        get {
            try! self.position
        }
        set {
            try! self.position(newValue)
        }
    }

    /// A value of the enumeration that indicates how the flyout behaves when opened.
    public var showMode: MicrosoftUIXamlControlsPrimitives_FlyoutShowMode {
        get throws {
            try _iflyoutShowOptions.get_ShowMode()
        }
    }

    /// Sets a value that indicates how the flyout behaves when opened.
    /// - Parameter newValue: A value of the enumeration that indicates how the flyout behaves when opened.
    public func showMode(_ value: MicrosoftUIXamlControlsPrimitives_FlyoutShowMode) throws {
        try _iflyoutShowOptions.put_ShowMode(value)
    }

    /// Gets or sets a value that indicates how the flyout behaves when opened.
    public var showMode_: MicrosoftUIXamlControlsPrimitives_FlyoutShowMode {
        get {
            try! self.showMode
        }
        set {
            try! self.showMode(newValue)
        }
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlControlsPrimitives_IFlyoutShowOptions>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyIFlyoutShowOptions: COM.COMReference<SWRT_MicrosoftUIXamlControlsPrimitives_IFlyoutShowOptions>.Optional = .none

    internal var _iflyoutShowOptions: COM.COMInterop<SWRT_MicrosoftUIXamlControlsPrimitives_IFlyoutShowOptions> {
        get throws {
            try _lazyIFlyoutShowOptions.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlControlsPrimitives_IFlyoutShowOptions.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions")
            }
        }
    }

    private static var _lazyIFlyoutShowOptionsFactory: COM.COMReference<SWRT_MicrosoftUIXamlControlsPrimitives_IFlyoutShowOptionsFactory>.Optional = .none

    internal static var _iflyoutShowOptionsFactory: COM.COMInterop<SWRT_MicrosoftUIXamlControlsPrimitives_IFlyoutShowOptionsFactory> {
        get throws {
            try _lazyIFlyoutShowOptionsFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlControlsPrimitives_IFlyoutShowOptionsFactory.self)).cast()
            }
        }
    }
}