// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinUI_ABI
import UWP
import WindowsAppSDK


/// Provides a base class for item types in a selection control.
open class MicrosoftUIXamlControlsPrimitives_SelectorItem: MicrosoftUIXamlControls_ContentControl, @unchecked Sendable {
    /// Provides base class initialization behavior for SelectorItem-derived classes.
    public override init() throws {
        try super.init(_compose: Self.self != MicrosoftUIXamlControlsPrimitives_SelectorItem.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try Self._iselectorItemFactory.createInstance(baseInterface, &innerInterface)
        }
    }

    /// true if the item is selected; otherwise, false.
    public var isSelected: Swift.Bool {
        get throws {
            try _iselectorItem.get_IsSelected()
        }
    }

    /// Sets a value that indicates whether the item is selected in a selector.
    /// - Parameter newValue: true if the item is selected; otherwise, false.
    public func isSelected(_ value: Swift.Bool) throws {
        try _iselectorItem.put_IsSelected(value)
    }

    /// Gets or sets a value that indicates whether the item is selected in a selector.
    public var isSelected_: Swift.Bool {
        get {
            try! self.isSelected
        }
        set {
            try! self.isSelected(newValue)
        }
    }

    /// The identifier for the IsSelected dependency property.
    public static var isSelectedProperty: MicrosoftUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iselectorItemStatics.get_IsSelectedProperty())
        }
    }

    /// Identifies the IsSelected dependency property.
    public static var isSelectedProperty_: MicrosoftUIXaml_DependencyProperty! {
        try! NullResult.catch(Self.isSelectedProperty)
    }

    // MARK: Implementation details

    public init(_wrapping inner: consuming COM.COMReference<SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItem>) {
        super.init(_wrapping: inner.cast()) // Transitively casts down to IInspectable
    }

    public override init<ABIStruct>(_compose: Swift.Bool, _factory: ComposableFactory<ABIStruct>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    private var _lazyISelectorItem: COM.COMReference<SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItem>.Optional = .none

    internal var _iselectorItem: COM.COMInterop<SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItem> {
        get throws {
            try _lazyISelectorItem.lazyInitInterop {
                try _queryInnerInterface(uuidof(SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItem.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Microsoft.UI.Xaml.Controls.Primitives.SelectorItem")
            }
        }
    }

    private static var _lazyISelectorItemFactory: COM.COMReference<SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItemFactory>.Optional = .none

    internal static var _iselectorItemFactory: COM.COMInterop<SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItemFactory> {
        get throws {
            try _lazyISelectorItemFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItemFactory.self)).cast()
            }
        }
    }

    private static var _lazyISelectorItemStatics: COM.COMReference<SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItemStatics>.Optional = .none

    internal static var _iselectorItemStatics: COM.COMInterop<SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItemStatics> {
        get throws {
            try _lazyISelectorItemStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_MicrosoftUIXamlControlsPrimitives_ISelectorItemStatics.self)).cast()
            }
        }
    }
}